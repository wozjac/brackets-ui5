{
    "sap.f": {
        "Avatar": {
            "attributes": [{
                "name": "src",
                "documentation": "Determines the path to the desired image or icon."
            }, {
                "name": "initials",
                "documentation": "Defines the displayed initials."
            }, {
                "name": "displayShape",
                "documentation": "Defines the shape of the Avatar."
            }, {
                "name": "displaySize",
                "documentation": "Sets a predefined display size of the Avatar."
            }, {
                "name": "customDisplaySize",
                "documentation": "Specifies custom display size of the Avatar. Note: It takes effect if the displaySize property is set to Custom."
            }, {
                "name": "customFontSize",
                "documentation": "Specifies custom font size of the Avatar. Note: It takes effect if the displaySize property is set to Custom."
            }, {
                "name": "imageFitType",
                "documentation": "Specifies how an image would fit in the Avatar."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "An image-like control that has different display options for representing images, initials,\nand icons. Overview The Avatar control allows the usage of different content, shapes, and sizes\ndepending on the use case. The content types that can be displayed are either images, icons, or initials. The shape\ncan be circular or square. There are several predefined sizes, as well as an option to\nset a custom size. Usage Up to two Latin letters can be displayed as initials in an Avatar. If there\nare more than two letters, or if there's a non-Latin character present, a default image\nplaceholder will be created. There are two options for how the displayed image can fit inside the\navailable area:\n\nCover - the image is scaled to cover all of the available area\nContain - the image is scaled as large as possible while both\nits height and width fit inside the avalable area\n\nNote: To set a custom size for the Avatar, you have to choose the Custom\nvalue for the displaySize property. Then, you have to set both the\ncustomDisplaySize and customFontSize properties."
        },
        "DynamicPage": {
            "attributes": [{
                "name": "preserveHeaderStateOnScroll",
                "documentation": "Preserves the current header state when scrolling.\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded. Note: Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the control`s title and header\nare with height larger than the given threshold."
            }, {
                "name": "headerExpanded",
                "documentation": "Determines whether the header is expanded. The header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state. Note: As of version 1.48, you can initialize the control in collapsed header state by setting this property to false."
            }, {
                "name": "toggleHeaderOnTitleClick",
                "documentation": "Determines whether the user can switch between the expanded/collapsed states of the\nDynamicPageHeader by clicking on the DynamicPageTitle\nor by using the expand/collapse visual indicators,\npositioned at the bottom of the DynamicPageTitle and the DynamicPageHeader.\nIf set to false, the DynamicPageTitle is not clickable,\nthe visual indicators are not available and the application\nmust provide other means for expanding/collapsing the DynamicPageHeader, if necessary."
            }, {
                "name": "showFooter",
                "documentation": "Determines whether the footer is visible."
            }, {
                "name": "fitContent",
                "documentation": "Optimizes DynamicPage responsiveness on small screens and behavior\nwhen expanding/collapsing the DynamicPageHeader. Note: It is recommended to use this property when displaying content\nof adaptive controls that stretch to fill the available space,\nsuch as sap.ui.table.Table and sap.ui.table.AnalyticalTable."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer. Overview The control consist of several components:  sap.f.DynamicPageTitle DynamicPageTitle - consists of a heading\non the left side, content in the middle, and actions on the right. The displayed\ncontent changes based on the current mode of the sap.f.DynamicPageHeader\nDynamicPageHeader.\n sap.f.DynamicPageHeader DynamicPageHeader - a generic container, which\ncan contain a single layout control and does not care about the content alignment\nand responsiveness. The header works in two modes - expanded and snapped and its\nbehavior can be adjusted with the help of different properties.\nContent area - a generic container, which can have a single UI5 layout control\nand does not care about the content alignment and responsiveness.\nFooter - positioned at the bottom with a small offset and used for additional\nactions, the footer floats above the content. It can be any sap.m.IBar\ncontrol. Usage Use the DynamicPage if you need to have a title, that is always visible\nand a header, that has configurable Expanding/Snapping functionality.\nIf you don't need the Expanding/Snapping functionality it is better to use the sap.m.Page as a lighter control. Notes:\nIf you're displaying a sap.m.FlexBox with non-adaptive content\n(doesn't stretch to fill the available space), it is recommended to set the\nfitContainer property of the sap.m.FlexBox FlexBox to\nfalse.\nIf you are displaying a sap.ui.table.Table, keep in mind that it is\nnon-adaptive and may cause unpredicted behavior for the DynamicPage\non smaller screen sizes, such as mobile.\nSnapping of the sap.f.DynamicPageTitle DynamicPageTitle is not supported in the following case:\nWhen the DynamicPage has a scroll bar, the control usually scrolls to the snapping point - the point,\nwhere the sap.f.DynamicPageHeader DynamicPageHeader is scrolled out completely.\nHowever, when there is a scroll bar, but not enough content to reach the snapping point,\nthe snapping is not possible using scrolling. Responsive Behavior The responsive behavior of the DynamicPage depends on the behavior of\nthe content that is displayed."
        },
        "DynamicPageHeader": {
            "attributes": [{
                "name": "pinnable",
                "documentation": "Determines whether the header is pinnable."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Header of the sap.f.DynamicPage. Overview The DynamicPageHeader control is part of the sap.f.DynamicPage family\nand is used to serve as header of the sap.f.DynamicPage DynamicPage. Usage The DynamicPageHeader can hold any layout control and has two states - expanded\nand collapsed (snapped). The switching between these states happens when: the user scrolls below its bottom margin\nthe user clicks on the sap.f.DynamicPageTitle DynamicPageTitle\nthrough the sap.f.DynamicPage DynamicPage property headerExpanded Responsive Behavior The responsive behavior of the DynamicPageHeader depends on the behavior of the\ncontent that is displayed."
        },
        "DynamicPageTitle": {
            "attributes": [{
                "name": "primaryArea",
                "documentation": "Determines which of the DynamicPageTitle areas (Begin, Middle) is primary. Note: The primary area is shrinking at lower rate, remaining visible as much as it can."
            }, {
                "name": "areaShrinkRatio",
                "documentation": "Assigns shrinking ratio to the DynamicPageTitle areas (Heading, Content, Actions).\nThe greater value a section has the faster it shrinks when the screen size is being reduced. The value must be set in Heading:Content:Actions format where Title, Content and Actions\nare numbers greater than or equal to 0. If set to 0, the respective area will not shrink. For example, if 2:7:1 is set, the Content area will shrink seven times faster than\nthe Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px\nthe Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px. If all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them\nis equal to 1. For example, value of 2:4:8 is equal to 1:2:4.  When this property is set the primaryArea property has no effect."
            }, {
                "name": "stateChange",
                "documentation": "Fired when the title state (expanded/collapsed) is toggled by user interaction.\nFor example, scrolling, title clicking/tapping, using expand/collapse button. Also fired when the developer toggles the title state by programmatically\nchanging the scroll position of the scrollbar of DynamicPage."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Title of the sap.f.DynamicPage. Overview The DynamicPageTitle control is part of the sap.f.DynamicPage\nfamily and is used to serve as title of the sap.f.DynamicPage DynamicPage. Usage The DynamicPageTitle can hold any control and displays the most important\ninformation regarding the object that will always remain visible while scrolling. Note: The actions aggregation accepts any UI5 control, but it`s\nrecommended to use controls, suitable for sap.m.Toolbar and sap.m.OverflowToolbar. If the toggleHeaderOnTitleClick property of the sap.f.DynamicPage DynamicPage\nis set to true, the user can switch between the expanded/collapsed states of the sap.f.DynamicPageHeader DynamicPageHeader by clicking on the DynamicPageTitle\nor by using the expand/collapse visual indicators, positioned at the bottom of the\nDynamicPageTitle and the DynamicPageHeader. If set to false, the DynamicPageTitle is not clickable,\nthe visual indicators are not available, and the app must provide other means for\nexpanding/collapsing the DynamicPageHeader, if necessary. Responsive Behavior The responsive behavior of the DynamicPageTitle depends on the behavior of the\ncontent that is displayed."
        },
        "FlexibleColumnLayout": {
            "attributes": [{
                "name": "layout",
                "documentation": "Determines the layout of the control - number of visible columns and their relative sizes. For more details, see topic:3b9f760da5b64adf8db7f95247879086 Types of Layout in the documentation."
            }, {
                "name": "defaultTransitionNameBeginColumn",
                "documentation": "Determines the type of the transition/animation to apply for the Begin column when to() is called without defining the\ntransition to use. The default is slide, other options are fade, flip, show, and the names of any registered custom transitions."
            }, {
                "name": "defaultTransitionNameMidColumn",
                "documentation": "Determines the type of the transition/animation to apply for the Mid column when to() is called without defining the\ntransition to use. The default is slide, other options are fade, flip, show, and the names of any registered custom transitions."
            }, {
                "name": "defaultTransitionNameEndColumn",
                "documentation": "Determines the type of the transition/animation to apply for the End column when to() is called without defining the\ntransition to use. The default is slide, other options are fade, flip, show, and the names of any registered custom transitions."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the content. The visualization of the different options depends on the used theme."
            }, {
                "name": "initialBeginColumnPage",
                "documentation": "Sets the initial Begin column page, which is displayed on application launch."
            }, {
                "name": "initialMidColumnPage",
                "documentation": "Sets the initial Mid column page, which is displayed on application launch."
            }, {
                "name": "initialEndColumnPage",
                "documentation": "Sets the initial End column page, which is displayed on application launch."
            }, {
                "name": "stateChange",
                "documentation": "Fired when there is a change in the layout property or in the maximum number of columns that can be displayed at once.\n\nThe interactions that may lead to a state change are: the property layout was changed indirectly by the user clicking a layout arrow the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.\n\nNote: The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width"
            }, {
                "name": "beginColumnNavigate",
                "documentation": "Fires when navigation between two pages in the Begin column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterBeginColumnNavigate",
                "documentation": "Fires when navigation between two pages in the Begin column has completed. NOTE: In case of animated transitions this event is fired with some delay after the navigate event."
            }, {
                "name": "midColumnNavigate",
                "documentation": "Fires when navigation between two pages in the Mid column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterMidColumnNavigate",
                "documentation": "Fires when navigation between two pages in the Mid column has completed. NOTE: In case of animated transitions this event is fired with some delay after the navigate event."
            }, {
                "name": "endColumnNavigate",
                "documentation": "Fires when navigation between two pages in the End column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterEndColumnNavigate",
                "documentation": "Fires when navigation between two pages in the End column has completed. NOTE: In case of animated transitions this event is fired with some delay after the navigate event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Implements the master-detail-detail paradigm by displaying up to three pages in separate columns. Overview The control is logically similar to sap.m.SplitContainer with the difference that it capable of handling\nthree columns (referred to as Begin, Mid and End) rather than two\n(Master, Detail). The width of the three columns is variable. There are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows. Internally the control makes use of three instances of sap.m.NavContainer, thus forming the three columns. Usage Use this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.).\nThe control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen. The columns are accessible with the beginColumnPages, midColumnPages and endColumnPages aggregations. The relative sizes and the visibility of the three columns are determined based on the value of the sap.f.LayoutType layout property. Changes to the layout due to user interaction are communicated to the app with the stateChange event. Notes:\nTo easily implement the recommended UX design of a sap.f.FlexibleColumnLayout-based app,\nyou can use the sap.f.FlexibleColumnLayoutSemanticHelper class.\nTo facilitate the navigation and view loading, you can use the sap.f.routing.Router  Responsive Behavior The control automatically displays the maximum possible number of columns based on the device size and current layout.\nThe app does not need to take into consideration the current device/screen size, but only to add content to the\ncolumns and change the value of the layout property. For detailed information, see sap.f.LayoutType LayoutType enumeration."
        },
        "AddAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the addAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "CloseAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the closeAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "CopyAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the copyAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "DeleteAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the deleteAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "DiscussInJamAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the discussInJamAction aggregation of the sap.f.semantic.SemanticPage to be placed in the share menu within its title."
        },
        "EditAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the editAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "ExitFullScreenAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the exitFullScreenAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "FavoriteAction": {
            "attributes": [{
                "name": "pressed",
                "documentation": "Defines the SemanticToggleButton pressed state. The property is set to true when the control is toggled (default is false)."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticToggleButton",
            "documentation": "A semantic-specific button, eligible for the favoriteAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "FlagAction": {
            "attributes": [{
                "name": "pressed",
                "documentation": "Defines the SemanticToggleButton pressed state. The property is set to true when the control is toggled (default is false)."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticToggleButton",
            "documentation": "A semantic-specific button, eligible for the flagAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "FooterMainAction": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines MainAction text"
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.MainAction",
            "documentation": "A semantic-specific button, eligible for the footerMainAction aggregation of the sap.f.semantic.SemanticPage to be placed in its footer."
        },
        "FullScreenAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the fullScreenAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        },
        "MainAction": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines MainAction text"
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "Serves as a base class for the sap.f.semantic.TitleMainAction and sap.f.semantic.FooterMainAction controls."
        },
        "MessagesIndicator": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the messagesIndicator aggregation of the sap.f.semantic.SemanticPage to be placed in its footer."
        },
        "NegativeAction": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines NegativeAction text.\nNote: the default text is \"Reject\""
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the negativeAction aggregation of the sap.f.semantic.SemanticPage to be placed in its footer."
        },
        "PositiveAction": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines PositiveAction text.\nNote: the default text is \"Accept\""
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the positiveAction aggregation of the sap.f.semantic.SemanticPage to be placed in its footer."
        },
        "PrintAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the printAction aggregation of the sap.f.semantic.SemanticPage to be placed in the share menu within its title."
        },
        "SemanticButton": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticControl",
            "documentation": "A base class for the available semantic actions, such as sap.f.semantic.AddAction AddAction, sap.f.semantic.CloseAction CloseAction, etc."
        },
        "SemanticControl": {
            "attributes": [{
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "The base class for the sap.f.semantic.SemanticButton."
        },
        "SemanticPage": {
            "attributes": [{
                "name": "headerExpanded",
                "documentation": "Determines whether the header is expanded. The header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state. Note: Please be aware, that initially collapsed header state is not supported,\nso headerExpanded should not be set to false when initializing the control."
            }, {
                "name": "headerPinnable",
                "documentation": "Determines whether the header is pinnable."
            }, {
                "name": "preserveHeaderStateOnScroll",
                "documentation": "Preserves the current header state when scrolling. For example, if the user expands the header by clicking on the title\nand then scrolls down the page, the header will remain expanded. Note: Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the title and the header\nare with height larger than a given threshold."
            }, {
                "name": "toggleHeaderOnTitleClick",
                "documentation": "Determines whether the user can switch between the expanded/collapsed states of the\nheader by clicking on the title. If set to false, the title is not clickable and the application\nmust provide other means for expanding/collapsing the header, if necessary."
            }, {
                "name": "showFooter",
                "documentation": "Determines whether the footer is visible."
            }, {
                "name": "titlePrimaryArea",
                "documentation": "Determines which of the title areas (Begin, Middle) is primary. Note: The primary area is shrinking at a lower rate, remaining visible as long as it can."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "An enhanced sap.f.DynamicPage, that contains controls with semantic-specific meaning. Overview Content specified in the sap.f.semantic.SemanticPage aggregations is automatically\npositioned in dedicated sections of the title or the footer of the page, depending on\nthe control's semantics. The actions in the SemanticPage title are grouped to text actions or icon actions.\nWhen an aggregation is set, the actions appear in the following predefined order (from left to right): Text actions:\nThe main semantic text action - titleMainAction\nAny custom text actions - titleCustomTextActions\nThe semantic text actions - editAction, deleteAction, copyAction and addAction Icon actions:\nAny custom icon actions - titleCustomIconActions\nThe simple semantic icon actions - favoriteAction and flagAction\nThe share menu semantic icon actions as a drop-down list with the following order: sendEmailAction discussInJamAction shareInJamAction sendMessageAction printAction Any customShareActions\nThe navigation semantic actions - fullScreenAction, exitFullScreenAction,\nand closeAction The actions in the SemanticPage footer are positioned either on its left or right area and have the following predefined order: Footer left area:\nThe semantic text action - messagesIndicator\nThe semantic label - draftIndicator Footer right area:\nThe main semantic text action - footerMainAction\nThe semantic text actions - positiveAction and negativeAction\nAny custom text actions - footerCustomActions Usage Using the SemanticPage facilitates the implementation of the SAP Fiori 2.0 design guidelines. Responsive behavior The responsive behavior of the SemanticPage depends on the behavior of the content that is displayed."
        },
        "SemanticToggleButton": {
            "attributes": [{
                "name": "pressed",
                "documentation": "Defines the SemanticToggleButton pressed state. The property is set to true when the control is toggled (default is false)."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A base class for the sap.f.semantic.FavoriteAction and sap.f.semantic.FlagAction."
        },
        "SendEmailAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the sendEmailAction aggregation of the sap.f.semantic.SemanticPage to be placed in the share menu within its title."
        },
        "SendMessageAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the sendMessageAction aggregation of the sap.f.semantic.SemanticPage to be placed in the share menu within its title."
        },
        "ShareInJamAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.SemanticButton",
            "documentation": "A semantic-specific button, eligible for the shareInJamAction aggregation of the sap.f.semantic.SemanticPage to be placed in the share menu within its title."
        },
        "TitleMainAction": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines MainAction text"
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the SemanticButton is enabled."
            }, {
                "name": "press",
                "documentation": "Fired when the user selects the SemanticButton."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }, {
                "name": "visible",
                "documentation": "Determines whether the SemanticControl is visible."
            }],
            "extendsElement": "sap.f.MainAction",
            "documentation": "A semantic-specific button, eligible for the titleMainAction aggregation of the sap.f.semantic.SemanticPage to be placed in its title."
        }
    },
    "sap.m": {
        "ActionListItem": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the text that appears in the control."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "The sap.m.ActionListItem can be used like a button to fire actions when pressed.\nNote: The inherited selected property of the sap.m.ListItemBase is not supported."
        },
        "ActionSelect": {
            "attributes": [{
                "name": "buttons",
                "documentation": "Buttons to be added to the ActionSelect content."
            }, {
                "name": "name",
                "documentation": "The name to be used in the HTML code (for example, for HTML forms that send data to the server via submit)."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can change the selection."
            }, {
                "name": "width",
                "documentation": "Sets the width of the field. By default, the field width is automatically adjusted to the size\nof its content and the default width of the field is calculated based on the widest list item\nin the dropdown list.\nIf the width defined is smaller than its content, only the field width is changed whereas\nthe dropdown list keeps the width of its content.\nIf the dropdown list is wider than the visual viewport, it is truncated and an ellipsis is displayed\nfor each item.\nFor phones, the width of the dropdown list is always the same as the viewport. Note: This property is ignored if the autoAdjustWidth property is set to true."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the control. Note: This property is ignored if the autoAdjustWidth property is set to true."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. Note: If duplicate keys exist, the first item matching the key is used."
            }, {
                "name": "selectedItemId",
                "documentation": "ID of the selected item."
            }, {
                "name": "icon",
                "documentation": "The URI to the icon that will be displayed only when using the IconOnly type."
            }, {
                "name": "type",
                "documentation": "Type of a select. Possible values Default, IconOnly."
            }, {
                "name": "autoAdjustWidth",
                "documentation": "Indicates whether the width of the input field is determined by the selected item's content."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text within the input field."
            }, {
                "name": "textDirection",
                "documentation": "Specifies the direction of the text within the input field with enumerated options.\nBy default, the control inherits text direction from the DOM."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning,\nSuccess."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text of the value state message popup.\nIf this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showSecondaryValues",
                "documentation": "Indicates whether the text values of the additionalText property of a sap.ui.core.ListItem are shown."
            }, {
                "name": "forceSelection",
                "documentation": "Indicates whether the selection is restricted to one of the items in the list.\nNote: We strongly recommend that you always set this property to false and bind\nthe selectedKey property to the desired value for better interoperability with data binding."
            }, {
                "name": "selectedItem",
                "documentation": "Sets or retrieves the selected item from the aggregation named items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "This event is fired when the value in the selection field is changed in combination with one of\nthe following actions:\n The focus leaves the selection field The Enter key is pressed The item is pressed\n"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Select",
            "documentation": "The ActionSelect control provides a list of predefined items that allows end users to choose options and additionally trigger some actions."
        },
        "ActionSheet": {
            "attributes": [{
                "name": "placement",
                "documentation": "The ActionSheet behaves as an sap.m.Popover in iPad and this property is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferedLeft, sap.m.PlacementType.HorizontalPreferedRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferedTop, sap.m.PlacementType.VerticalPreferedBottom. The default value is sap.m.PlacementType.Bottom."
            }, {
                "name": "showCancelButton",
                "documentation": "If this is set to true, there will be a cancel button shown below the action buttons. There won't be any cancel button shown in iPad regardless of this property. The default value is set to true."
            }, {
                "name": "cancelButtonText",
                "documentation": "This is the text displayed in the cancelButton. Default value is \"Cancel\", and it's translated according to the current locale setting. This property will be ignored when running either in iPad or showCancelButton is set to false."
            }, {
                "name": "title",
                "documentation": "Title will be shown in the header area in iPhone and every Android devices. This property will be ignored in tablets and desktop browser."
            }, {
                "name": "cancelButtonTap",
                "documentation": "This event is fired when the cancelButton is tapped. For iPad, this event is also fired when showCancelButton is set to true, and Popover is closed by tapping outside."
            }, {
                "name": "beforeOpen",
                "documentation": "This event will be fired before the ActionSheet is opened."
            }, {
                "name": "afterOpen",
                "documentation": "This event will be fired after the ActionSheet is opened."
            }, {
                "name": "beforeClose",
                "documentation": "This event will be fired before the ActionSheet is closed."
            }, {
                "name": "afterClose",
                "documentation": "This event will be fired after the ActionSheet is closed."
            }, {
                "name": "cancelButtonPress",
                "documentation": "This event is fired when the cancelButton is clicked. For iPad, this event is also fired when showCancelButton is set to true, and Popover is closed by clicking outside."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The action sheet holds a list of options from which the user can select to complete an action.\nOverview\nThe options of the action sheet are represented as sap.m.Button buttons with icons.\nElements in the action sheet are left-aligned. Actions should be arranged in order of importance, from top to bottom.\nGuidelines\n\nAlways display text or text and icons for the actions. Do not use icons only.\nAlways provide a Cancel button on mobile phones.\nAvoid scrolling on action sheets.\n\nResponsive Behavior\nOn mobile phones the action sheet is displayed in a sap.m.Dialog dialog. On tablets and desktop the action sheet is displayed in a sap.m.Popover popover. When an action is triggered, the action sheet closes and you can display a confirmation as a sap.m.MessageToast message toast."
        },
        "App": {
            "attributes": [{
                "name": "homeIcon",
                "documentation": "The icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\". Note that only the first attempt to set the homeIcon will be executed, subsequent settings are ignored. This icon must be in PNG format. The property can either hold the URL of one single icon which is used for all devices (and possibly scaled, which looks not perfect), or an object holding icon URLs for the different required sizes. A desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon. For this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting because the file can contain different images for different resolutions. One example is: app.setHomeIcon({\n'phone':'phone-icon.png',\n'phone@2':'phone-retina.png',\n'tablet':'tablet-icon.png',\n'tablet@2':'tablet-retina.png',\n'icon':'desktop.ico'\n); The respective image sizes are 57/114 px for the phone and 72/144 px for the tablet.\nIf an object is given but one of the sizes is not given, the largest given icon will be used for this size. On Android these icons may or may not be used by the device. Apparently chances can be improved by adding glare effect and rounded corners, setting the file name so it ends with \"-precomposed.png\" and setting the \"homeIconPrecomposed\" property to \"true\"."
            }, {
                "name": "backgroundColor",
                "documentation": "Background color of the App. If set, this color will override the default background defined by the theme. So this should only be set when really required.\nAny configured background image will be placed above this colored background. But any theme adaptation in the Theme Designer will override this setting.\nUse the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled."
            }, {
                "name": "backgroundImage",
                "documentation": "Background image of the App. If set, this image will override the default background defined by the theme. So this should only be set when really required.\nThis background image will be placed above any color set for the background. But any theme adaptation in the Theme Designer will override this image setting.\nUse the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled."
            }, {
                "name": "backgroundRepeat",
                "documentation": "Whether the background image (if configured) should be proportionally stretched to cover the whole App (false) or whether it should be tiled (true)."
            }, {
                "name": "backgroundOpacity",
                "documentation": "Opacity of the background image. The opacity can be set between 0 (fully transparent) and 1 fully opaque).\nThis can be used to make the application content better readable by making the background image partly transparent."
            }, {
                "name": "orientationChange",
                "documentation": "Fired when the orientation (portrait/landscape) of the device is changed."
            }, {
                "name": "autoFocus",
                "documentation": "Determines whether the initial focus is set automatically on first rendering and after navigating to a new page.\nThis is useful when on touch devices the keyboard pops out due to the focus being automatically set on an input field.\nIf necessary the \"afterShow\" event can be used to focus another element. Note: The following scenarios are possible, depending on where the focus\nwas before navigation to a new page:\nIf autoFocus is set to true and the focus was\ninside the current page, the focus will be moved automatically on the new page.\nIf autoFocus is set to false and the focus was inside\nthe current page, the focus will disappear.\nIf the focus was outside the current page, after the navigation it will remain\nunchanged regardless of what is set to the autoFocus property."
            }, {
                "name": "height",
                "documentation": "The height of the NavContainer. Can be changed when the NavContainer should not cover the whole available area."
            }, {
                "name": "width",
                "documentation": "The width of the NavContainer. Can be changed when the NavContainer should not cover the whole available area."
            }, {
                "name": "defaultTransitionName",
                "documentation": "The type of the transition/animation to apply when \"to()\" is called without defining a transition type to use. The default is \"slide\". Other options are: \"fade\", \"flip\" and \"show\" - and the names of any registered custom transitions."
            }, {
                "name": "initialPage",
                "documentation": "This association can be used to define which page is displayed initially. If the given page does not exist or no page is given, the first page which has been added is considered as initial page.\nThis value should be set initially and not set/modified while the application is running. This could be used not only for the initial display, but also if the user wants to navigate \"up to top\", so this page serves as a sort of \"home/root page\"."
            }, {
                "name": "navigate",
                "documentation": "The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterNavigate",
                "documentation": "The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.NavContainer",
            "documentation": "The root element of a UI5 mobile app. Overview The App inherits from sap.m.NavContainer and thus provides its navigation capabilities.\nIt adds certain header tags to the HTML page which are considered useful for mobile apps. Usage You can configure the home icon of the App. For more information,\nsee the homeIcon property. There are options for setting the background color and a background image with the use of the\nbackgroundColor and backgroundImage properties."
        },
        "Bar": {
            "attributes": [{
                "name": "enableFlexBox",
                "documentation": "If this flag is set to true, contentMiddle will be rendered as a HBox and layoutData can be used to allocate available space."
            }, {
                "name": "translucent",
                "documentation": "Indicates whether the Bar is partially translucent.\nIt is only applied for touch devices."
            }, {
                "name": "design",
                "documentation": "Determines the design of the bar. If set to auto, it becomes dependent on the place where the bar is placed."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Used as a header, sub-header and a footer of a page. Overview The Bar control consists of three areas to hold its content. It has the capability\nto center content, such as a title, while having other controls on the left and right side. Usage With the use of the design property, you can set the style of the Bar to appear\nas a header, sub-header and footer. Note: Do not place a sap.m.Bar inside another sap.m.Bar\nor inside any bar-like control. Doing so causes unpredictable behavior. Responsive Behavior The content in the middle area is centrally positioned if there is enough space. If the right\nor left content overlaps the middle content, the middle content will be centered in the space between."
        },
        "Breadcrumbs": {
            "attributes": [{
                "name": "currentLocationText",
                "documentation": "Determines the text of current/last element in the Breadcrumbs path."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Enables users to navigate between items by providing a list of links to previous steps in the user's\nnavigation path. The last three steps can be accessed as links directly The remaining links prior to them\nare available in a drop-down menu."
        },
        "BusyDialog": {
            "attributes": [{
                "name": "text",
                "documentation": "Optional text displayed inside the dialog."
            }, {
                "name": "title",
                "documentation": "Sets the title of the BusyDialog. The default value is an empty string."
            }, {
                "name": "customIcon",
                "documentation": "Icon, used from the BusyIndicator. This icon is invisible in iOS platform and it is density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screens."
            }, {
                "name": "customIconRotationSpeed",
                "documentation": "Defines the rotation speed of the given image. If GIF file is used, the speed has to be set to 0. The value is in milliseconds."
            }, {
                "name": "customIconDensityAware",
                "documentation": "If this is set to false, the source image will be loaded directly without attempting to fetch the density perfect image for high density devices.\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of the image. If bandwidth is the key for the application, set this value to false."
            }, {
                "name": "customIconWidth",
                "documentation": "Width of the provided icon with default value \"44px\"."
            }, {
                "name": "customIconHeight",
                "documentation": "Height of the provided icon with default value \"44px\"."
            }, {
                "name": "cancelButtonText",
                "documentation": "The text of the cancel button. The default text is \"Cancel\" (translated to the respective language)."
            }, {
                "name": "showCancelButton",
                "documentation": "Indicates if the cancel button will be rendered inside the busy dialog. The default value is set to false."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "close",
                "documentation": "Fires when the busy dialog is closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "BusyDialog is used to indicate that the system is busy.\nOverview\nWhen the busy dialog is displayed, the whole application is blocked.\nStructure\nThe busy dialog can hold several elements, most of which are optional.\n\ntitle - A title for the dialog. By default, there is no title.\ntext - A text displayed above the busy animation.\nshowCancelButton - An optional Cancel button to stop the execution.\ncustomIcon - An optional alternative icon to use as a busy animation.\n\nUsage\nWhen to use\n\nThe operation lasts more than one second.\nYou want to indicate loading in a page-to-page navigation (lightweight version).\nOffer a Cancel button if you expect the process to run more than 10 seconds.\n If you do not show a title or text, use the sap.ui.core.InvisibleText invisible text control to provide the reason for users with assistive technologies.\n\nWhen not to use\n\nThe screen is not supposed to be blocked. Use a sap.m.BusyIndicator for the specific application part.\nDo not use the title of the busy dialog. Provide a precise text describing the operation in text.\n"
        },
        "BusyIndicator": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines text to be displayed below the busy indicator.\nIt can be used to inform the user of the current operation."
            }, {
                "name": "textDirection",
                "documentation": "Options for the text direction are RTL and LTR.\nAlternatively, the control can inherit the text direction from its parent container."
            }, {
                "name": "customIcon",
                "documentation": "Icon URL if an icon is used as the busy indicator."
            }, {
                "name": "customIconRotationSpeed",
                "documentation": "Defines the rotation speed of the given image.\nIf a .gif is used, the speed has to be set to 0.\nThe unit is in ms.\nNote: Values are considered valid when greater than or equal to 0.\nIf invalid value is provided the speed defaults to 0."
            }, {
                "name": "customIconDensityAware",
                "documentation": "If this is set to false, the src image will be loaded directly without attempting\nto fetch the density perfect image for high density device.\nBy default, this is set to true but then one or more requests are sent to the server,\ntrying to get the density perfect version of the specified image.\nIf bandwidth is the key for the application, set this value to false."
            }, {
                "name": "customIconWidth",
                "documentation": "Width of the provided icon. By default 44px are used."
            }, {
                "name": "customIconHeight",
                "documentation": "Height of the provided icon. By default 44px are used."
            }, {
                "name": "size",
                "documentation": "Defines the size of the busy indicator.\nThe animation consists of three circles, each of which will be this size.\nTherefore the total width of the control amounts to three times the given size."
            }, {
                "name": "design",
                "documentation": "Setting this property will not have any effect on the appearance of the BusyIndicator\nin versions greater than or equal to 1.32.1"
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Informs the user about an ongoing operation.\nOverview\nThe busy indicator implies that an action is taking place within a single control.\nYou can set the size of the icon, the text, but also define a custom icon to be used instead.\nUsage\nWhen to use\n\nThe user needs to be able to cancel the operation.\nOnly part of the application or a particular control is affected.\n\nWhen not to use\n\nThe operation takes less than one second.\nYou need to block the screen and prevent the user from starting another activity. In this case, use the sap.m.BusyDialog busy dialog.\nDo not change the mouse cursor to indicate the ongoing operation.\nDo not show multiple busy indicators at once\n"
        },
        "Button": {
            "attributes": [{
                "name": "text",
                "documentation": "Determines the text of the Button."
            }, {
                "name": "type",
                "documentation": "Defines the Button type."
            }, {
                "name": "width",
                "documentation": "Defines the Button width."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the Button is enabled (default is set to true).\nA disabled Button has different colors depending on the sap.m.ButtonType ButtonType."
            }, {
                "name": "icon",
                "documentation": "Defines the icon to be displayed as graphical element within the Button.\nIt can be an image or an icon from the icon font."
            }, {
                "name": "iconFirst",
                "documentation": "Determines whether the icon is displayed before the text."
            }, {
                "name": "activeIcon",
                "documentation": "The source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the icon property is not set or has a different type, the active icon is not displayed."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image."
            }, {
                "name": "textDirection",
                "documentation": "This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fired when the user taps the control."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks or taps on the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Enables users to trigger actions. Overview The user triggers an action by clicking or tapping the Button or by pressing\ncertain keyboard keys, such as Enter. Usage For the Button UI, you can define text, icon, or both. You can also specify\nwhether the text or the icon is displayed first. You can choose from a set of predefined sap.m.ButtonType ButtonTypes that offer\ndifferent styling to correspond to the triggered action. You can set the Button as enabled or disabled. An enabled Button can be\npressed by clicking or tapping it and it changes its style to provide visual feedback to the user\nthat it is pressed or hovered over with the mouse cursor. A disabled Button appears\ninactive and cannot be pressed."
        },
        "Carousel": {
            "attributes": [{
                "name": "height",
                "documentation": "The height of the carousel. Note that when a percentage value is used, the height of the surrounding container must be defined."
            }, {
                "name": "width",
                "documentation": "The width of the carousel. Note that when a percentage value is used, the height of the surrounding container must be defined."
            }, {
                "name": "loop",
                "documentation": "Defines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa."
            }, {
                "name": "showPageIndicator",
                "documentation": "Show or hide carousel's page indicator."
            }, {
                "name": "pageIndicatorPlacement",
                "documentation": "Defines where the carousel's page indicator is displayed. Possible values are sap.m.PlacementType.Top, sap.m.PlacementType.Bottom. Other values are ignored and the default value will be applied. The default value is sap.m.PlacementType.Bottom."
            }, {
                "name": "showBusyIndicator",
                "documentation": "Show or hide busy indicator in the carousel when loading pages after swipe."
            }, {
                "name": "arrowsPlacement",
                "documentation": "Defines where the carousel's arrows are placed. Default is sap.m.CarouselArrowsPlacement.Content used to\nplace the arrows on the sides of the carousel. Alternatively sap.m.CarouselArrowsPlacement.PageIndicator can\nbe used to place the arrows on the sides of the page indicator."
            }, {
                "name": "activePage",
                "documentation": "Provides getter and setter for the currently displayed page. For the setter, argument may be the control itself, which must be member of the carousel's page list, or the control's id.\nThe getter will return the control id"
            }, {
                "name": "loadPage",
                "documentation": "Carousel requires a new page to be loaded. This event may be used to fill the content of that page"
            }, {
                "name": "unloadPage",
                "documentation": "Carousel does not display a page any longer and unloads it. This event may be used to clean up the content of that page."
            }, {
                "name": "pageChanged",
                "documentation": "This event is fired after a carousel swipe has been completed. It is triggered both by physical swipe events and through API carousel manipulations such as calling 'next', 'previous' or 'setActivePageId' functions."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The carousel allows the user to browse through a set of items by swiping right or left.\nOverview\nThe control is mostly used for showing a gallery of images, but can hold any sap.m control.\nStructure\nThe carousel consists of a the following elements:\n\nContent area - displays the different items.\nNavigation - arrows to the left and right for switching between items.\n(optional) Paging - indicator at the bottom to show the current position in the set.\n\nThe paging indicator can be configured as follows:\n\nshowPageIndicator - determines if the indicator is displayed.\nIf the pages are less than 9, the page indicator is represented with bullets.\nIf the pages are 9 or more, the page indicator is numeric.\npageIndicatorPlacement - determines where the indicator is located. Default (sap.m.PlacementType.Bottom) - below the content.\n\nAdditionally, you can also change the location of the navigation arrows.\nBy setting arrowsPlacement to sap.m.CarouselArrowsPlacement.PageIndicator, the arrows will be located at the bottom by the paging indicator.\nUsage\n When to use\n\nThe items you want to display are very different from each other.\nYou want to display the items one after the other.\n\n When not to use\n\nThe items you want to display need to be visible at the same time.\nThe items you want to display are uniform and very similar\n\nResponsive Behavior\n\nOn touch devices, navigation is performed with swipe gestures (swipe right or swipe left).\nOn desktop, navigation is done with the navigation arrows.\nThe paging indicator (when activated) is visible on each form factor.\n"
        },
        "CheckBox": {
            "attributes": [{
                "name": "selected",
                "documentation": "Stores the state of the checkbox whether it is selected or not."
            }, {
                "name": "enabled",
                "documentation": "Disables the Checkbox. Disabled controls are not interactive and are rendered differently according to the theme."
            }, {
                "name": "name",
                "documentation": "The 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit."
            }, {
                "name": "text",
                "documentation": "Defines the text displayed next to the checkbox"
            }, {
                "name": "textDirection",
                "documentation": "Options for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container."
            }, {
                "name": "textAlign",
                "documentation": "Aligns the text of the checkbox. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\"."
            }, {
                "name": "width",
                "documentation": "Determines the total width of the control or the width of its label only, depending on the value of useEntireWidth. Note: When useEntireWidth is set to true, width is applied to the control as a whole (checkbox and label). Otherwise, width is applied to the label only."
            }, {
                "name": "useEntireWidth",
                "documentation": "Indicates if the given width will be applied to the control as a whole or to its label only. Note: by default the width is set to the label"
            }, {
                "name": "activeHandling",
                "documentation": "Flag to switch on activeHandling, when it is switched off, there will be no visual changes on active state. Default value is 'true'"
            }, {
                "name": "editable",
                "documentation": "Specifies whether the user shall be allowed to edit the state of the checkbox"
            }, {
                "name": "valueState",
                "documentation": "Accepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'."
            }, {
                "name": "displayOnly",
                "documentation": "Determines whether the CheckBox is in display only state. When set to true, the CheckBox is not interactive, not editable, not focusable\nand not in the tab chain. This setting is used for forms in review mode.  When the property enabled is set to false this property has no effect."
            }, {
                "name": "wrapping",
                "documentation": "Determines whether the label's text is wrapped. When set to false (default), the label's text\nis truncated with ellipsis at the end."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Event is triggered when the control status is changed by the user by selecting or deselecting the checkbox."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Allows the user to set a binary value, such as true/false or yes/no for an item. Overview The CheckBox control consists of a box and a label that describes its purpose.\nIf it's checked, an indicator is displayed inside the box. To select/deselect the CheckBox, the user has to click or tap the square box or its label.\nClicking or tapping toggles the CheckBox between checked and unchecked state.\nThe CheckBox control only has 2 states - checked and unchecked. There is no third\nstate for partially selected. Usage You can set the width of the element containing the box and the label manually with the use\nof the width property. If the text exceeds the available width, it is truncated. Note: When useEntireWidth property is set to true, the value of the\nwidth property is applied to the control as a whole (box and label). If\nuseEntireWidth is set to false, the width is applied to the label only. The touchable area for toggling the CheckBox ends where the text ends. If the width allows more space than the text requires, white space is added.\nThe text can be positioned manually in this space using the textAlign property. Note: Keep in mind that setting the textAlign property to Right\ncan result in a large amount of white space between the box and the text. You can disable the CheckBox by setting the enabled property to false,\nor use the CheckBox in read-only mode by setting the editable property to false. Note: Disabled and read-only states shouldn't be used together."
        },
        "ColorPalette": {
            "attributes": [{
                "name": "colors",
                "documentation": "Defines the List of colors displayed in the palette. Minimum is 2 colors, maximum is 15 colors."
            }, {
                "name": "colorSelect",
                "documentation": "Fired when the user selects a color."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Represents a predefined range of colors for easier selection. Overview\nThe ColorPalette provides the users with a range of predefined colors. You can customize them with the use of the colors property.\nYou can specify a defaultColor and display a \"Default color\" button\nfor the user to choose directly. You can display a \"More colors...\" button\nthat opens an additional color picker for the user to choose specific colors\nthat are not present in the predefined range. Usage The palette is intended for users, who don't want to check and remember the\ndifferent values of the colors and spend large amount of time to configure the\nright color through the color picker. The control can be embedded in a form or can be opened as popover (by use of thin\nwrapper control sap.m.ColorPalettePopover)."
        },
        "ColorPalettePopover": {
            "attributes": [{
                "name": "defaultColor",
                "documentation": "The color, which the app developer will receive when end-user chooses the \"Default color\" button.\nSee event sap.m.ColorPalettePopover."
            }, {
                "name": "colors",
                "documentation": "Defines the List of colors displayed in the palette. Minimum is 2 colors, maximum is 15 colors."
            }, {
                "name": "showDefaultColorButton",
                "documentation": "Indicates if the button for default color selection is available."
            }, {
                "name": "showMoreColorsButton",
                "documentation": "Denotes if the color has been chosen by selecting the \"Default Color\" button (true or false)"
            }, {
                "name": "colorSelect",
                "documentation": "Fired when the user selects a color."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A thin wrapper over sap.m.ColorPalette allowing the latter to be used in a popover."
        },
        "Column": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the column. If you leave it empty then this column covers the remaining space."
            }, {
                "name": "hAlign",
                "documentation": "Defines the horizontal alignment of the column content. NOTE: Text controls with a textAlign property inherits the horizontal alignment."
            }, {
                "name": "vAlign",
                "documentation": "Defines the vertical alignment of the cells in a column.\nThis property does not affect the vertical alignment of header and footer."
            }, {
                "name": "styleClass",
                "documentation": "CSS class name for column contents(header, cells and footer of column). This property can be used for different column styling. If column is shown as pop-in then this class name is applied to related pop-in row."
            }, {
                "name": "visible",
                "documentation": "Specifies whether or not the column is visible. Invisible columns are not rendered."
            }, {
                "name": "minScreenWidth",
                "documentation": "By default column is always shown. If you set this property, control checks the minimum width of the screen to show or hide this column.\nAs you can give specific CSS sizes(e.g: \"480px\" or \"40em\"), you can also use sap.m.ScreenSize enumeration(e.g: \"Phone\", \"Tablet\", \"Desktop\", \"Small\", \"Medium\", \"Large\", ....). sap.m.Column.MediaQuery1->Range1 = 199 This property can be used for responsive design. e.g: \"40em\"(or \"640px\" or \"Tablet\") setting shows this column in iPad(and Desktop) but hides in iPhone.\nPlease also see \"demandPopin\" property"
            }, {
                "name": "demandPopin",
                "documentation": "According to your minScreenWidth settings, the column can be hidden in different screen sizes.\nSetting this property to true, shows this column as pop-in instead of hiding it."
            }, {
                "name": "popinHAlign",
                "documentation": "Horizontal alignment of the pop-in content. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\". NOTE: Controls with a text align do not inherit the horizontal alignment."
            }, {
                "name": "popinDisplay",
                "documentation": "Defines enumerated display options for the pop-in."
            }, {
                "name": "mergeDuplicates",
                "documentation": "Set \"true\" to merge repeating cells(duplicates) into one cell block.\nPlease see \"mergeFunctionName\" property to customize this property.\nNote: This feature must not be used together with two-way binding. This property is ignored if a column is shown in the pop-in."
            }, {
                "name": "mergeFunctionName",
                "documentation": "Defines the value getter(serialization) function if \"mergeDuplicates\" property is set \"true\"\nControl itself uses this function to compare values of two repeating cells.\nDefault value \"getText\" is suitable for Label and Text control.\ne.g. For \"Icon\" control \"getSrc\" can be used.\nNote: You can pass one string parameter to given function after \"#\" sign. e.g. \"data\""
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "The sap.m.Column allows to define column specific properties that will be applied when rendering the sap.m.Table. See section \" topic:6f778a805bc3453dbb66e246d8271839 Defining Column Width\"\nin the documentation to understand how to define the width property of the sap.m.Column to render a sap.m.Table control properly."
        },
        "ColumnListItem": {
            "attributes": [{
                "name": "vAlign",
                "documentation": "Sets the vertical alignment of all the cells within the table row (including selection and navigation).\nNote: vAlign property of sap.m.Column overrides the property for cell vertical alignment if both are set."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "sap.m.ColumnListItem can be used with the cells aggregation to create rows for the sap.m.Table control.\nThe columns aggregation of the sap.m.Table should match with the cells aggregation. Note: This control should only be used within the sap.m.Table control.\nThe inherited counter property of sap.m.ListItemBase is not supported."
        },
        "ComboBox": {
            "attributes": [{
                "name": "selectedKey",
                "documentation": "Key of the selected item. Note: If duplicate keys exist, the first item matching the key is used."
            }, {
                "name": "selectedItemId",
                "documentation": "ID of the selected item."
            }, {
                "name": "showSecondaryValues",
                "documentation": "Indicates whether the text values of the additionalText property of a sap.ui.core.ListItem are shown."
            }, {
                "name": "filterSecondaryValues",
                "documentation": "Indicates whether the filter should check in both the text and the additionalText property of the sap.ui.core.ListItem for the suggestion."
            }, {
                "name": "selectedItem",
                "documentation": "Sets or retrieves the selected item from the aggregation named items."
            }, {
                "name": "change",
                "documentation": "This event is fired when the value in the text input field is changed in combination with one of\nthe following actions:  The focus leaves the text input field The Enter key is pressed\n In addition, this event is also fired when an item in the list is selected."
            }, {
                "name": "selectionChange",
                "documentation": "This event is fired when the user types something that matches with an item in the list;\nit is also fired when the user presses on a list item, or when navigating via keyboard."
            }, {
                "name": "loadItems",
                "documentation": "This event is fired when the end user clicks the combo box button to open the dropdown list and\nthe data used to display items is not already loaded.\nAlternatively, it is fired after the user moves the cursor to the combo box text\nfield and perform an action that requires data to be loaded. For example,\npressing F4 to open the dropdown list or typing something in the text field fires the event. Note: Use this feature in performance critical scenarios only.\nLoading the data lazily (on demand) to defer initialization has several implications for the\nend user experience. For example, the busy indicator has to be shown while the items are being\nloaded and assistive technology software also has to announce the state changes\n(which may be confusing for some screen reader users). Note: Currently the sap.m.MultiComboBox does not support this event."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the text field."
            }, {
                "name": "showButton",
                "documentation": "Indicates whether the dropdown downward-facing arrow button is shown."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ComboBoxBase",
            "documentation": "A drop-down list for selecting and filtering values.\nOverview\nThe control represents a drop-down menu with a list of the available options and a text input field to narrow down the options.\nStructure\nThe combo-box consists of the following elements:\n\n Input field - displays the selected option or a custom user entry. Users can type to narrow down the list or enter their own value.\n Drop-down arrow - expands\\collapses the option list.\n Option list - the list of available options.\n\nBy setting the showSecondaryValues property, the combo box can display an additional value for each option (if there is one). Filtering is done only on the first option.\nUsage\nWhen to use:\n\nYou need to select only one item in a long list of options (between 13 and 200) or your custom user input.\n\nWhen not to use:\n\nYou need to select between only two options. Use a sap.m.Switch switch control instead.\nYou need to select between 12 options. Use a sap.m.Select select control instead.\nYou need to select between more than 200 options. Use a sap.m.Input input control with value help instead.\n\nResponsive Behavior\n\nThe width of the option list adapts to its content. The minimum width is the input field plus the drop-down arrow.\nThere is no horizontal scrolling in the option list. Entries in the list that are too long will be truncated.\nOn phone devices the combo box option list opens a dialog.\n"
        },
        "ComboBoxBase": {
            "attributes": [{
                "name": "loadItems",
                "documentation": "This event is fired when the end user clicks the combo box button to open the dropdown list and\nthe data used to display items is not already loaded.\nAlternatively, it is fired after the user moves the cursor to the combo box text\nfield and perform an action that requires data to be loaded. For example,\npressing F4 to open the dropdown list or typing something in the text field fires the event. Note: Use this feature in performance critical scenarios only.\nLoading the data lazily (on demand) to defer initialization has several implications for the\nend user experience. For example, the busy indicator has to be shown while the items are being\nloaded and assistive technology software also has to announce the state changes\n(which may be confusing for some screen reader users). Note: Currently the sap.m.MultiComboBox does not support this event."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the text field."
            }, {
                "name": "showButton",
                "documentation": "Indicates whether the dropdown downward-facing arrow button is shown."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ComboBoxTextField",
            "documentation": "An abstract class for combo boxes."
        },
        "ComboBoxTextField": {
            "attributes": [{
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the text field."
            }, {
                "name": "showButton",
                "documentation": "Indicates whether the dropdown downward-facing arrow button is shown."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.InputBase",
            "documentation": "The sap.m.ComboBoxTextField."
        },
        "CustomListItem": {
            "attributes": [{
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "This control with a content aggregation can be used to customize standard list items that we don't provide. List mode and ListItem type are applied to CustomListItems as well.\nNote: Even though the content aggregation allows any control, complex responsive layout controls (e.g. Table, Form) should not be aggregated as content."
        },
        "CustomTile": {
            "attributes": [{
                "name": "removable",
                "documentation": "Determines whether the tile is movable within the surrounding tile container. The remove event is fired by the tile container."
            }, {
                "name": "press",
                "documentation": "Tap event is raised if the user taps or clicks the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Tile",
            "documentation": "Use the CustomTile control to display application specific content in the Tile control.\nThe tile width is 8.5em and height is 10em."
        },
        "CustomTreeItem": {
            "attributes": [{
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.TreeItemBase",
            "documentation": "The CustomTreeItem control with a content aggregation is used to customize the tree items within the Tree control.Note: Even though the content aggregation can be used for any control, complex responsive layout controls, such as Table, Form etc, should not be aggregated as content."
        },
        "DatePicker": {
            "attributes": [{
                "name": "displayFormatType",
                "documentation": "Displays date in this given type in input field. Default value is taken from locale settings.\nAccepted are values of sap.ui.core.CalendarType or an empty string. If no type is set, the default type of the\nconfiguration is used.\nNote: If data binding on value property with type sap.ui.model.type.Date is used, this property will be ignored."
            }, {
                "name": "secondaryCalendarType",
                "documentation": "If set, the days in the calendar popup are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
            }, {
                "name": "minDate",
                "documentation": "Minimum date that can be shown and selected in the DatePicker. This must be a JavaScript date object. Note: If the minDate is set to be after the maxDate,\nthe maxDate and the minDate are switched before rendering."
            }, {
                "name": "maxDate",
                "documentation": "Maximum date that can be shown and selected in the DatePicker. This must be a JavaScript date object. Note: If the maxDate is set to be before the minDate,\nthe maxDate and the minDate are switched before rendering."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "navigate",
                "documentation": "Fired when navigating in Calendar popup."
            }, {
                "name": "displayFormat",
                "documentation": "Determines the format, displayed in the input field."
            }, {
                "name": "valueFormat",
                "documentation": "Determines the format of the value property."
            }, {
                "name": "dateValue",
                "documentation": "Holds a reference to a JavaScript Date Object. The value (string)\nproperty will be set according to it. Alternatively, if the value\nand valueFormat pair properties are supplied instead,\nthe dateValue will be instantiated according to the parsed\nvalue."
            }, {
                "name": "initialFocusedDateValue",
                "documentation": "Holds a reference to a JavaScript Date Object to define the initially focused\ndate/time when the picker popup is opened. Notes:\n\nSetting this property does not change the value property.\nDepending on the context this property is used in ( sap.m.TimePicker, sap.m.DatePicker or sap.m.DateTimePicker), it takes into account only the time part, only\nthe date part or both parts of the JavaScript Date Object.\n"
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.DateTimeField",
            "documentation": "Enables the users to select a localized date. Overview The DatePicker lets the users select a localized date using touch,\nmouse, or keyboard input. It consists of two parts: the date input field and the\ndate picker. Note: The sap.ui.unified.Calendar is used internally only if the\nDatePicker is opened (not used for the initial rendering). If the\nsap.ui.unified library is not loaded before the\nDatePicker is opened, it will be loaded upon opening. This could\nlead to a waiting time when the DatePicker is opened for the\nfirst time. To prevent this, apps using the DatePicker should also\nload the sap.ui.unified library. Usage The user can enter a date by:\nUsing the calendar that opens in a popup\nTyping it in directly in the input field (not available for mobile devices) On app level, there are two options to provide a date for the\nDatePicker - as a string to the value property or as\na JavaScript Date object to the dateValue property (only one of\nthese properties should be used at a time): Use the value property if you want to bind the\nDatePicker to a model using the sap.ui.model.type.Date\nUse the value property if the date is provided as a string from\nthe backend or inside the app (for example, as ABAP type DATS field)\nUse the dateValue property if the date is already provided as a\nJavaScript Date object or you want to work with a JavaScript Date object Formatting All formatting and parsing of dates from and to strings is done using the sap.ui.core.format.DateFormat. If a date is entered by typing it into\nthe input field, it must fit to the used date format and locale. Supported format options are pattern-based on Unicode LDML Date Format notation.\nSee http://unicode.org/reports/tr35/ For example, if the valueFormat is \"yyyy-MM-dd\",\nthe displayFormat is \"MMM d, y\", and the used locale is English, a\nvalid value string is \"2015-07-30\", which leads to an output of \"Jul 30, 2015\". If no placeholder is set to the DatePicker, the used\ndisplayFormat is displayed as a placeholder. If another placeholder\nis needed, it must be set. Note: If the string does NOT match the displayFormat\n(from user input) or the valueFormat (on app level), the sap.ui.core.format.DateFormat makes an attempt to parse it based on the\nlocale settings. For more information, see the respective documentation in the\nAPI Reference. Responsive behavior The DatePicker is smaller in compact mode and provides a\ntouch-friendly size in cozy mode. On mobile devices, one tap on the input field opens the DatePicker\nin full screen. To close the window, the user can select a date (which triggers\nthe close event), or select Cancel."
        },
        "DateRangeSelection": {
            "attributes": [{
                "name": "delimiter",
                "documentation": "Delimiter between start and end date. Default value is \"-\".\nIf no delimiter is given, the one defined for the used locale is used."
            }, {
                "name": "secondDateValue",
                "documentation": "The end date of the range as JavaScript Date object. This is independent from any formatter. Note: If this property is used, the value property should not be changed from the caller."
            }, {
                "name": "from",
                "documentation": "Start date of the range."
            }, {
                "name": "to",
                "documentation": "End date of the range."
            }, {
                "name": "displayFormatType",
                "documentation": "Displays date in this given type in input field. Default value is taken from locale settings.\nAccepted are values of sap.ui.core.CalendarType or an empty string. If no type is set, the default type of the\nconfiguration is used.\nNote: If data binding on value property with type sap.ui.model.type.Date is used, this property will be ignored."
            }, {
                "name": "secondaryCalendarType",
                "documentation": "If set, the days in the calendar popup are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
            }, {
                "name": "minDate",
                "documentation": "Minimum date that can be shown and selected in the DatePicker. This must be a JavaScript date object. Note: If the minDate is set to be after the maxDate,\nthe maxDate and the minDate are switched before rendering."
            }, {
                "name": "maxDate",
                "documentation": "Maximum date that can be shown and selected in the DatePicker. This must be a JavaScript date object. Note: If the maxDate is set to be before the minDate,\nthe maxDate and the minDate are switched before rendering."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "navigate",
                "documentation": "Fired when navigating in Calendar popup."
            }, {
                "name": "displayFormat",
                "documentation": "Determines the format, displayed in the input field."
            }, {
                "name": "valueFormat",
                "documentation": "Determines the format of the value property."
            }, {
                "name": "dateValue",
                "documentation": "Holds a reference to a JavaScript Date Object. The value (string)\nproperty will be set according to it. Alternatively, if the value\nand valueFormat pair properties are supplied instead,\nthe dateValue will be instantiated according to the parsed\nvalue."
            }, {
                "name": "initialFocusedDateValue",
                "documentation": "Holds a reference to a JavaScript Date Object to define the initially focused\ndate/time when the picker popup is opened. Notes:\n\nSetting this property does not change the value property.\nDepending on the context this property is used in ( sap.m.TimePicker, sap.m.DatePicker or sap.m.DateTimePicker), it takes into account only the time part, only\nthe date part or both parts of the JavaScript Date Object.\n"
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "displayFormat",
                "documentation": "Determines the format, displayed in the input field."
            }, {
                "name": "valueFormat",
                "documentation": "Determines the format of the value property."
            }, {
                "name": "dateValue",
                "documentation": "Holds a reference to a JavaScript Date Object. The value (string)\nproperty will be set according to it. Alternatively, if the value\nand valueFormat pair properties are supplied instead,\nthe dateValue will be instantiated according to the parsed\nvalue."
            }, {
                "name": "initialFocusedDateValue",
                "documentation": "Holds a reference to a JavaScript Date Object to define the initially focused\ndate/time when the picker popup is opened. Notes:\n\nSetting this property does not change the value property.\nDepending on the context this property is used in ( sap.m.TimePicker, sap.m.DatePicker or sap.m.DateTimePicker), it takes into account only the time part, only\nthe date part or both parts of the JavaScript Date Object.\n"
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.DatePicker",
            "documentation": "A single-field input control that enables the users to enter a localized date range. Overview The DateRangeSelection enables the users to enter a localized\ndate range using touch, mouse, keyboard input, or by selecting a date range in\nthe calendar. They can also navigate directly from one month or year to another. Note: The sap.ui.unified.Calendar is used internally only if the\nDateRangeSelection is opened (not used for the initial rendering).\nIf the sap.ui.unified library is not loaded before the\nDateRangeSelection is opened, it will be loaded upon opening.\nThis could lead to a waiting time when the DateRangeSelection is\nopened for the first time. To prevent this, apps using the\nDateRangeSelection should also load the sap.ui.unified\nlibrary. Usage When to use? If you need a time range and know that your user is a power user who has to\ninput lots of data. If the keyboard is the primary device used for navigating\nthe app, use two input fields. This allows the user to quickly jump from field\nto field. By selecting a date in one of the fields, the other field should\nrecognize the information and jump to the same selection. When not to use? If the user's primary goal is not to select ranges or if you just want to enter\na date and a time. For such cases, use the sap.m.DatePicker or sap.m.TimePicker. The user can enter a date by:\nUsing the calendar that opens in a popup\nTyping it in directly in the input field (not available for mobile devices) On app level, there are two options to provide a date for the\nDateRangeSelection - date range as a string to the\nvalue property or JavaScript Date objects to the\ndateValue and secondDateValue properties (only one of\nthese options should be used at a time): Use the value property if the date range is already provided as\na formatted string\nUse the dateValue and secondDateValue properties\nif the date range is already provided as JavaScript Date objects or you want to\nwork with JavaScript Date objects Formatting All formatting and parsing of dates from and to strings is done using the sap.ui.core.format.DateFormat. If a date is entered by typing it into\nthe input field, it must fit to the used date format and locale. Supported format options are pattern-based on Unicode LDML Date Format notation.\nSee http://unicode.org/reports/tr35/ For example, if the displayFormat is \"MMM d, y\", delimiter is \"-\",\nand the used locale is English, a valid value string is \"Jul 29, 2015 - Jul 31,\n2015\" and it is displayed in the same way in the input field. If no placeholder is set to the DateRangeSelection, the used\ndisplayFormat is displayed as a placeholder. If another placeholder\nis needed, it must be set. Note: If the string does NOT match the displayFormat\n(from user input) or the valueFormat (on app level), the sap.ui.core.format.DateFormat makes an attempt to parse it based on the\nlocale settings. For more information, see the respective documentation in the\nAPI Reference. Responsive behavior The DateRangeSelection is fully responsive. It is smaller in\ncompact mode and provides a touch-friendly size in cozy mode."
        },
        "DateTimeField": {
            "attributes": [{
                "name": "displayFormat",
                "documentation": "Determines the format, displayed in the input field."
            }, {
                "name": "valueFormat",
                "documentation": "Determines the format of the value property."
            }, {
                "name": "dateValue",
                "documentation": "Holds a reference to a JavaScript Date Object. The value (string)\nproperty will be set according to it. Alternatively, if the value\nand valueFormat pair properties are supplied instead,\nthe dateValue will be instantiated according to the parsed\nvalue."
            }, {
                "name": "initialFocusedDateValue",
                "documentation": "Holds a reference to a JavaScript Date Object to define the initially focused\ndate/time when the picker popup is opened. Notes:\n\nSetting this property does not change the value property.\nDepending on the context this property is used in ( sap.m.TimePicker, sap.m.DatePicker or sap.m.DateTimePicker), it takes into account only the time part, only\nthe date part or both parts of the JavaScript Date Object.\n"
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.InputBase",
            "documentation": "The sap.m.DateTimeField control provides a basic functionality for date/time input controls. To be extended by date and time picker controls. For internal use only."
        },
        "DateTimeInput": {
            "attributes": [{
                "name": "value",
                "documentation": "Defines the value of the control. The new value must be in the format set by valueFormat. The \"Now\" literal can also be assigned as a parameter to show the current date and/or time."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "type",
                "documentation": "Type of DateTimeInput (e.g. Date, Time, DateTime)"
            }, {
                "name": "displayFormat",
                "documentation": "Displays date value in this given format in text field. Default value is taken from locale settings.\nIf you use data-binding on value property with type sap.ui.model.type.Date then you can ignore this property or the latter wins.\nIf the user's browser supports native picker then this property is overwritten by browser with locale settings."
            }, {
                "name": "valueFormat",
                "documentation": "Given value property should match with valueFormat to parse date. Default value is taken from locale settings.\nYou can only set and get value in this format.\nIf you use data-binding on value property with type sap.ui.model.type.Date you can ignore this property or the latter wins."
            }, {
                "name": "dateValue",
                "documentation": "This property as JavaScript Date Object can be used to assign a new value which is independent from valueFormat."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "This event gets fired when the selection has finished and the value has changed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Allows end users to interact with date and/or time and select from a date and/or time pad. Note: This control should not be used any longer, instead please use the dedicated sap.m.DatePicker, sap.m.TimePicker or sap.m.DateTimePicker control."
        },
        "DateTimePicker": {
            "attributes": [{
                "name": "displayFormatType",
                "documentation": "Displays date in this given type in input field. Default value is taken from locale settings.\nAccepted are values of sap.ui.core.CalendarType or an empty string. If no type is set, the default type of the\nconfiguration is used.\nNote: If data binding on value property with type sap.ui.model.type.Date is used, this property will be ignored."
            }, {
                "name": "secondaryCalendarType",
                "documentation": "If set, the days in the calendar popup are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
            }, {
                "name": "minDate",
                "documentation": "Minimum date that can be shown and selected in the DatePicker. This must be a JavaScript date object. Note: If the minDate is set to be after the maxDate,\nthe maxDate and the minDate are switched before rendering."
            }, {
                "name": "maxDate",
                "documentation": "Maximum date that can be shown and selected in the DatePicker. This must be a JavaScript date object. Note: If the maxDate is set to be before the minDate,\nthe maxDate and the minDate are switched before rendering."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "navigate",
                "documentation": "Fired when navigating in Calendar popup."
            }, {
                "name": "displayFormat",
                "documentation": "Determines the format, displayed in the input field."
            }, {
                "name": "valueFormat",
                "documentation": "Determines the format of the value property."
            }, {
                "name": "dateValue",
                "documentation": "Holds a reference to a JavaScript Date Object. The value (string)\nproperty will be set according to it. Alternatively, if the value\nand valueFormat pair properties are supplied instead,\nthe dateValue will be instantiated according to the parsed\nvalue."
            }, {
                "name": "initialFocusedDateValue",
                "documentation": "Holds a reference to a JavaScript Date Object to define the initially focused\ndate/time when the picker popup is opened. Notes:\n\nSetting this property does not change the value property.\nDepending on the context this property is used in ( sap.m.TimePicker, sap.m.DatePicker or sap.m.DateTimePicker), it takes into account only the time part, only\nthe date part or both parts of the JavaScript Date Object.\n"
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "displayFormat",
                "documentation": "Determines the format, displayed in the input field."
            }, {
                "name": "valueFormat",
                "documentation": "Determines the format of the value property."
            }, {
                "name": "dateValue",
                "documentation": "Holds a reference to a JavaScript Date Object. The value (string)\nproperty will be set according to it. Alternatively, if the value\nand valueFormat pair properties are supplied instead,\nthe dateValue will be instantiated according to the parsed\nvalue."
            }, {
                "name": "initialFocusedDateValue",
                "documentation": "Holds a reference to a JavaScript Date Object to define the initially focused\ndate/time when the picker popup is opened. Notes:\n\nSetting this property does not change the value property.\nDepending on the context this property is used in ( sap.m.TimePicker, sap.m.DatePicker or sap.m.DateTimePicker), it takes into account only the time part, only\nthe date part or both parts of the JavaScript Date Object.\n"
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.DatePicker",
            "documentation": "Enables the users to select date and time values in a combined input. Overview The DateTimePicker control consists of two parts: the input field and the\ndate/time picker. Note: The sap.ui.unified.Calendar is used internally only if the\nDateTimePicker is opened (not used for the initial rendering). If\nthe sap.ui.unified library is not loaded before the\nDateTimePicker is opened, it will be loaded upon opening. This\ncould lead to a waiting time when the DateTimePicker is opened for\nthe first time. To prevent this, apps using the DateTimePicker\nshould also load the sap.ui.unified library. Usage Use this control if you need a combined date and time input control. Don't use it if you want to use either a date or a time value. In this case,\nuse the sap.m.DatePicker or the sap.m.TimePicker controls\ninstead. The user can enter a date by:\n Using the calendar or a time selector that opens in a popup\nTyping it in directly in the input field On app level, there are two options to provide a date for the\nDateTimePicker - as a string to the value property\nor as a JavaScript Date object to the dateValue property (only one\nof these properties should be used at a time): Use the value property if you want to bind the\nDateTimePicker to a model using the\nsap.ui.model.type.DateTime\nUse the value property if the date is provided as a string from\nthe backend or inside the app (for example, as ABAP type DATS field)\nUse the dateValue property if the date is already provided as a\nJavaScript Date object or you want to work with a JavaScript Date object Formatting All formatting and parsing of dates from and to strings is done using the sap.ui.core.format.DateFormat. If a date is entered by typing it into\nthe input field, it must fit to the used date format and locale. Supported format options are pattern-based on Unicode LDML Date Format notation.\nSee http://unicode.org/reports/tr35/ For example, if the valueFormat is \"yyyy-MM-dd-HH-mm-ss\", the\ndisplayFormat is \"MMM d, y, HH:mm:ss\", and the used locale is\nEnglish, a valid value string is \"2015-07-30-10-30-15\", which leads to an output\nof \"Jul 30, 2015, 10:30:15\". If no placeholder is set to the DateTimePicker, the used\ndisplayFormat is displayed as a placeholder. If another placeholder\nis needed, it must be set. Note: If the string does NOT match the displayFormat\n(from user input) or the valueFormat (on app level), the sap.ui.core.format.DateFormat makes an attempt to parse it based on the\nlocale settings. For more information, see the respective documentation in the\nAPI Reference. Responsive behavior The DateTimePicker is responsive and fully adapts to all devices.\nFor larger screens, such as tablet or desktop, it opens as a popover. For\nmobile devices, it opens in full screen."
        },
        "Dialog": {
            "attributes": [{
                "name": "icon",
                "documentation": "Icon displayed in the dialog's header. This icon is invisible on the iOS platform and it's density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen."
            }, {
                "name": "title",
                "documentation": "Title text appears in the dialog header."
            }, {
                "name": "showHeader",
                "documentation": "Determines whether the header is shown inside the dialog. If this property is set to true, the text and icon property are ignored. This property has a default value true."
            }, {
                "name": "type",
                "documentation": "The type of the dialog. In some themes, the type \"message\" will limit the dialog's width within 480px on tablet and desktop."
            }, {
                "name": "state",
                "documentation": "The state affects the icon and the title color. If other than \"None\" is set, a predefined icon will be added to the dialog. Setting icon property will overwrite the predefined icon. The default value is \"None\" which doesn't add any icon to the Dialog control. This property is by now only supported by blue crystal theme."
            }, {
                "name": "stretchOnPhone",
                "documentation": "Determines whether the dialog will displayed on full screen on a phone."
            }, {
                "name": "stretch",
                "documentation": "Determines if the dialog will be stretched to full screen. This property is only applicable to standard dialog and message type dialog ignores this property."
            }, {
                "name": "contentWidth",
                "documentation": "Preferred width of content in Dialog. This property affects the width of dialog on phone in landscape mode, tablet or desktop, because the dialog has a fixed width on phone in portrait mode. If the preferred width is less than the minimum width of the dialog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of dialog width on tablet is 400px."
            }, {
                "name": "contentHeight",
                "documentation": "Preferred height of content in Dialog. If the preferred height is bigger than the available space on screen, it will be overwritten by the maximum available height on screen in order to make sure that dialog isn't cut off."
            }, {
                "name": "horizontalScrolling",
                "documentation": "Indicates if user can scroll horizontally inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property."
            }, {
                "name": "verticalScrolling",
                "documentation": "Indicates if user can scroll vertically inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property."
            }, {
                "name": "resizable",
                "documentation": "Indicates whether the dialog is resizable. the dialog is resizable. If this property is set to true, the dialog will have a resize handler in it's bottom right corner. This property has a default value false. The Dialog can be resizable only in desktop mode."
            }, {
                "name": "draggable",
                "documentation": "Indicates whether the dialog is draggable. If this property is set to true, the dialog will be draggable by it's header. This property has a default value false. The Dialog can be draggable only in desktop mode."
            }, {
                "name": "escapeHandler",
                "documentation": "This property expects a function with one parameter of type Promise. In the function you should call either resolve() or reject() on the Promise object.\nThe function allows you to define custom behaviour which will be executed when the ESCAPE key is pressed. By default when the ESCAPE key is pressed the Dialog is immediately closed."
            }, {
                "name": "leftButton",
                "documentation": "LeftButton is shown at the left edge of the bar in iOS, and at the right side of the bar for the other platforms. Please set this to null if you want to remove the left button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored. Setting leftButton will also set the beginButton internally."
            }, {
                "name": "rightButton",
                "documentation": "RightButton is always shown at the right edge of the bar. Please set this to null if you want to remove the right button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored. Setting rightButton will also set the endButton internally."
            }, {
                "name": "initialFocus",
                "documentation": "Focus is set to the dialog in the sequence of leftButton and rightButton when available. But if some other control needs to get the focus other than one of those two buttons, set the initialFocus with the control which should be focused on. Setting initialFocus to input controls doesn't open the on screen keyboard on mobile device, this is due to the browser limitation that the on screen keyboard can't be opened with javascript code. The opening of on screen keyboard must be triggered by real user action."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "beforeOpen",
                "documentation": "This event will be fired before the dialog is opened."
            }, {
                "name": "afterOpen",
                "documentation": "This event will be fired after the dialog is opened."
            }, {
                "name": "beforeClose",
                "documentation": "This event will be fired before the dialog is closed."
            }, {
                "name": "afterClose",
                "documentation": "This event will be fired after the dialog is closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A popup that interrupts the current processing and prompts the user for an action or an input, in a modal mode.\nOverview\nThe Dialog control is used to prompt the user for an action or a confirmation. It interrupts the current app processing as it is the only focused UI element and the main screen is dimmed/blocked.\nThe content of the dialog is fully customizable.\nStructure\nA dialog consists of a title, optional subtitle, content area and a footer for action buttons.\nThe dialog is usually displayed at the center of the screen. Its size and position can be changed by the user.\nTo enable this, you need to set the properties resizable and draggable accordingly. There are other specialized types of dialogs:\n\n sap.m.P13nDialog Personalization dialog - used for personalizing sorting, filtering and grouping in tables\n sap.m.SelectDialog Select dialog - used to select one or more items from a comprehensive list\n sap.m.TableSelectDialog Table select dialog - used to make a selection from a comprehensive table containing multiple attributes or values\n sap.ui.comp.valuehelpdialog.ValueHelpDialog Value help dialog - used to help the user find and select single and multiple values\n sap.m.ViewSettingsDialog View settings dialog - used to sort, filter, or group data within a (master) list or a table\n sap.m.BusyDialog Busy dialog - used to block the screen and inform the user about an ongoing operation\n\nUsage\nWhen to use:\n\nYou want to display a system message.\nYou want to interrupt the user’s action.\nYou want to show a message with a short and a long description.\n\nWhen not to use:\n\nYou just want to confirm a successful action.\n\nResponsive Behavior\n\nIf the stretch property is set to true, the dialog displays on full screen.\nIf the contentWidth and/or contentHeight properties are set, the dialog will try to fill those sizes.\nIf there is no specific sizing, the dialog will try to adjust its size to its content.\n\nSmartphones\nIf the dialog has one or two actions they will cover the entire footer. If there are more actions, they will overflow.\nTablets\nThe action buttons in the toolbar are right-aligned. Use cozy mode on tablet devices.\nDesktop\nThe action buttons in the toolbar are right-aligned. Use compact mode on desktop."
        },
        "DisplayListItem": {
            "attributes": [{
                "name": "label",
                "documentation": "Defines the label of the list item."
            }, {
                "name": "value",
                "documentation": "Defines the value of the list item."
            }, {
                "name": "valueTextDirection",
                "documentation": "Defines the value text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "sap.m.DisplayListItem can be used to represent a label and a value."
        },
        "DraftIndicator": {
            "attributes": [{
                "name": "state",
                "documentation": "State of the indicator. Could be \"Saving\", \"Saved\" and \"Clear\"."
            }, {
                "name": "minDisplayTime",
                "documentation": "Minimum time in milliseconds for showing the draft indicator"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A draft indicator is sap.m.Label."
        },
        "FacetFilter": {
            "attributes": [{
                "name": "showPersonalization",
                "documentation": "If set to true and the FacetFilter type is Simple, then the Add Facet icon will be displayed and each facet button will also have a Facet Remove icon displayed beside it, allowing the user to deactivate the facet."
            }, {
                "name": "type",
                "documentation": "Defines the default appearance of the FacetFilter on the device. Possible values are Simple (default) and Light."
            }, {
                "name": "liveSearch",
                "documentation": "Enables/disables live search in the search field of all sap.m.FacetFilterList instances."
            }, {
                "name": "showSummaryBar",
                "documentation": "Shows the summary bar instead of the FacetFilter buttons bar when set to true."
            }, {
                "name": "showReset",
                "documentation": "Shows/hides the FacetFilter Reset button."
            }, {
                "name": "showPopoverOKButton",
                "documentation": "If set to true, an OK button is displayed for every FacetFilterList popover. This button allows the user to close the popover from within the popover instead of having to click outside of it."
            }, {
                "name": "reset",
                "documentation": "Fired when the Reset button is pressed to inform that all FacetFilterLists need to be reset."
            }, {
                "name": "confirm",
                "documentation": "Fired when the user confirms filter selection."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Provides filtering functionality with multiple parameters. Overview The FacetFilter control is used to provide filtering functionality\nwith multiple parameters and supports the users in finding the information they\nneed from potentially very large data sets. Your app can have dependencies between facets where selection of filter items in\none facet list limits the list of valid filters in another facet list. The FacetFilter uses sap.m.FacetFilterList FacetFilterList and sap.m.FacetFilterItem FacetFilterItem to model facets and their associated\nfilters. Note:  sap.m.FacetFilterList FacetFilterList is a subclass of sap.m.List and supports growing enablement feature via the property\ngrowing. When you use this feature, be aware that it only works with\none-way data binding.\nHaving growing feature enabled when the items aggregation is bound to\na model with two-way data binding, may lead to unexpected and/or inconsistent\nbehavior across browsers, such as unexpected closing of the list. Usage Use the FacetFilter if your app displays a large list of\nitems that can be grouped by multiple parameters, for example products by category\nand supplier. With the FacetFilter, you allow the users\nto dynamically filter the list so it only displays products from the categories and\nsuppliers they want to see. While the sap.m.FacetFilterList popup is opened (when the user selects a button\ncorresponding to the list's name), any other activities leading to focus change will\nclose it. For example, when the popup is opened and the app developer loads a sap.m.BusyDialog or any other dialog that obtains the focus, the popup will\nbe closed. Responsive behavior The FacetFilter supports the following two types, which\ncan be configured using the control's type property: Simple type (default) - only available for desktop and tablet screen sizes.\nThe active facets are displayed as individually selectable buttons on the toolbar.\nLight type - automatically enabled on smart phone sized devices, but also\navailable for desktop and tablets. The active facets and selected filter items are\ndisplayed in the summary bar. When the user selects the summary bar, a navigable\ndialog list of all facets is displayed. When the user selects a facet, the dialog\nscrolls to show the list of filters that are available for the selected facet. Additional Information For more information, go to Developer Guide section in the Demo Kit and navigate to\nMore&nbsp;About&nbsp;Controls&nbsp;>&nbsp;sap.m&nbsp;>&nbsp;Facet&nbsp;Filter"
        },
        "FacetFilterItem": {
            "attributes": [{
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }, {
                "name": "text",
                "documentation": "Determines the text to be displayed for the item."
            }, {
                "name": "count",
                "documentation": "Defines the number of objects that match this item in the target data set."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "Represents a value for the sap.m.FacetFilterList control."
        },
        "FacetFilterList": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the title of the facet. The facet title is displayed on the facet button when the FacetFilter type is set to Simple. It is also displayed as a list item in the facet page of the dialog."
            }, {
                "name": "wordWrap",
                "documentation": "If set to true, the item text wraps when it is too long."
            }, {
                "name": "multiSelect",
                "documentation": "Specifies whether multiple or single selection is used."
            }, {
                "name": "active",
                "documentation": "Indicates that the list is displayed as a button when the FacetFilter type is set to Simple."
            }, {
                "name": "enableCaseInsensitiveSearch",
                "documentation": "If set to true, enables case-insensitive search for OData."
            }, {
                "name": "allCount",
                "documentation": "Determines the number of objects that match this item in the target data set when all filter items are selected."
            }, {
                "name": "sequence",
                "documentation": "Sequence that determines the order in which FacetFilterList is shown on the FacetFilter. Lists are rendered by ascending order of sequence."
            }, {
                "name": "key",
                "documentation": "Unique identifier for this filter list."
            }, {
                "name": "showRemoveFacetIcon",
                "documentation": "Specifies whether remove icon for facet is visible or hidden."
            }, {
                "name": "retainListSequence",
                "documentation": "Retains the list sequence if it is inactive and made active again."
            }, {
                "name": "dataType",
                "documentation": "FacetFilterList data type. Only String data type will provide search function."
            }, {
                "name": "listOpen",
                "documentation": "Fired before the filter list is opened."
            }, {
                "name": "listClose",
                "documentation": "Triggered after the list of items is closed."
            }, {
                "name": "backgroundDesign",
                "documentation": "Sets the background style of the list. Depending on the theme, you can change the state of the background from Solid to Translucent or to Transparent."
            }, {
                "name": "inset",
                "documentation": "Defines the indentation of the container. Setting it to true indents the list."
            }, {
                "name": "headerText",
                "documentation": "Defines the header text that appears in the control.\nNote: If headerToolbar aggregation is set, then this property is ignored."
            }, {
                "name": "headerDesign",
                "documentation": "Defines the header style of the control. Possible values are Standard and Plain."
            }, {
                "name": "footerText",
                "documentation": "Defines the footer text that appears in the control."
            }, {
                "name": "mode",
                "documentation": "Defines the mode of the control (e.g. None, SingleSelect, MultiSelect, Delete)."
            }, {
                "name": "width",
                "documentation": "Sets the width of the control."
            }, {
                "name": "includeItemInSelection",
                "documentation": "Defines whether the items are selectable by clicking on the item itself (true) rather than having to set the selection control first.\nNote: The SingleSelectMaster mode also provides this functionality by default."
            }, {
                "name": "showUnread",
                "documentation": "Activates the unread indicator for all items, if set to true."
            }, {
                "name": "noDataText",
                "documentation": "This text is displayed when the control contains no items."
            }, {
                "name": "showNoData",
                "documentation": "Defines whether or not the text specified in the noDataText property is displayed."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "When this property is set to true, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the busyIndicatorDelay property."
            }, {
                "name": "modeAnimationOn",
                "documentation": "Defines if animations will be shown while switching between modes."
            }, {
                "name": "showSeparators",
                "documentation": "Defines which item separator style will be used."
            }, {
                "name": "swipeDirection",
                "documentation": "Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the swipeContent aggregation."
            }, {
                "name": "growing",
                "documentation": "If set to true, enables the growing feature of the control to load more items by requesting from the model.\nNote:: This feature only works when an items aggregation is bound. Growing must not be used together with two-way binding."
            }, {
                "name": "growingThreshold",
                "documentation": "Defines the number of items to be requested from the model for each grow.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingTriggerText",
                "documentation": "Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingScrollToLoad",
                "documentation": "If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control.\nNote: This property can only be used if the growing property is set to true and only if there is one instance of sap.m.List or sap.m.Table inside the scrollable scroll container (e.g sap.m.Page)."
            }, {
                "name": "growingDirection",
                "documentation": "Defines the direction of the growing feature.\nIf set to Downwards the user has to scroll down to load more items or the growing button is displayed at the bottom.\nIf set to Upwards the user has to scroll up to load more items or the growing button is displayed at the top."
            }, {
                "name": "rememberSelections",
                "documentation": "If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\nNote: This feature works only if two-way data binding for the selected property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the JSONModel is changed."
            }, {
                "name": "keyboardMode",
                "documentation": "Defines keyboard handling behavior of the control."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when selection is changed via user interaction. In MultiSelect mode, this event is also fired on deselection."
            }, {
                "name": "selectionChange",
                "documentation": "Fires when selection is changed via user interaction inside the control."
            }, {
                "name": "delete",
                "documentation": "Fires when delete icon is pressed by user."
            }, {
                "name": "swipe",
                "documentation": "Fires after user's swipe action and before the swipeContent is shown. On the swipe event handler, swipeContent can be changed according to the swiped item.\nCalling the preventDefault method of the event cancels the swipe action."
            }, {
                "name": "growingStarted",
                "documentation": "Fires before the new growing chunk is requested from the model."
            }, {
                "name": "growingFinished",
                "documentation": "Fires after the new growing chunk has been fetched from the model and processed by the control."
            }, {
                "name": "updateStarted",
                "documentation": "Fires before items binding is updated (e.g. sorting, filtering) Note: Event handler should not invalidate the control."
            }, {
                "name": "updateFinished",
                "documentation": "Fires after items binding is updated and processed by the control."
            }, {
                "name": "itemPress",
                "documentation": "Fires when an item is pressed unless the item's type property is Inactive."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the context menu is opened.\nWhen the context menu is opened, the binding context of the item is set to the given contextMenu."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.List",
            "documentation": "Represents a list of values for the sap.m.FacetFilter control. Note: FacetFilterList is a subclass of sap.m.List and supports\ngrowing enablement feature via the property growing. When you use this feature,\nbe aware that it only works with one-way data binding.\nHaving growing feature enabled when the items aggregation is bound to\na model with two-way data binding, may lead to unexpected and/or inconsistent\nbehavior across browsers, such as unexpected closing of the list. While the FacetFilterList popup is opened (when the user selects a button\ncorresponding to the list's name), any other activities leading to focus change will\nclose it. For example, when the popup is opened and the app developer loads a sap.m.BusyDialog or any other dialog that obtains the focus, the popup will\nbe closed."
        },
        "FeedContent": {
            "attributes": [{
                "name": "size",
                "documentation": "Updates the size of the chart. If not set then the default size is applied based on the device tile."
            }, {
                "name": "contentText",
                "documentation": "The content text."
            }, {
                "name": "subheader",
                "documentation": "The subheader."
            }, {
                "name": "value",
                "documentation": "The actual value."
            }, {
                "name": "valueColor",
                "documentation": "The semantic color of the value."
            }, {
                "name": "truncateValueTo",
                "documentation": "The number of characters to display for the value property."
            }, {
                "name": "press",
                "documentation": "The event is triggered when the feed content is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Displays a tile containing the text of the feed, a subheader, and a numeric value."
        },
        "FeedInput": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Set this flag to \"false\" to disable both text input and post button."
            }, {
                "name": "maxLength",
                "documentation": "The maximum length (the maximum number of characters) for the feed input's value. By default this is not limited."
            }, {
                "name": "placeholder",
                "documentation": "The placeholder text shown in the input area as long as the user has not entered any text value."
            }, {
                "name": "value",
                "documentation": "The text value of the feed input. As long as the user has not entered any text the post button is disabled"
            }, {
                "name": "icon",
                "documentation": "Icon to be displayed as a graphical element within the feed input. This can be an image or an icon from the icon font."
            }, {
                "name": "showIcon",
                "documentation": "If set to \"true\" (default), icons will be displayed. In case no icon is provided the standard placeholder will be displayed. if set to \"false\" icons are hidden"
            }, {
                "name": "iconDensityAware",
                "documentation": "Some mobile devices support higher resolution images while others do not. Therefore, you should provide image resources for all relevant densities.\nIf the property is set to \"true\", one or more requests are sent to the server to try and get the perfect density version of an image. If an image of a certain density is not available, the image control falls back to the default image, which should be provided. If you do not have higher resolution images, you should set the property to \"false\" to avoid unnecessary round-trips. Please be aware that this property is relevant only for images and not for icons."
            }, {
                "name": "buttonTooltip",
                "documentation": "Sets a new tooltip for Submit button. The tooltip can either be a simple string (which in most cases will be rendered as the title attribute of this element)\nor an instance of sap.ui.core.TooltipBase.\nIf a new tooltip is set, any previously set tooltip is deactivated.\nThe default value is set language dependent."
            }, {
                "name": "ariaLabelForPicture",
                "documentation": "Text for Picture which will be read by screenreader.\nIf a new ariaLabelForPicture is set, any previously set ariaLabelForPicture is deactivated."
            }, {
                "name": "post",
                "documentation": "The Post event is triggered when the user has entered a value and pressed the post button. After firing this event, the value is reset."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The Feed Input allows the user to enter text for a new feed entry and then post it."
        },
        "FeedListItem": {
            "attributes": [{
                "name": "icon",
                "documentation": "Icon to be displayed as graphical element within the FeedListItem. This can be an image or an icon from the icon font. If no icon is provided, a default person-placeholder icon is displayed.\nIcon is only shown if showIcon = true."
            }, {
                "name": "activeIcon",
                "documentation": "Icon displayed when the list item is active."
            }, {
                "name": "sender",
                "documentation": "Sender of the chunk"
            }, {
                "name": "text",
                "documentation": "The FeedListItem text. It supports html formatted tags as described in the documentation of sap.m.FormattedText"
            }, {
                "name": "info",
                "documentation": "The Info text."
            }, {
                "name": "timestamp",
                "documentation": "This chunks timestamp"
            }, {
                "name": "senderActive",
                "documentation": "If true, sender string is a link, which will fire 'senderPress' events. If false, sender is normal text."
            }, {
                "name": "iconActive",
                "documentation": "If true, icon is a link, which will fire 'iconPress' events. If false, icon is normal image"
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If bandwidth is the key for the application, set this value to false."
            }, {
                "name": "showIcon",
                "documentation": "If set to \"true\" (default), icons will be displayed, if set to false icons are hidden"
            }, {
                "name": "convertLinksToAnchorTags",
                "documentation": "Determines whether strings that appear to be links will be converted to HTML anchor tags, and what are the criteria for recognizing them."
            }, {
                "name": "convertedLinksDefaultTarget",
                "documentation": "Determines the target attribute of the generated HTML anchor tags. Note: Applicable only if ConvertLinksToAnchorTags property is used with a value other than sap.m.LinkConversion.None. Options are the standard values for the target attribute of the HTML anchor tag: _self, _top, _blank, _parent, _search."
            }, {
                "name": "maxCharacters",
                "documentation": "The expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktops as limits. Based on these values, the text of the FeedListItem is collapsed once text reaches these limits. In this case, only the specified number of characters is displayed. By clicking on the text link More, the entire text can be displayed. The text link Less collapses the text. The application is able to set the value to its needs."
            }, {
                "name": "senderPress",
                "documentation": "Event is fired when name of the sender is pressed."
            }, {
                "name": "iconPress",
                "documentation": "Event is fired when the icon is pressed."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "The control provides a set of properties for text, sender information, time stamp.\nBeginning with release 1.23 the new feature expand / collapse was introduced, which uses the property maxCharacters.\nBeginning with release 1.44, sap.m.FormattedText was introduced which allows html formatted text to be displayed"
        },
        "FeedListItemAction": {
            "attributes": [{
                "name": "icon",
                "documentation": "The icon of the action."
            }, {
                "name": "text",
                "documentation": "The text of the item. It is used as a tooltip and for accessibility reasons."
            }, {
                "name": "key",
                "documentation": "The key of the item."
            }, {
                "name": "press",
                "documentation": "The press event is fired when the user triggers the corresponding action."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "An action item of FeedListItem"
        },
        "FlexBox": {
            "attributes": [{
                "name": "height",
                "documentation": "The height of the sap.m.FlexBox. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined."
            }, {
                "name": "width",
                "documentation": "The width of the sap.m.FlexBox. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined."
            }, {
                "name": "displayInline",
                "documentation": "Determines whether the sap.m.FlexBox is in block or inline mode."
            }, {
                "name": "direction",
                "documentation": "Determines the direction of the layout of child elements."
            }, {
                "name": "fitContainer",
                "documentation": "Determines whether the sap.m.FlexBox will be sized to completely fill its container. If the sap.m.FlexBox is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport."
            }, {
                "name": "renderType",
                "documentation": "Determines whether the layout is rendered as a series of divs or as an unordered list (ul).\n\nWe recommend to use Bare in most cases to avoid layout issues due to browser inconsistencies."
            }, {
                "name": "justifyContent",
                "documentation": "Determines the layout behavior along the main axis."
            }, {
                "name": "alignItems",
                "documentation": "Determines the layout behavior of items along the cross-axis. \"Baseline\" is not supported in Internet Explorer 10."
            }, {
                "name": "wrap",
                "documentation": "Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below."
            }, {
                "name": "alignContent",
                "documentation": "Determines the layout behavior of container lines when there's extra space along the cross-axis. This property has no effect in Internet Explorer 10."
            }, {
                "name": "backgroundDesign",
                "documentation": "Defines the background style of the sap.m.FlexBox."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The sap.m.FlexBox control builds the container for a flexible box layout.\n\nNote: Be sure to check the renderType setting to avoid issues due to browser inconsistencies."
        },
        "FlexItemData": {
            "attributes": [{
                "name": "alignSelf",
                "documentation": "Determines cross-axis alignment of individual element (not currently supported in Internet Explorer)."
            }, {
                "name": "order",
                "documentation": "Determines the display order of flex items independent of their source code order."
            }, {
                "name": "growFactor",
                "documentation": "Determines the flexibility of the flex item when allocatable space is remaining."
            }, {
                "name": "shrinkFactor",
                "documentation": "The shrink factor determines how much the flex item will shrink relative to the rest of the flex items in the flex container when negative free space is distributed."
            }, {
                "name": "baseSize",
                "documentation": "The base size is the initial main size of the item for the flex algorithm. If set to \"auto\", this will be the computed size of the item."
            }, {
                "name": "minHeight",
                "documentation": "The minimum height of the flex item."
            }, {
                "name": "maxHeight",
                "documentation": "The maximum height of the flex item."
            }, {
                "name": "minWidth",
                "documentation": "The minimum height of the flex item."
            }, {
                "name": "maxWidth",
                "documentation": "The maximum height of the flex item."
            }, {
                "name": "styleClass",
                "documentation": "The style class will be applied to the flex item and can be used for CSS selectors."
            }, {
                "name": "backgroundDesign",
                "documentation": "Defines the background style of the flex item."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "Holds layout data for a FlexBox / HBox / VBox."
        },
        "FormattedText": {
            "attributes": [{
                "name": "htmlText",
                "documentation": "Text in HTML format.\nThe following tags are supported:\n\na\nabbr\nblockquote\nbr\ncite\ncode\nem\nh1\nh2\nh3\nh4\nh5\nh6\np\npre\nstrong\nspan\nu\ndl\ndt\ndl\nul\nol\nli\n\nclass, style, and target attributes are allowed.\nIf target is not set, links open in a new window by default.\nOnly safe href attributes can be used. See jQuery.sap.validateUrl. Note: Keep in mind that not supported HTML tags and\nthe content nested inside them are both not rendered by the control."
            }, {
                "name": "width",
                "documentation": "Optional width of the control in CSS units."
            }, {
                "name": "convertLinksToAnchorTags",
                "documentation": "Determines whether strings that appear to be links will be converted to HTML anchor tags,\nand what are the criteria for recognizing them."
            }, {
                "name": "convertedLinksDefaultTarget",
                "documentation": "Determines the target attribute of the generated HTML anchor tags. Note: Applicable only if ConvertLinksToAnchorTags property is used with a value other than sap.m.LinkConversion.None.\nOptions are the standard values for the target attribute of the HTML anchor tag:\n_self, _top, _blank, _parent, _search."
            }, {
                "name": "height",
                "documentation": "Optional height of the control in CSS units."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The FormattedText control allows the usage of a limited set of tags for inline display of formatted text in HTML format."
        },
        "GenericTile": {
            "attributes": [{
                "name": "mode",
                "documentation": "The mode of the GenericTile."
            }, {
                "name": "header",
                "documentation": "The header of the tile."
            }, {
                "name": "subheader",
                "documentation": "The subheader of the tile."
            }, {
                "name": "failedText",
                "documentation": "The message that appears when the control is in the Failed state."
            }, {
                "name": "size",
                "documentation": "The size of the tile. If not set, then the default size is applied based on the device."
            }, {
                "name": "frameType",
                "documentation": "The frame type: OneByOne or TwoByOne. Set to OneByOne as default if no property is defined or set to Auto by the app."
            }, {
                "name": "backgroundImage",
                "documentation": "The URI of the background image."
            }, {
                "name": "headerImage",
                "documentation": "The image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font."
            }, {
                "name": "state",
                "documentation": "The load status."
            }, {
                "name": "imageDescription",
                "documentation": "Description of a header image that is used in the tooltip."
            }, {
                "name": "scope",
                "documentation": "Changes the visualization in order to enable additional actions with the Generic Tile."
            }, {
                "name": "ariaLabel",
                "documentation": "Additional description for aria-label. The aria-label is rendered before the standard aria-label."
            }, {
                "name": "press",
                "documentation": "The event is triggered when the user presses the tile."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Displays header, subheader, and a customizable main area in a tile format. Since 1.44, also an in-line format which contains only header and subheader is supported."
        },
        "GroupHeaderListItem": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the title of the group header."
            }, {
                "name": "count",
                "documentation": "Defines the count of items in the group, but it could also be an amount which represents the sum of all amounts in the group.\nNote: Will not be displayed if not set."
            }, {
                "name": "upperCase",
                "documentation": "Allows to uppercase the group title."
            }, {
                "name": "titleTextDirection",
                "documentation": "Defines the title text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "sap.m.GroupHeaderListItem is used to display the title of a group and act as separator between groups in sap.m.List and sap.m.Table.\nNote: The inherited properties unread, selected, counter and press event from sap.m.ListItemBase are not supported."
        },
        "GrowingList": {
            "attributes": [{
                "name": "threshold",
                "documentation": "Number of items requested from the server. To activate this you should set growing property to \"true\""
            }, {
                "name": "triggerText",
                "documentation": "Text which is displayed on the trigger at the end of the list. The default is a translated text (\"Load More Data\") coming from the messagebundle properties.\nThis property can be used only if growing property is set \"true\" and scrollToLoad property is set \"false\"."
            }, {
                "name": "scrollToLoad",
                "documentation": "If you set this property to true then user needs to scroll end to trigger loading a new page. Default value is false which means user needs to scroll end and then click button to load new page.\nNOTE: This property can be set true, if growing property is set \"true\" and if you only have one instance of this control inside the scroll container(e.g Page)."
            }, {
                "name": "backgroundDesign",
                "documentation": "Sets the background style of the list. Depending on the theme, you can change the state of the background from Solid to Translucent or to Transparent."
            }, {
                "name": "inset",
                "documentation": "Defines the indentation of the container. Setting it to true indents the list."
            }, {
                "name": "headerText",
                "documentation": "Defines the header text that appears in the control.\nNote: If headerToolbar aggregation is set, then this property is ignored."
            }, {
                "name": "headerDesign",
                "documentation": "Defines the header style of the control. Possible values are Standard and Plain."
            }, {
                "name": "footerText",
                "documentation": "Defines the footer text that appears in the control."
            }, {
                "name": "mode",
                "documentation": "Defines the mode of the control (e.g. None, SingleSelect, MultiSelect, Delete)."
            }, {
                "name": "width",
                "documentation": "Sets the width of the control."
            }, {
                "name": "includeItemInSelection",
                "documentation": "Defines whether the items are selectable by clicking on the item itself (true) rather than having to set the selection control first.\nNote: The SingleSelectMaster mode also provides this functionality by default."
            }, {
                "name": "showUnread",
                "documentation": "Activates the unread indicator for all items, if set to true."
            }, {
                "name": "noDataText",
                "documentation": "This text is displayed when the control contains no items."
            }, {
                "name": "showNoData",
                "documentation": "Defines whether or not the text specified in the noDataText property is displayed."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "When this property is set to true, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the busyIndicatorDelay property."
            }, {
                "name": "modeAnimationOn",
                "documentation": "Defines if animations will be shown while switching between modes."
            }, {
                "name": "showSeparators",
                "documentation": "Defines which item separator style will be used."
            }, {
                "name": "swipeDirection",
                "documentation": "Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the swipeContent aggregation."
            }, {
                "name": "growing",
                "documentation": "If set to true, enables the growing feature of the control to load more items by requesting from the model.\nNote:: This feature only works when an items aggregation is bound. Growing must not be used together with two-way binding."
            }, {
                "name": "growingThreshold",
                "documentation": "Defines the number of items to be requested from the model for each grow.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingTriggerText",
                "documentation": "Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingScrollToLoad",
                "documentation": "If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control.\nNote: This property can only be used if the growing property is set to true and only if there is one instance of sap.m.List or sap.m.Table inside the scrollable scroll container (e.g sap.m.Page)."
            }, {
                "name": "growingDirection",
                "documentation": "Defines the direction of the growing feature.\nIf set to Downwards the user has to scroll down to load more items or the growing button is displayed at the bottom.\nIf set to Upwards the user has to scroll up to load more items or the growing button is displayed at the top."
            }, {
                "name": "rememberSelections",
                "documentation": "If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\nNote: This feature works only if two-way data binding for the selected property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the JSONModel is changed."
            }, {
                "name": "keyboardMode",
                "documentation": "Defines keyboard handling behavior of the control."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when selection is changed via user interaction. In MultiSelect mode, this event is also fired on deselection."
            }, {
                "name": "selectionChange",
                "documentation": "Fires when selection is changed via user interaction inside the control."
            }, {
                "name": "delete",
                "documentation": "Fires when delete icon is pressed by user."
            }, {
                "name": "swipe",
                "documentation": "Fires after user's swipe action and before the swipeContent is shown. On the swipe event handler, swipeContent can be changed according to the swiped item.\nCalling the preventDefault method of the event cancels the swipe action."
            }, {
                "name": "growingStarted",
                "documentation": "Fires before the new growing chunk is requested from the model."
            }, {
                "name": "growingFinished",
                "documentation": "Fires after the new growing chunk has been fetched from the model and processed by the control."
            }, {
                "name": "updateStarted",
                "documentation": "Fires before items binding is updated (e.g. sorting, filtering) Note: Event handler should not invalidate the control."
            }, {
                "name": "updateFinished",
                "documentation": "Fires after items binding is updated and processed by the control."
            }, {
                "name": "itemPress",
                "documentation": "Fires when an item is pressed unless the item's type property is Inactive."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the context menu is opened.\nWhen the context menu is opened, the binding context of the item is set to the given contextMenu."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.List",
            "documentation": "sap.m.GrowingList control is the container for all list items and inherits from sap.m.List control. Everything like the selection, deletion, unread states and inset style are also maintained here. In addition the control provides a loading mechanism to request data from the model and append the list items to the list. The request is started manually by tapping on the trigger at the end of the list."
        },
        "HBox": {
            "attributes": [{
                "name": "height",
                "documentation": "The height of the sap.m.FlexBox. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined."
            }, {
                "name": "width",
                "documentation": "The width of the sap.m.FlexBox. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined."
            }, {
                "name": "displayInline",
                "documentation": "Determines whether the sap.m.FlexBox is in block or inline mode."
            }, {
                "name": "direction",
                "documentation": "Determines the direction of the layout of child elements."
            }, {
                "name": "fitContainer",
                "documentation": "Determines whether the sap.m.FlexBox will be sized to completely fill its container. If the sap.m.FlexBox is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport."
            }, {
                "name": "renderType",
                "documentation": "Determines whether the layout is rendered as a series of divs or as an unordered list (ul).\n\nWe recommend to use Bare in most cases to avoid layout issues due to browser inconsistencies."
            }, {
                "name": "justifyContent",
                "documentation": "Determines the layout behavior along the main axis."
            }, {
                "name": "alignItems",
                "documentation": "Determines the layout behavior of items along the cross-axis. \"Baseline\" is not supported in Internet Explorer 10."
            }, {
                "name": "wrap",
                "documentation": "Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below."
            }, {
                "name": "alignContent",
                "documentation": "Determines the layout behavior of container lines when there's extra space along the cross-axis. This property has no effect in Internet Explorer 10."
            }, {
                "name": "backgroundDesign",
                "documentation": "Defines the background style of the sap.m.FlexBox."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.FlexBox",
            "documentation": "The HBox control builds the container for a horizontal flexible box layout. HBox is a convenience control, as it is just a specialized FlexBox control.\n\nNote: Be sure to check the renderType setting to avoid issues due to browser inconsistencies."
        },
        "HeaderContainer": {
            "attributes": [{
                "name": "scrollStep",
                "documentation": "Number of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop."
            }, {
                "name": "scrollStepByItem",
                "documentation": "Number of items to scroll when the user chose Next or Previous buttons. Relevant only for desktop.\nHave priority over 'ScrollStep'. Have to be positive number."
            }, {
                "name": "scrollTime",
                "documentation": "Scroll animation time in milliseconds."
            }, {
                "name": "showOverflowItem",
                "documentation": "Indicates whether the incomplete item on the edge of visible area is displayed or hidden."
            }, {
                "name": "showDividers",
                "documentation": "If set to true, it shows dividers between the different content controls."
            }, {
                "name": "orientation",
                "documentation": "The orientation of the HeaderContainer. There are two orientation modes: horizontal and vertical. In horizontal mode\nthe content controls are displayed next to each other, in vertical mode the content controls are displayed\non top of each other."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the content. The visualization of the different options depends on the used theme."
            }, {
                "name": "width",
                "documentation": "The width of the whole HeaderContainer. If not specified, it is rendered as '100%' in horizontal orientation and as 'auto' in vertical orientation."
            }, {
                "name": "height",
                "documentation": "The height of the whole HeaderContainer. If not specified, it is rendered as 'auto' in horizontal orientation and as '100%' in vertical orientation."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The container that provides a horizontal layout. It provides a horizontal scrolling on the mobile devices.\nOn the desktop, it provides scroll left and scroll right buttons. This control supports keyboard navigation.\nYou can use left and right arrow keys to navigate through the inner content. The Home key puts focus on the first control and the End key puts focus on the last control.\nUse Enter or Space key to choose the control."
        },
        "IconTabBar": {
            "attributes": [{
                "name": "showSelection",
                "documentation": "Defines whether the current selection should be visualized."
            }, {
                "name": "expandable",
                "documentation": "Defines if the tabs are collapsible and expandable."
            }, {
                "name": "expanded",
                "documentation": "Indicates if the actual tab content is expanded or not."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected tab item. If the key has no corresponding aggregated item, no changes will apply.\nIf duplicate keys exists the first item matching the key is used."
            }, {
                "name": "upperCase",
                "documentation": "Determines whether the text of the icon tab filter (not the count) is displayed in uppercase."
            }, {
                "name": "stretchContentHeight",
                "documentation": "Determines whether the IconTabBar height is stretched to the maximum possible height\nof its parent container. As a prerequisite, the height of the parent container must be\ndefined as a fixed value."
            }, {
                "name": "applyContentPadding",
                "documentation": "Determines whether the IconTabBar content fits to the full area.\nThe paddings are removed if it's set to false."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the IconTabBar. Depending on the theme, you can change the state of\nthe background color to \"Solid\", \"Translucent\", or \"Transparent\".\nDefault is \"Solid\"."
            }, {
                "name": "headerMode",
                "documentation": "Specifies the header mode.\nNote: The Inline mode works only if no icons are set."
            }, {
                "name": "showOverflowSelectList",
                "documentation": "Specifies if the overflow select list is displayed. The overflow select list represents a list, where all tab filters are displayed,\nso the user can select specific tab filter easier."
            }, {
                "name": "headerBackgroundDesign",
                "documentation": "Specifies the background color of the header. Depending on the theme, you can change the state of\nthe background color to \"Solid\", \"Translucent\", or \"Transparent\".\nDefault is \"Solid\"."
            }, {
                "name": "enableTabReordering",
                "documentation": "Specifies whether tab reordering is enabled. Relevant only for desktop devices."
            }, {
                "name": "select",
                "documentation": "Fires when an item is selected."
            }, {
                "name": "expand",
                "documentation": "Indicates that the tab will expand or collapse."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The IconTabBar represents a collection of tabs with associated content.\nOverview\nThe IconTabBar can be used for navigation within an object, or as a filter. Different types of IconTabBar are used based on the contents.\n\nFilter - There is only one main content for all tabs. The main content can be filtered, based on the selected tab.\nNormal tab bar - The contents of each tab are independent from each other.\nCombination of the above - There can be both filtered and independent contents.\n\nStructure\nThe IconTabBar can hold two types of entities sap.m.IconTabFilter sap.m.IconTabFilter and sap.m.IconTabSeparator sap.m.IconTabSeparator The IconTabBarFilter holds all information on an item - text, icon and count. The IconTabBarSeparator holds an icon that can be used to show a process that runs from item to item.\nUsage\nText only\nUses text labels as tabs with optional counter\n\nUsed when there are no suitable icons for all items.\nUsed when longer labels are needed.\nIf headerMode property is set to Inline the text and the count are displayed in one line.\nUpperCase is disabled.\nUse title case.\n\nIcon Tabs\nRound tabs with optional counter and label\n\nUsed when there are unique icons for all items.\nOnly shorter labels are possible.\nProvide labels for all icons or for none. Do not mix these.\n\nTabs as filters\nTabs with filtered content from the same set of items\n\nProvide an \"All\" tab to show all items without filtering.\nUse counters to show the number of items in each filter.\n\nTabs as process steps\nTabs show a single step in a process\n\nUse an arrow (e.g. triple-chevron) as a separator to connect the steps.\nUse counters to show the number of items in each filter.\n\nResponsive Behavior\n\nText-only tabs are never truncated.\nUse the expandable property to specify whether users can collapse the tab container (default = true).\nOn desktop, tabs can be dragged and dropped (property enableTabReordering).\nIf you have a large number of tabs, you can scroll through them with the arrows. Additionally all tabs are available in an overflow button (property showOverflowSelectList).\n"
        },
        "IconTabFilter": {
            "attributes": [{
                "name": "count",
                "documentation": "Represents the \"count\" text, which is displayed in the tab filter."
            }, {
                "name": "showAll",
                "documentation": "Enables special visualization for disabled filter (show all items).\nNote: You can use this property when you use IconTabBar as a filter.\nIn order for it to be displayed correctly, the other tabs in the filter should consist of an icon, text and an optional count.\nIt can be set to true for the first tab filter.\nYou can find more detailed guidelines at https://experience.sap.com/fiori-design-web/icontabbar/-as-filters."
            }, {
                "name": "icon",
                "documentation": "Specifies the icon to be displayed for the tab filter."
            }, {
                "name": "iconColor",
                "documentation": "Specifies the icon color. If an icon font is used, the color can be chosen from the icon colors (sap.ui.core.IconColor).\nPossible semantic colors are: Neutral, Positive, Critical, Negative.\nInstead of the semantic icon color the brand color can be used, this is named Default.\nSemantic colors and brand colors should not be mixed up inside one IconTabBar."
            }, {
                "name": "iconDensityAware",
                "documentation": "If set to true, it sends one or more requests,\ntrying to get the density perfect version of the image if this version of\nthe image doesn't exist on the server. Default value is set to true. If bandwidth is key for the application, set this value to false."
            }, {
                "name": "visible",
                "documentation": "Specifies whether the tab filter is rendered."
            }, {
                "name": "design",
                "documentation": "Specifies whether the icon and the texts are placed vertically or horizontally."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Represents a selectable item inside an IconTabBar."
        },
        "IconTabHeader": {
            "attributes": [{
                "name": "showSelection",
                "documentation": "Defines whether the current selection is visualized."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. If the key has no corresponding aggregated item, no changes will apply.\nIf duplicate keys exists the first item matching, the key is used."
            }, {
                "name": "mode",
                "documentation": "Specifies the header mode.\nNote: The Inline mode works only if no icons are set."
            }, {
                "name": "showOverflowSelectList",
                "documentation": "Specifies if the overflow select list is displayed. The overflow select list represents a list, where all tab filters are displayed,\nso the user can select specific tab filter easier."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the header. Depending on the theme, you can change the state of\nthe background color to \"Solid\", \"Translucent\", or \"Transparent\".\nDefault is \"Solid\"."
            }, {
                "name": "enableTabReordering",
                "documentation": "Specifies whether tab reordering is enabled. Relevant only for desktop devices."
            }, {
                "name": "select",
                "documentation": "Fires when an item is selected."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control displays a number of IconTabFilters and IconTabSeparators. If the available horizontal\nspace is exceeded, a horizontal scrolling appears."
        },
        "IconTabSeparator": {
            "attributes": [{
                "name": "icon",
                "documentation": "The icon to display for this separator. If no icon is given, a separator line is used instead."
            }, {
                "name": "visible",
                "documentation": "Specifies whether the separator is rendered."
            }, {
                "name": "iconDensityAware",
                "documentation": "If set to true, it sends one or more requests,\ntrying to get the density perfect version of the image if this version of\nthe image doesn't exist on the server. Default value is set to true. If bandwidth is key for the application, set this value to false."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Represents an Icon used to separate 2 tab filters."
        },
        "Image": {
            "attributes": [{
                "name": "src",
                "documentation": "Relative or absolute path to URL where the image file is stored. The path will be adapted to the density aware format according to the density of the device following the convention that [imageName]@[densityValue].[extension]"
            }, {
                "name": "width",
                "documentation": "When the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the original ratio between width/height is maintained. When 'mode' property is set to sap.m.ImageMode.Background, this property always needs to be set. Otherwise the output DOM element has a 0 size."
            }, {
                "name": "height",
                "documentation": "When the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the original ratio between width/height is maintained. When 'mode' property is set to sap.m.ImageMode.Background, this property always needs to be set. Otherwise the output DOM element has a 0 size."
            }, {
                "name": "decorative",
                "documentation": "A decorative image is included for design reasons. Accessibility tools will ignore decorative images. Note: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative."
            }, {
                "name": "alt",
                "documentation": "The alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored."
            }, {
                "name": "useMap",
                "documentation": "The name of the image map that defines the clickable areas"
            }, {
                "name": "densityAware",
                "documentation": "If this is set to false, the src image will be loaded directly without attempting to fetch the density perfect image for high density device. By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If bandwidth is the key for the application, set this value to false."
            }, {
                "name": "activeSrc",
                "documentation": "The source property which is used when the image is pressed."
            }, {
                "name": "mode",
                "documentation": "Defines how the src and the activeSrc is output to the Dom Element. When set to sap.m.ImageMode.Image which is the default value, the src (activeSrc) is set to the 'src' attribute of the 'img' tag. When set to sap.m.ImageMode.Background, the src (activeSrc) is set to the CSS style 'background-image' and the root DOM element is rendered as a 'span' tag instead of an 'img' tag."
            }, {
                "name": "backgroundSize",
                "documentation": "Defines the size of the image in sap.m.ImageMode.Background mode. This property is set on the output DOM element using CSS style 'background-size'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background."
            }, {
                "name": "backgroundPosition",
                "documentation": "Defines the position of the image in sap.m.ImageMode.Background mode. This property is set on the output DOM element using CSS style 'background-position'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background."
            }, {
                "name": "backgroundRepeat",
                "documentation": "Defines whether the source image is repeated when the output DOM element is bigger than the source. This property is set on the output DOM element using CSS style 'background-repeat'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledBy)."
            }, {
                "name": "tap",
                "documentation": "Event is fired when the user clicks on the control. (This event is deprecated, use the press event instead)"
            }, {
                "name": "press",
                "documentation": "Event is fired when the user clicks on the control."
            }, {
                "name": "load",
                "documentation": "Event is fired when the image resource is loaded."
            }, {
                "name": "error",
                "documentation": "Event is fired when the image resource can't be loaded. If densityAware is set to true, the event is fired when none of the fallback resources can be loaded."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A wrapper around the IMG tag. The image can be loaded from a remote or local server. Density related image will be loaded if image with density awareness name in format [imageName]@[densityValue].[extension] is provided. The valid desity values are 1, 1.5, 2. If the original devicePixelRatio isn't one of the three valid numbers, it's rounded up to the nearest one. There are various size setting options available, and the images can be combined with actions. From version 1.30, new image mode sap.m.ImageMode.Background is added. When this mode is set, the src property is set using the css style 'background-image'. The properties 'backgroundSize', 'backgroundPosition', 'backgroundRepeat' have effect only when image is in sap.m.ImageMode.Background mode. In order to make the high density image correctly displayed, the 'backgroundSize' should be set to the dimension of the normal density version."
        },
        "ImageContent": {
            "attributes": [{
                "name": "src",
                "documentation": "The image to be displayed as a graphical element within the imageContent. This can be an image or an icon from the icon font."
            }, {
                "name": "description",
                "documentation": "Description of image. This text is used to provide ScreenReader information."
            }, {
                "name": "press",
                "documentation": "The event is triggered when the image content is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control can be used to display image content in a GenericTile."
        },
        "Input": {
            "attributes": [{
                "name": "type",
                "documentation": "HTML type of the internal input tag (e.g. Text, Number, Email, Phone).\nThe particular effect of this property differs depending on the browser and the current language settings,\nespecially for the type Number.\nThis parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.\nOnly the default value sap.m.InputType.Text may be used in combination with data model formats.\nsap.ui.model defines extended formats that are mostly incompatible with normal HTML\nrepresentations for numbers and dates."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off.\nThis parameter is not compatible with the input type sap.m.InputType.Number.\nIf the input type is set to Number, the maxLength value is ignored."
            }, {
                "name": "dateFormat",
                "documentation": "Only used if type=date and no datepicker is available.\nThe data is displayed and the user input is parsed according to this format.\nNOTE: The value property is always of the form RFC 3339 (YYYY-MM-dd)."
            }, {
                "name": "showValueHelp",
                "documentation": "If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired."
            }, {
                "name": "showSuggestion",
                "documentation": "If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input."
            }, {
                "name": "valueHelpOnly",
                "documentation": "If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect"
            }, {
                "name": "filterSuggests",
                "documentation": "Defines whether to filter the provided suggestions before showing them to the user."
            }, {
                "name": "maxSuggestionWidth",
                "documentation": "If set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field.\nNote: The value will be ignored if the actual width of the input field is larger than the specified parameter value."
            }, {
                "name": "startSuggestion",
                "documentation": "Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input. When it's set to 0, suggest event is fired when input with no text gets focus."
            }, {
                "name": "showTableSuggestionValueHelp",
                "documentation": "For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true. NOTE: If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect."
            }, {
                "name": "description",
                "documentation": "The description is a text after the input field, e.g. units of measurement, currencies."
            }, {
                "name": "fieldWidth",
                "documentation": "This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description."
            }, {
                "name": "valueLiveUpdate",
                "documentation": "Indicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false)."
            }, {
                "name": "selectedKey",
                "documentation": "Defines the key of the selected item. Note: If duplicate keys exist, the first item matching the key is used."
            }, {
                "name": "textFormatMode",
                "documentation": "Defines the display text format mode."
            }, {
                "name": "textFormatter",
                "documentation": "Defines the display text formatter function."
            }, {
                "name": "suggestionRowValidator",
                "documentation": "Defines the validation callback function called when a suggestion row gets selected."
            }, {
                "name": "enableSuggestionsHighlighting",
                "documentation": "Specifies whether the suggestions highlighting is enabled."
            }, {
                "name": "selectedItem",
                "documentation": "Sets or retrieves the selected item from the suggestionItems."
            }, {
                "name": "selectedRow",
                "documentation": "Sets or retrieves the selected row from the suggestionRows."
            }, {
                "name": "liveChange",
                "documentation": "This event is fired when the value of the input is changed - e.g. at each keypress"
            }, {
                "name": "valueHelpRequest",
                "documentation": "When the value help indicator is clicked, this event will be fired."
            }, {
                "name": "suggest",
                "documentation": "This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup."
            }, {
                "name": "suggestionItemSelected",
                "documentation": "This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup."
            }, {
                "name": "submit",
                "documentation": "This event is fired when user presses the Enter key on the input. Note:\nThe event is fired independent of whether there was a change before or not. If a change was performed the event is fired after the change event.\nThe event is also fired when an item of the select list is selected via Enter.\nThe event is only fired on an input which allows text input (editable, enabled and not valueHelpOnly)."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.InputBase",
            "documentation": "Allows the user to enter and edit text or numeric values in one line. Overview You can enable the autocomplete suggestion feature and the value help option to easily enter a valid value. Guidelines \n Always provide a meaningful label for any input field \n Limit the length of the input field. This will visually emphasize the constraints for the field. \n Do not use the placeholder property as a label.\n Use the description property only for small fields with no placeholders (i.e. for currencies).\n Structure The controls inherits from sap.m.InputBase which controls the core properties like:\n\n editable / read-only \n enabled / disabled\n placeholder\n text direction\n value states\n\nTo aid the user during input, you can enable value help (showValueHelp) or autocomplete (showSuggestion).\nValue help will open a new dialog where you can refine your input.\nAutocomplete has three types of suggestions:\n\n Single value - a list of suggestions of type sap.ui.core.Item or sap.ui.core.ListItem \n Two values - a list of two suggestions (ID and description) of type sap.ui.core.Item or sap.ui.core.ListItem \n Tabular suggestions of type sap.m.ColumnListItem \n\nThe suggestions are stored in two aggregations suggestionItems (for single and double values) and suggestionRows (for tabular values). Usage When to use:\nUse the control for short inputs like emails, phones, passwords, fields for assisted value selection. When not to use:\nDon't use the control for long texts, dates, designated search fields, fields for multiple selection."
        },
        "InputBase": {
            "attributes": [{
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The sap.m.InputBase control provides a basic functionality for input controls."
        },
        "InputListItem": {
            "attributes": [{
                "name": "label",
                "documentation": "Label of the list item"
            }, {
                "name": "labelTextDirection",
                "documentation": "This property specifies the label text directionality with enumerated options. By default, the label inherits text direction from the DOM."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "List item should be used for a label and an input field."
        },
        "Label": {
            "attributes": [{
                "name": "design",
                "documentation": "Sets the design of a Label to either Standard or Bold."
            }, {
                "name": "text",
                "documentation": "Determines the Label text to be displayed."
            }, {
                "name": "textAlign",
                "documentation": "Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\"."
            }, {
                "name": "textDirection",
                "documentation": "Options for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container."
            }, {
                "name": "width",
                "documentation": "Determines the width of the label."
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required for input control labeled by the sap.m.Label.\nWhen the property is set to true and associated input field is empty an asterisk character is added to the label text."
            }, {
                "name": "displayOnly",
                "documentation": "Determines if the label is in displayOnly mode. Controls in this mode are neither interactive, nor editable, nor focusable, and not in the tab chain. Note: This property should be used only in Form controls in preview mode."
            }, {
                "name": "wrapping",
                "documentation": "Determines the wrapping of the text within the Label.\nIf set to true the Label will wrap, when set to false the Label will be truncated and replaced with ellipsis which is the default behavior."
            }, {
                "name": "vAlign",
                "documentation": "Specifies the vertical alignment of the Label related to the tallest and lowest element on the line."
            }, {
                "name": "labelFor",
                "documentation": "Association to the labeled control.\nBy default the label set the for attribute to the ID of the labeled control. This can be changed by implementing the function getIdForLabel on the labelled control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Provides a textual label for other controls.\nLabel appearance can be influenced by properties such as textAlign, design,\ndisplayOnly and wrapping.\nAs of version 1.50 the default value of the wrapping property is set to false Labels for required fields are marked with an asterisk.\nOverview\nLabels are used as titles for single controls or groups of controls.\nUsage\nWhen to use\n\nIt's recommended to use the Label in Form controls.\nUse title case for labels.\n\nWhen not to use\n\n It is not recommended to use labels in Bold.\n"
        },
        "LightBox": {
            "attributes": [{
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Represents a popup containing an image and a footer. Overview The purpose of the control is to display an image in its original size as long as this is possible.\nOn smaller screens images are scaled down to fit. Notes:\n If the image doesn't load in 10 seconds, an error is displayed. Setting the imageContent aggregation of the control as well as the source of the image and the title of the image is mandatory. If the image source is not set, the control will not open.\n\nStructure Each LightBox holds a sap.m.LightBoxItem LightBoxItem which keeps the properties of the image:\n  imageSrc - The source URI of the image   title - The title of the image   subtitle - The subtitle of the image   alt - The alt text of the image \n\nUsage The most common use case is to click on an image thumbnail to view it in bigger size.\nWhen the image that should be displayed in the control cannot be loaded, an error is displayed in the popup. Responsive Behavior On a mobile device, flipping the device to landscape will flip the lightbox and the image will be adjusted to fit the new dimensions. Additional Information Check out the API Reference."
        },
        "LightBoxItem": {
            "attributes": [{
                "name": "imageSrc",
                "documentation": "Source for the image. This property is mandatory. If not set the popup will not open"
            }, {
                "name": "alt",
                "documentation": "Alt value for the image"
            }, {
                "name": "title",
                "documentation": "Title text for the image. This property is mandatory."
            }, {
                "name": "subtitle",
                "documentation": "Subtitle text for the image"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Represents an item which is displayed within an sap.m.LightBox. This item holds all properties of the image as\nwell as the title and subtitle."
        },
        "Link": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the displayed link text."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the link can be triggered by the user."
            }, {
                "name": "target",
                "documentation": "Specifies a target where the linked content will open. Options are the standard values for window.open() supported by browsers:\n_self, _top, _blank, _parent, _search.\nAlternatively, a frame name can be entered. This property is only used when the href property is set."
            }, {
                "name": "width",
                "documentation": "Determines the width of the link (CSS-size such as % or px). When it is set, this is the exact size.\nWhen left blank, the text defines the size."
            }, {
                "name": "href",
                "documentation": "Defines the link target URI. Supports standard hyperlink behavior. If a JavaScript action should be triggered,\nthis should not be set, but instead an event handler for the press event should be registered."
            }, {
                "name": "validateUrl",
                "documentation": "Defines whether the link target URI should be validated. If validation fails, the value of the href property will still be set, but will not be applied to the DOM. Note: Additional whitelisting of URLs is allowed through jQuery.sap/methods/jQuery.sap.addUrlWhitelist jQuery.sap.addUrlWhitelist."
            }, {
                "name": "wrapping",
                "documentation": "Determines whether the link text is allowed to wrap when there is no sufficient space."
            }, {
                "name": "textAlign",
                "documentation": "Determines the horizontal alignment of the text."
            }, {
                "name": "textDirection",
                "documentation": "This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the parent DOM."
            }, {
                "name": "subtle",
                "documentation": "Subtle links look more like standard text than like links. They should only be used to help with visual hierarchy between large data lists of important and less important links. Subtle links should not be used in any other use case."
            }, {
                "name": "emphasized",
                "documentation": "Emphasized links look visually more important than regular links."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user triggers the link control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A hyperlink control used to navigate to other apps and web pages or to trigger actions. Overview The Link control is a clickable text element visualized in such a way that it stands out\nfrom the standard text. On hover, it changes its style to underlined text to provide\nadditional feedback to the user. Usage You can set the Link to be enabled or disabled. To create a visual hierarchy in large lists of links, you can set the less important links as\nsubtle or the more important ones as emphasized. To specify where the linked content is opened, you can use the target property. Responsive behavior If there is not enough space, the text of the Link becomes truncated.\nIf the wrapping property is set to true, the text will be\ndisplayed on several lines, instead of being truncated."
        },
        "List": {
            "attributes": [{
                "name": "backgroundDesign",
                "documentation": "Sets the background style of the list. Depending on the theme, you can change the state of the background from Solid to Translucent or to Transparent."
            }, {
                "name": "inset",
                "documentation": "Defines the indentation of the container. Setting it to true indents the list."
            }, {
                "name": "headerText",
                "documentation": "Defines the header text that appears in the control.\nNote: If headerToolbar aggregation is set, then this property is ignored."
            }, {
                "name": "headerDesign",
                "documentation": "Defines the header style of the control. Possible values are Standard and Plain."
            }, {
                "name": "footerText",
                "documentation": "Defines the footer text that appears in the control."
            }, {
                "name": "mode",
                "documentation": "Defines the mode of the control (e.g. None, SingleSelect, MultiSelect, Delete)."
            }, {
                "name": "width",
                "documentation": "Sets the width of the control."
            }, {
                "name": "includeItemInSelection",
                "documentation": "Defines whether the items are selectable by clicking on the item itself (true) rather than having to set the selection control first.\nNote: The SingleSelectMaster mode also provides this functionality by default."
            }, {
                "name": "showUnread",
                "documentation": "Activates the unread indicator for all items, if set to true."
            }, {
                "name": "noDataText",
                "documentation": "This text is displayed when the control contains no items."
            }, {
                "name": "showNoData",
                "documentation": "Defines whether or not the text specified in the noDataText property is displayed."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "When this property is set to true, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the busyIndicatorDelay property."
            }, {
                "name": "modeAnimationOn",
                "documentation": "Defines if animations will be shown while switching between modes."
            }, {
                "name": "showSeparators",
                "documentation": "Defines which item separator style will be used."
            }, {
                "name": "swipeDirection",
                "documentation": "Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the swipeContent aggregation."
            }, {
                "name": "growing",
                "documentation": "If set to true, enables the growing feature of the control to load more items by requesting from the model.\nNote:: This feature only works when an items aggregation is bound. Growing must not be used together with two-way binding."
            }, {
                "name": "growingThreshold",
                "documentation": "Defines the number of items to be requested from the model for each grow.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingTriggerText",
                "documentation": "Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingScrollToLoad",
                "documentation": "If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control.\nNote: This property can only be used if the growing property is set to true and only if there is one instance of sap.m.List or sap.m.Table inside the scrollable scroll container (e.g sap.m.Page)."
            }, {
                "name": "growingDirection",
                "documentation": "Defines the direction of the growing feature.\nIf set to Downwards the user has to scroll down to load more items or the growing button is displayed at the bottom.\nIf set to Upwards the user has to scroll up to load more items or the growing button is displayed at the top."
            }, {
                "name": "rememberSelections",
                "documentation": "If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\nNote: This feature works only if two-way data binding for the selected property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the JSONModel is changed."
            }, {
                "name": "keyboardMode",
                "documentation": "Defines keyboard handling behavior of the control."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when selection is changed via user interaction. In MultiSelect mode, this event is also fired on deselection."
            }, {
                "name": "selectionChange",
                "documentation": "Fires when selection is changed via user interaction inside the control."
            }, {
                "name": "delete",
                "documentation": "Fires when delete icon is pressed by user."
            }, {
                "name": "swipe",
                "documentation": "Fires after user's swipe action and before the swipeContent is shown. On the swipe event handler, swipeContent can be changed according to the swiped item.\nCalling the preventDefault method of the event cancels the swipe action."
            }, {
                "name": "growingStarted",
                "documentation": "Fires before the new growing chunk is requested from the model."
            }, {
                "name": "growingFinished",
                "documentation": "Fires after the new growing chunk has been fetched from the model and processed by the control."
            }, {
                "name": "updateStarted",
                "documentation": "Fires before items binding is updated (e.g. sorting, filtering) Note: Event handler should not invalidate the control."
            }, {
                "name": "updateFinished",
                "documentation": "Fires after items binding is updated and processed by the control."
            }, {
                "name": "itemPress",
                "documentation": "Fires when an item is pressed unless the item's type property is Inactive."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the context menu is opened.\nWhen the context menu is opened, the binding context of the item is set to the given contextMenu."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListBase",
            "documentation": "The List control provides a container for all types of list items.\nFor mobile devices, the recommended limit of list items is 100 to assure proper performance. To improve initial rendering of large lists, use the \"growing\" feature. Please refer to the SAPUI5 Developer Guide for more information.. See section \" topic:1da158152f644ba1ad408a3e982fd3df Lists\"\nin the documentation for an introduction to sap.m.List control."
        },
        "ListBase": {
            "attributes": [{
                "name": "inset",
                "documentation": "Defines the indentation of the container. Setting it to true indents the list."
            }, {
                "name": "headerText",
                "documentation": "Defines the header text that appears in the control.\nNote: If headerToolbar aggregation is set, then this property is ignored."
            }, {
                "name": "headerDesign",
                "documentation": "Defines the header style of the control. Possible values are Standard and Plain."
            }, {
                "name": "footerText",
                "documentation": "Defines the footer text that appears in the control."
            }, {
                "name": "mode",
                "documentation": "Defines the mode of the control (e.g. None, SingleSelect, MultiSelect, Delete)."
            }, {
                "name": "width",
                "documentation": "Sets the width of the control."
            }, {
                "name": "includeItemInSelection",
                "documentation": "Defines whether the items are selectable by clicking on the item itself (true) rather than having to set the selection control first.\nNote: The SingleSelectMaster mode also provides this functionality by default."
            }, {
                "name": "showUnread",
                "documentation": "Activates the unread indicator for all items, if set to true."
            }, {
                "name": "noDataText",
                "documentation": "This text is displayed when the control contains no items."
            }, {
                "name": "showNoData",
                "documentation": "Defines whether or not the text specified in the noDataText property is displayed."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "When this property is set to true, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the busyIndicatorDelay property."
            }, {
                "name": "modeAnimationOn",
                "documentation": "Defines if animations will be shown while switching between modes."
            }, {
                "name": "showSeparators",
                "documentation": "Defines which item separator style will be used."
            }, {
                "name": "swipeDirection",
                "documentation": "Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the swipeContent aggregation."
            }, {
                "name": "growing",
                "documentation": "If set to true, enables the growing feature of the control to load more items by requesting from the model.\nNote:: This feature only works when an items aggregation is bound. Growing must not be used together with two-way binding."
            }, {
                "name": "growingThreshold",
                "documentation": "Defines the number of items to be requested from the model for each grow.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingTriggerText",
                "documentation": "Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingScrollToLoad",
                "documentation": "If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control.\nNote: This property can only be used if the growing property is set to true and only if there is one instance of sap.m.List or sap.m.Table inside the scrollable scroll container (e.g sap.m.Page)."
            }, {
                "name": "growingDirection",
                "documentation": "Defines the direction of the growing feature.\nIf set to Downwards the user has to scroll down to load more items or the growing button is displayed at the bottom.\nIf set to Upwards the user has to scroll up to load more items or the growing button is displayed at the top."
            }, {
                "name": "rememberSelections",
                "documentation": "If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\nNote: This feature works only if two-way data binding for the selected property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the JSONModel is changed."
            }, {
                "name": "keyboardMode",
                "documentation": "Defines keyboard handling behavior of the control."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when selection is changed via user interaction. In MultiSelect mode, this event is also fired on deselection."
            }, {
                "name": "selectionChange",
                "documentation": "Fires when selection is changed via user interaction inside the control."
            }, {
                "name": "delete",
                "documentation": "Fires when delete icon is pressed by user."
            }, {
                "name": "swipe",
                "documentation": "Fires after user's swipe action and before the swipeContent is shown. On the swipe event handler, swipeContent can be changed according to the swiped item.\nCalling the preventDefault method of the event cancels the swipe action."
            }, {
                "name": "growingStarted",
                "documentation": "Fires before the new growing chunk is requested from the model."
            }, {
                "name": "growingFinished",
                "documentation": "Fires after the new growing chunk has been fetched from the model and processed by the control."
            }, {
                "name": "updateStarted",
                "documentation": "Fires before items binding is updated (e.g. sorting, filtering) Note: Event handler should not invalidate the control."
            }, {
                "name": "updateFinished",
                "documentation": "Fires after items binding is updated and processed by the control."
            }, {
                "name": "itemPress",
                "documentation": "Fires when an item is pressed unless the item's type property is Inactive."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the context menu is opened.\nWhen the context menu is opened, the binding context of the item is set to the given contextMenu."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The sap.m.ListBase control provides a base functionality of the sap.m.List and sap.m.Table controls. Selection, deletion, unread states and inset style are also maintained in sap.m.ListBase. See section \" topic:295e44b2d0144318bcb7bdd56bfa5189 List, List Item, and Table\"\nin the documentation for an introduction to subclasses of sap.m.ListBase control. Note: The ListBase including all contained items may be completely re-rendered when the data of a bound model is changed. Due to the limited hardware resources of mobile devices this can lead to longer delays for lists that contain many items. As such the usage of a list is not recommended for these use cases."
        },
        "ListItemBase": {
            "attributes": [{
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "ListItemBase contains the base features of all specific list items.\nNote: If not mentioned otherwise in the individual subclasses, list items must only be used in the items aggregation of sap.m.ListBase controls."
        },
        "MaskInput": {
            "attributes": [{
                "name": "placeholderSymbol",
                "documentation": "Defines a placeholder symbol. Shown at the position where there is no user input yet."
            }, {
                "name": "mask",
                "documentation": "Mask defined by its characters type (respectively, by its length).\nYou should consider the following important facts:\n1. The mask characters normally correspond to an existing rule (one rule per unique char).\nCharacters which don't, are considered immutable characters (for example, the mask '2099', where '9' corresponds to a rule\nfor digits, has the characters '2' and '0' as immutable).\n2. Adding a rule corresponding to the placeholderSymbol is not recommended and would lead to an unpredictable behavior.\n3. You can use the special escape character '^' called \"Caret\" prepending a rule character to make it immutable.\nUse the double escape '^^' if you want to make use of the escape character as an immutable one."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.InputBase",
            "documentation": "The sap.m.MaskInput control allows users to easily enter data in a certain format and in a fixed-width input\n(for example: date, time, phone number, credit card number, currency, IP address, MAC address, and others)."
        },
        "MaskInputRule": {
            "attributes": [{
                "name": "maskFormatSymbol",
                "documentation": "Defines the symbol used in the mask format which will accept a certain range of characters."
            }, {
                "name": "regex",
                "documentation": "Defines the allowed characters as a regular expression."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "The sap.m.MaskInputRule control holds the mapping of a single maskFormatSymbol\nto the regular expression regex that defines the allowed characters for the rule."
        },
        "Menu": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the Menu title."
            }, {
                "name": "itemSelected",
                "documentation": "Fired when a MenuItem is selected."
            }, {
                "name": "closed",
                "documentation": "Fired when the menu is closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The sap.m.Menu control represents a hierarchical menu.\nWhen opened on mobile devices it occupies the whole screen."
        },
        "MenuButton": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the text of the MenuButton.\nNote: In Split buttonMode with useDefaultActionOnly\nset to false, the text is changed to display the last selected item's text,\nwhile in Regular buttonMode the text stays unchanged."
            }, {
                "name": "type",
                "documentation": "Defines the type of the MenuButton (for example, Default, Accept, Reject, Back, etc.)"
            }, {
                "name": "width",
                "documentation": "Defines the width of the MenuButton.\nNote:As per visual design this width can be maximum of 12rem (192px)."
            }, {
                "name": "enabled",
                "documentation": "Boolean property to enable the control (default is true).\nNote: Depending on custom settings, the buttons that are disabled have other colors than the enabled ones."
            }, {
                "name": "icon",
                "documentation": "Defines the icon to be displayed as a graphical element within the button.\nIt can be an image or an icon from the icon font."
            }, {
                "name": "activeIcon",
                "documentation": "The source property of an alternative icon for the active (pressed) state of the button.\nBoth active and default icon properties should be defined and of the same type - image or icon font.\nIf the icon property is not set or has a different type, the active icon is not displayed."
            }, {
                "name": "iconDensityAware",
                "documentation": "When set to true (default), one or more requests are sent trying to get the\ndensity perfect version of image if this version of image doesn't exist on the server.\nIf only one version of image is provided, set this value to false to\navoid the attempt of fetching density perfect image."
            }, {
                "name": "textDirection",
                "documentation": "Specifies the element's text directionality with enumerated options.\nBy default, the control inherits text direction from the DOM."
            }, {
                "name": "buttonMode",
                "documentation": "Defines whether the MenuButton is set to Regular or Split mode."
            }, {
                "name": "useDefaultActionOnly",
                "documentation": "Controls whether the default action handler is invoked always or it is invoked only until a menu item is selected.\nUsable only if buttonMode is set to Split."
            }, {
                "name": "defaultAction",
                "documentation": "Fired when the buttonMode is set to Split and the user presses the main button\nunless useDefaultActionOnly is set to false and another action\nfrom the menu has been selected previously."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The sap.m.MenuButton control enables the user to show a hierarchical menu."
        },
        "MenuItem": {
            "attributes": [{
                "name": "icon",
                "documentation": "Defines the icon, which belongs to the item.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "visible",
                "documentation": "Defines whether the item should be visible on the screen. If set to false,\na placeholder is rendered instead of the real item."
            }, {
                "name": "startsSection",
                "documentation": "Defines whether a visual separator should be rendered before the item.\nNote: If an item is invisible its separator is also not displayed."
            }, {
                "name": "press",
                "documentation": "Fired after the item has been pressed."
            }, {
                "name": "propertyChanged",
                "documentation": "Fired when a property of the item changes."
            }, {
                "name": "aggregationChanged",
                "documentation": "Fired when aggregation of the item changes."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "The MenuItem control is used for creating items for the sap.m.Menu.\nIt is derived from a core sap.ui.core.Item."
        },
        "MessageItem": {
            "attributes": [{
                "name": "type",
                "documentation": "Specifies the type of the message"
            }, {
                "name": "title",
                "documentation": "Specifies the title of the message"
            }, {
                "name": "subtitle",
                "documentation": "Specifies the subtitle of the message\nNote: This is only visible when the title property is not empty."
            }, {
                "name": "description",
                "documentation": "Specifies detailed description of the message"
            }, {
                "name": "markupDescription",
                "documentation": "Specifies if description should be interpreted as markup"
            }, {
                "name": "longtextUrl",
                "documentation": "Specifies long text description location URL"
            }, {
                "name": "counter",
                "documentation": "Defines the number of messages for a given message."
            }, {
                "name": "groupName",
                "documentation": "Name of a message group the current item belongs to."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "A wrapper control used to hold different types of system messages.\nStructure\nThe message item holds the basic set of properties for a system message:\n\n Type, title, subtitle and description \n If the description contains markup, the markupDescription needs to be set to true, to ensure it is interpreted correctly. \n If the long text description can be specified by a URL by setting, the longtextUrl property. \n The message item can have a single sap.m.Link after the description. It is stored in the link aggregation. \nUsage\nNote: The MessageItem control replaces sap.m.MessagePopoverItem as a more generic wrapper for messages."
        },
        "MessagePage": {
            "attributes": [{
                "name": "text",
                "documentation": "Determines the main text displayed on the MessagePage."
            }, {
                "name": "description",
                "documentation": "Determines the detailed description that shows additional information on the MessagePage."
            }, {
                "name": "title",
                "documentation": "Determines the title in the header of MessagePage."
            }, {
                "name": "showHeader",
                "documentation": "Determines the visibility of the MessagePage header.\nCan be used to hide the header of the MessagePage when it's embedded in another page."
            }, {
                "name": "showNavButton",
                "documentation": "Determines the visibility of the navigation button in MessagePage header."
            }, {
                "name": "icon",
                "documentation": "Determines the icon displayed on the MessagePage."
            }, {
                "name": "iconAlt",
                "documentation": "Defines the alt attribute of the icon displayed on the MessagePage."
            }, {
                "name": "textDirection",
                "documentation": "Determines the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "enableFormattedText",
                "documentation": "Defines whether the value set in the description property is displayed\nas formatted text in HTML format. For details regarding supported HTML tags, see sap.m.FormattedText"
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "navButtonPress",
                "documentation": "This event is fired when Nav Button is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Displays an empty page with an icon and a header when certain conditions are met.\nOverview\nMessagePage is displayed when there is no data or matching content. There are different use cases where a MessagePage might be visualized, for example:\n\nThe search query returned no results\nThe app contains no items\nThere are too many items\nThe application is loading\n\nThe layout is unchanged but the text and icon vary depending on the use case.\nUsage\nNote: The MessagePage is not intended to be used as a top-level control,\nbut rather used within controls such as NavContainer, App, Shell or other container controls."
        },
        "MessagePopover": {
            "attributes": [{
                "name": "asyncDescriptionHandler",
                "documentation": "Callback function for resolving a promise after description has been asynchronously loaded inside this function"
            }, {
                "name": "asyncURLHandler",
                "documentation": "Callback function for resolving a promise after a link has been asynchronously validated inside this function"
            }, {
                "name": "placement",
                "documentation": "Determines the position, where the control will appear on the screen. Possible values are: sap.m.VerticalPlacementType.Top, sap.m.VerticalPlacementType.Bottom and sap.m.VerticalPlacementType.Vertical.\nThe default value is sap.m.VerticalPlacementType.Vertical. Setting this property while the control is open, will not cause any re-rendering and changing of the position. Changes will only be applied with the next interaction."
            }, {
                "name": "initiallyExpanded",
                "documentation": "Sets the initial state of the control - expanded or collapsed. By default the control opens as expanded."
            }, {
                "name": "afterOpen",
                "documentation": "This event will be fired after the popover is opened"
            }, {
                "name": "afterClose",
                "documentation": "This event will be fired after the popover is closed"
            }, {
                "name": "beforeOpen",
                "documentation": "This event will be fired before the popover is opened"
            }, {
                "name": "beforeClose",
                "documentation": "This event will be fired before the popover is closed"
            }, {
                "name": "itemSelect",
                "documentation": "This event will be fired when description is shown"
            }, {
                "name": "listSelect",
                "documentation": "This event will be fired when one of the lists is shown when (not) filtered by type"
            }, {
                "name": "longtextLoaded",
                "documentation": "This event will be fired when the long text description data from a remote URL is loaded"
            }, {
                "name": "urlValidated",
                "documentation": "This event will be fired when a validation of a URL from long text description is ready"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A summarized list of different types of messages.\nOverview\nA message popover is used to display a summarized list of different types of messages (errors, warnings, success and information).\nIt provides a handy and systemized way to navigate and explore details for every message.\nNotes:\n\n Messages can have descriptions pre-formatted with HTML markup. In this case, the markupDescription has to be set to true.\n If the message cannot be fully displayed or includes a long description, the message popover provides navigation to the detailed description.\n\nStructure\nThe message popover stores all messages in an association of type sap.m.MessageItem named items. A set of properties determines how the items are rendered:\n\n counter - An integer that is used to indicate the number of errors for each type \n type - The type of message \n title/subtitle - The title and subtitle of the message\n description - The long text description of the message\n\nUsage\nWith the message concept, MessagePopover provides a way to centrally manage messages and show them to the user without additional work for the developer.\nThe message popover is triggered from a messaging button in the footer toolbar. If an error has occurred at any validation point,\nthe total number of messages should be incremented, but the user's work shouldn't be interrupted.\nResponsive Behavior\nOn mobile phones, the message popover is automatically shown in full screen mode.\nOn desktop and tablet, the message popover opens in a popover.\nOn desktop the opened popover is resizable if it is placed in a sap.m.Toolbar, sap.m.Bar or used in sap.f.semantic.SemanticPage"
        },
        "MessagePopoverItem": {
            "attributes": [{
                "name": "type",
                "documentation": "Specifies the type of the message"
            }, {
                "name": "title",
                "documentation": "Specifies the title of the message"
            }, {
                "name": "subtitle",
                "documentation": "Specifies the subtitle of the message\nNote: This is only visible when the title property is not empty."
            }, {
                "name": "description",
                "documentation": "Specifies detailed description of the message"
            }, {
                "name": "markupDescription",
                "documentation": "Specifies if description should be interpreted as markup"
            }, {
                "name": "longtextUrl",
                "documentation": "Specifies long text description location URL"
            }, {
                "name": "counter",
                "documentation": "Defines the number of messages for a given message."
            }, {
                "name": "groupName",
                "documentation": "Name of a message group the current item belongs to."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.m.MessageItem",
            "documentation": "Items provide information about Error Messages in the page."
        },
        "MessageStrip": {
            "attributes": [{
                "name": "text",
                "documentation": "Determines the text of the message."
            }, {
                "name": "type",
                "documentation": "Determines the type of messages that are displayed in the MessageStrip.\nPossible values are: Information (default), Success, Warning, Error.\nIf None is passed, the value is set to Information and a warning is displayed in the console."
            }, {
                "name": "customIcon",
                "documentation": "Determines a custom icon which is displayed.\nIf none is set, the default icon for this message type is used."
            }, {
                "name": "showIcon",
                "documentation": "Determines if an icon is displayed for the message."
            }, {
                "name": "showCloseButton",
                "documentation": "Determines if the message has a close button in the upper right corner."
            }, {
                "name": "enableFormattedText",
                "documentation": "Determines the limited collection of HTML elements passed to the text property should be\nevaluated. Note: If this property is set to true the string passed to text property\ncan evaluate the following list of limited HTML elements. All other HTML elements and their nested\ncontent will not be rendered by the control:\n\na\nem\nstrong\nu\n"
            }, {
                "name": "close",
                "documentation": "This event will be fired after the container is closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "MessageStrip is a control that enables the embedding of application-related messages in the application.\nOverview\nThe message strip displays 4 types of messages, each with a corresponding semantic color and icon: Information, Success, Warning and Error. Each message can have a close button, so that it can be removed from the UI if needed. With version 1.50 you can use a limited set of formatting tags for the message text by setting enableFormattedText. The allowed tags are:\n\n&lt;a&gt;\n&lt;em&gt;\n&lt;strong&gt;\n&lt;u&gt;\n\nUsage\nWhen to use\n\nYou want to provide information or status update within the detail area of an object\n\nWhen not to use\n\nYou want to display information within the object page header, within a control, in the master list, or above the page header.\n"
        },
        "MessageView": {
            "attributes": [{
                "name": "asyncDescriptionHandler",
                "documentation": "Callback function for resolving a promise after description has been asynchronously loaded inside this function"
            }, {
                "name": "asyncURLHandler",
                "documentation": "Callback function for resolving a promise after a link has been asynchronously validated inside this function"
            }, {
                "name": "groupItems",
                "documentation": "Defines whether the MessageItems are grouped or not"
            }, {
                "name": "showDetailsPageHeader",
                "documentation": "Defines whether the header of details page will be shown"
            }, {
                "name": "afterOpen",
                "documentation": "This event will be fired after the popover is opened"
            }, {
                "name": "itemSelect",
                "documentation": "This event will be fired when description is shown"
            }, {
                "name": "listSelect",
                "documentation": "This event will be fired when one of the lists is shown when (not) filtered by type"
            }, {
                "name": "longtextLoaded",
                "documentation": "This event will be fired when the long text description data from a remote URL is loaded"
            }, {
                "name": "urlValidated",
                "documentation": "This event will be fired when a validation of a URL from long text description is ready"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Overview\n\nA sap.m.MessageView is used to display a summarized list of different types of messages (errors, warnings, success and information).\nIt provides a handy and systemized way to navigate and explore details for every message.\nIt is meant to be embedded into container controls.\nIf the MessageView contains only one item, which has either description, markupDescription or longTextUrl, its details page will be displayed initially.\n\nNotes:\n\n Messages can have descriptions pre-formatted with HTML markup. In this case, the markupDescription has to be set to true. \n If the message cannot be fully displayed or includes a long description, the MessageView provides navigation to the detailed description. \n\nStructure\n\nThe MessageView stores all messages in an association of type sap.m.MessageItem named items.\n\nA set of properties determines how the items are rendered:\n\n counter - An integer that is used to indicate the number of errors for each type \n type - The type of message \n title/subtitle - The title and subtitle of the message\n description - The long text description of the message\n\nUsage\n\nAs part of the messaging concept, MessageView provides a way to centrally manage messages and show them to the user without additional work for the developer.\n"
        },
        "MultiComboBox": {
            "attributes": [{
                "name": "selectedKeys",
                "documentation": "Keys of the selected items. If the key has no corresponding item, no changes will apply. If duplicate keys exists the first item matching the key is used."
            }, {
                "name": "selectedItems",
                "documentation": "Provides getter and setter for the selected items from\nthe aggregation named items."
            }, {
                "name": "selectionChange",
                "documentation": "Event is fired when selection of an item is changed.\nNote: please do not use the \"change\" event inherited from sap.m.InputBase"
            }, {
                "name": "selectionFinish",
                "documentation": "Event is fired when user has finished a selection of items in a list box and list box has been closed."
            }, {
                "name": "loadItems",
                "documentation": "This event is fired when the end user clicks the combo box button to open the dropdown list and\nthe data used to display items is not already loaded.\nAlternatively, it is fired after the user moves the cursor to the combo box text\nfield and perform an action that requires data to be loaded. For example,\npressing F4 to open the dropdown list or typing something in the text field fires the event. Note: Use this feature in performance critical scenarios only.\nLoading the data lazily (on demand) to defer initialization has several implications for the\nend user experience. For example, the busy indicator has to be shown while the items are being\nloaded and assistive technology software also has to announce the state changes\n(which may be confusing for some screen reader users). Note: Currently the sap.m.MultiComboBox does not support this event."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the text field."
            }, {
                "name": "showButton",
                "documentation": "Indicates whether the dropdown downward-facing arrow button is shown."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the text field."
            }, {
                "name": "showButton",
                "documentation": "Indicates whether the dropdown downward-facing arrow button is shown."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ComboBoxBase",
            "documentation": "The MultiComboBox control provides a list box with items and a text field allowing the user to either type a value directly into the control or choose from the list of existing items."
        },
        "MultiInput": {
            "attributes": [{
                "name": "enableMultiLineMode",
                "documentation": "If set to true, the MultiInput will be displayed in multi-line display mode.\nIn multi-line display mode, all tokens can be fully viewed and easily edited in the MultiInput.\nThe default value is false.\nNote: This property does not take effect on smartphones or when the editable property is set to false.\nCaution: Do not enable multi-line mode in tables and forms."
            }, {
                "name": "maxTokens",
                "documentation": "The max number of tokens that is allowed in MultiInput."
            }, {
                "name": "tokenChange",
                "documentation": "Fired when the tokens aggregation changed (add / remove token)"
            }, {
                "name": "tokenUpdate",
                "documentation": "Fired when the tokens aggregation changed due to a user interaction (add / remove token)"
            }, {
                "name": "type",
                "documentation": "HTML type of the internal input tag (e.g. Text, Number, Email, Phone).\nThe particular effect of this property differs depending on the browser and the current language settings,\nespecially for the type Number.\nThis parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.\nOnly the default value sap.m.InputType.Text may be used in combination with data model formats.\nsap.ui.model defines extended formats that are mostly incompatible with normal HTML\nrepresentations for numbers and dates."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off.\nThis parameter is not compatible with the input type sap.m.InputType.Number.\nIf the input type is set to Number, the maxLength value is ignored."
            }, {
                "name": "dateFormat",
                "documentation": "Only used if type=date and no datepicker is available.\nThe data is displayed and the user input is parsed according to this format.\nNOTE: The value property is always of the form RFC 3339 (YYYY-MM-dd)."
            }, {
                "name": "showValueHelp",
                "documentation": "If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired."
            }, {
                "name": "showSuggestion",
                "documentation": "If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input."
            }, {
                "name": "valueHelpOnly",
                "documentation": "If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect"
            }, {
                "name": "filterSuggests",
                "documentation": "Defines whether to filter the provided suggestions before showing them to the user."
            }, {
                "name": "maxSuggestionWidth",
                "documentation": "If set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field.\nNote: The value will be ignored if the actual width of the input field is larger than the specified parameter value."
            }, {
                "name": "startSuggestion",
                "documentation": "Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input. When it's set to 0, suggest event is fired when input with no text gets focus."
            }, {
                "name": "showTableSuggestionValueHelp",
                "documentation": "For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true. NOTE: If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect."
            }, {
                "name": "description",
                "documentation": "The description is a text after the input field, e.g. units of measurement, currencies."
            }, {
                "name": "fieldWidth",
                "documentation": "This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description."
            }, {
                "name": "valueLiveUpdate",
                "documentation": "Indicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false)."
            }, {
                "name": "selectedKey",
                "documentation": "Defines the key of the selected item. Note: If duplicate keys exist, the first item matching the key is used."
            }, {
                "name": "textFormatMode",
                "documentation": "Defines the display text format mode."
            }, {
                "name": "textFormatter",
                "documentation": "Defines the display text formatter function."
            }, {
                "name": "suggestionRowValidator",
                "documentation": "Defines the validation callback function called when a suggestion row gets selected."
            }, {
                "name": "enableSuggestionsHighlighting",
                "documentation": "Specifies whether the suggestions highlighting is enabled."
            }, {
                "name": "selectedItem",
                "documentation": "Sets or retrieves the selected item from the suggestionItems."
            }, {
                "name": "selectedRow",
                "documentation": "Sets or retrieves the selected row from the suggestionRows."
            }, {
                "name": "liveChange",
                "documentation": "This event is fired when the value of the input is changed - e.g. at each keypress"
            }, {
                "name": "valueHelpRequest",
                "documentation": "When the value help indicator is clicked, this event will be fired."
            }, {
                "name": "suggest",
                "documentation": "This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup."
            }, {
                "name": "suggestionItemSelected",
                "documentation": "This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup."
            }, {
                "name": "submit",
                "documentation": "This event is fired when user presses the Enter key on the input. Note:\nThe event is fired independent of whether there was a change before or not. If a change was performed the event is fired after the change event.\nThe event is also fired when an item of the select list is selected via Enter.\nThe event is only fired on an input which allows text input (editable, enabled and not valueHelpOnly)."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Input",
            "documentation": "Overview\nA multi-input field allows the user to enter multiple values, which are displayed as sap.m.Token tokens. These can be displayed in single and multi-line mode.\nYou can enable auto-complete suggestions or value help to help the user choose the correct entry. You can define\nvalidator functions to define what token values are accepted.\nNotes:\n\n New valid tokens are created, when the user presses Enter, selects a value from the suggestions drop-down, or when the focus leaves the field.\n Provide meaningful labels for all input fields. Do not use the placeholder as a replacement for the label.\n\nUsage\nWhen to use:\n\n You need to provide the value help option to help users select or search multiple business objects.\n The dataset to choose from is expected to increase over time (for example, to more than 200 values).\n\nWhen not to use:\n\n Do not use multi-line inputs in tables and forms.\n When you need to select only one value.\n When you want the user to select from a predefined set of options. Use sap.m.MultiComboBox instead.\n\nResponsive Behavior\nOn Phones:\n\n Only the last entered token is displayed.\n A new full-screen dialog opens where the auto-complete suggestions can be selected.\n You can review the tokens by tapping on the token or the input field.\n\n On Tablets:\n\n The auto-complete suggestions appear below or above the multi-input field.\n You can review the tokens by swiping them to the left or right.\n (Multi-line Mode) Previously added tokens are visible above the input field.\n\nOn Desktop:\n\n The auto-complete suggestions appear below or above the multi-input field.\n You can review the tokens by pressing the right or left arrows on the keyboard.\n You can select single tokens or a range of tokens and you can copy/cut/delete them. (Multi-line Mode) Previously added tokens are visible above the input field.\n"
        },
        "NavContainer": {
            "attributes": [{
                "name": "autoFocus",
                "documentation": "Determines whether the initial focus is set automatically on first rendering and after navigating to a new page.\nThis is useful when on touch devices the keyboard pops out due to the focus being automatically set on an input field.\nIf necessary the \"afterShow\" event can be used to focus another element. Note: The following scenarios are possible, depending on where the focus\nwas before navigation to a new page:\nIf autoFocus is set to true and the focus was\ninside the current page, the focus will be moved automatically on the new page.\nIf autoFocus is set to false and the focus was inside\nthe current page, the focus will disappear.\nIf the focus was outside the current page, after the navigation it will remain\nunchanged regardless of what is set to the autoFocus property."
            }, {
                "name": "height",
                "documentation": "The height of the NavContainer. Can be changed when the NavContainer should not cover the whole available area."
            }, {
                "name": "width",
                "documentation": "The width of the NavContainer. Can be changed when the NavContainer should not cover the whole available area."
            }, {
                "name": "defaultTransitionName",
                "documentation": "The type of the transition/animation to apply when \"to()\" is called without defining a transition type to use. The default is \"slide\". Other options are: \"fade\", \"flip\" and \"show\" - and the names of any registered custom transitions."
            }, {
                "name": "initialPage",
                "documentation": "This association can be used to define which page is displayed initially. If the given page does not exist or no page is given, the first page which has been added is considered as initial page.\nThis value should be set initially and not set/modified while the application is running. This could be used not only for the initial display, but also if the user wants to navigate \"up to top\", so this page serves as a sort of \"home/root page\"."
            }, {
                "name": "navigate",
                "documentation": "The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterNavigate",
                "documentation": "The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The NavContainer control handles hierarchic navigation between Pages or other fullscreen controls. All children of this control will receive navigation events like sap.m.NavContainerChild beforeShow, they are documented in the pseudo interface sap.m.NavContainerChild sap.m.NavContainerChild"
        },
        "NewsContent": {
            "attributes": [{
                "name": "size",
                "documentation": "Updates the size of the chart. If not set then the default size is applied based on the device tile."
            }, {
                "name": "contentText",
                "documentation": "The content text."
            }, {
                "name": "subheader",
                "documentation": "The subheader."
            }, {
                "name": "press",
                "documentation": "The event is triggered when the News Content is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control displays the news content text and subheader in a tile."
        },
        "NotificationListBase": {
            "attributes": [{
                "name": "priority",
                "documentation": "Determines the priority of the Notification."
            }, {
                "name": "title",
                "documentation": "Determines the title of the NotificationListBase item."
            }, {
                "name": "datetime",
                "documentation": "Determines the due date of the NotificationListItem."
            }, {
                "name": "showButtons",
                "documentation": "Determines the action buttons visibility."
            }, {
                "name": "showCloseButton",
                "documentation": "Determines the visibility of the close button."
            }, {
                "name": "authorName",
                "documentation": "Determines the notification group's author name."
            }, {
                "name": "authorPicture",
                "documentation": "Determines the URL of the notification group's author picture."
            }, {
                "name": "close",
                "documentation": "Fired when the close button of the notification is pressed.Note: Pressing the close button doesn't destroy the notification automatically."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "The NotificationListBase is the abstract base class for sap.m.NotificationListItem and sap.m.NotificationListGroup. The NotificationList controls are designed for the SAP Fiori notification center.\nOverview\nNotificationListBase defines the general structure of a notification item. Most of the behavioral logic is defined for the single items or groups.\nStructure\nThe base holds properties for the following elements:\n\nAuthor name\nAuthor picture\nTime stamp\nPriority\nTitle\n\nAdditionally, by setting these properties you can determine if buttons are shown:\n\nshowButtons - action buttons visibility\nshowCloseButton - close button visibility\n"
        },
        "NotificationListGroup": {
            "attributes": [{
                "name": "collapsed",
                "documentation": "Determines if the group is collapsed or expanded."
            }, {
                "name": "autoPriority",
                "documentation": "Determines if the group will automatically set the priority based on the highest priority of its notifications or get its priority from the developer."
            }, {
                "name": "showEmptyGroup",
                "documentation": "Determines if the group header/footer of the empty group will be always shown. By default groups with 0 notifications are not shown."
            }, {
                "name": "enableCollapseButtonWhenEmpty",
                "documentation": "Determines if the collapse/expand button should be enabled for an empty group."
            }, {
                "name": "onCollapse",
                "documentation": "This event is called when collapse property value is changed"
            }, {
                "name": "priority",
                "documentation": "Determines the priority of the Notification."
            }, {
                "name": "title",
                "documentation": "Determines the title of the NotificationListBase item."
            }, {
                "name": "datetime",
                "documentation": "Determines the due date of the NotificationListItem."
            }, {
                "name": "showButtons",
                "documentation": "Determines the action buttons visibility."
            }, {
                "name": "showCloseButton",
                "documentation": "Determines the visibility of the close button."
            }, {
                "name": "authorName",
                "documentation": "Determines the notification group's author name."
            }, {
                "name": "authorPicture",
                "documentation": "Determines the URL of the notification group's author picture."
            }, {
                "name": "close",
                "documentation": "Fired when the close button of the notification is pressed.Note: Pressing the close button doesn't destroy the notification automatically."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.NotificationListBase",
            "documentation": "The NotificationListItemGroup control is used for grouping sap.m.NotificationListItem notification items of the same type.\nBehavior\nThe group handles specific behavior for different usecases:\n\nautoPriority - sets the group priority to the highest priority of an item in the group.\nenableCollapseButtonWhenEmpty - displays a collapse button for an empty group.\nshowEmptyGroup - determines if the header/footer of an empty group is displayed.\n"
        },
        "NotificationListItem": {
            "attributes": [{
                "name": "description",
                "documentation": "Determines the description of the NotificationListItem."
            }, {
                "name": "truncate",
                "documentation": "Determines if the text in the title and the description of the notification are truncated to the first two lines."
            }, {
                "name": "hideShowMoreButton",
                "documentation": "Determines if the \"Show More\" button should be hidden."
            }, {
                "name": "priority",
                "documentation": "Determines the priority of the Notification."
            }, {
                "name": "title",
                "documentation": "Determines the title of the NotificationListBase item."
            }, {
                "name": "datetime",
                "documentation": "Determines the due date of the NotificationListItem."
            }, {
                "name": "showButtons",
                "documentation": "Determines the action buttons visibility."
            }, {
                "name": "showCloseButton",
                "documentation": "Determines the visibility of the close button."
            }, {
                "name": "authorName",
                "documentation": "Determines the notification group's author name."
            }, {
                "name": "authorPicture",
                "documentation": "Determines the URL of the notification group's author picture."
            }, {
                "name": "close",
                "documentation": "Fired when the close button of the notification is pressed.Note: Pressing the close button doesn't destroy the notification automatically."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.NotificationListBase",
            "documentation": "The NotificationListItem control shows notifications to the user.\nStructure\nThe notification item holds properties for the following elements:\n\ndescription - additional detail text.\nhideShowMoreButton - visibility of the \"Show More\" button.\ntruncate - determines if title and description are truncated to the first two lines (usually needed on mobile devices).\n\nFor each item you can set some additional status information about the item processing by adding a sap.m.MessageStrip to the processingMessage aggregation."
        },
        "NumericContent": {
            "attributes": [{
                "name": "animateTextChange",
                "documentation": "If set to true, the change of the value will be animated."
            }, {
                "name": "formatterValue",
                "documentation": "If set to true, the value parameter contains a numeric value and scale. If set to false (default), the value parameter contains a numeric value only."
            }, {
                "name": "icon",
                "documentation": "The icon to be displayed as a graphical element within the control. This can be an image or an icon from the icon font."
            }, {
                "name": "iconDescription",
                "documentation": "Description of an icon that is used in the tooltip."
            }, {
                "name": "indicator",
                "documentation": "The indicator arrow that shows value deviation."
            }, {
                "name": "nullifyValue",
                "documentation": "If set to true, the omitted value property is set to 0."
            }, {
                "name": "scale",
                "documentation": "The scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units. If the scaling prefix contains more than three characters, only the first three characters are displayed."
            }, {
                "name": "size",
                "documentation": "Updates the size of the control. If not set, then the default size is applied based on the device tile."
            }, {
                "name": "truncateValueTo",
                "documentation": "The number of characters of the value property to display."
            }, {
                "name": "value",
                "documentation": "The actual value."
            }, {
                "name": "valueColor",
                "documentation": "The semantic color of the value."
            }, {
                "name": "width",
                "documentation": "The width of the control. If it is not set, the size of the control is defined by the 'size' property."
            }, {
                "name": "withMargin",
                "documentation": "If the value is set to false, the content is adjusted to the whole size of the control."
            }, {
                "name": "state",
                "documentation": "Indicates the load status."
            }, {
                "name": "press",
                "documentation": "The event is fired when the user chooses the numeric content."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Shows numeric values used for example in tiles colored according to their meaning and displays deviations."
        },
        "ObjectAttribute": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the ObjectAttribute title."
            }, {
                "name": "text",
                "documentation": "Defines the ObjectAttribute text."
            }, {
                "name": "active",
                "documentation": "Indicates if the ObjectAttribute text is selectable for the user. Note: As of version 1.48, only the value of the text property becomes active (styled and acts like a link) as opposed to both the title and text in the previous versions. If you set this property to true, you have to also set the text property."
            }, {
                "name": "textDirection",
                "documentation": "Determines the direction of the text, not including the title.\nAvailable options for the text direction are LTR (left-to-right) and RTL (right-to-left). By default the control inherits the text direction from its parent control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on active text."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The ObjectAttribute control displays a text field that can be normal or active.\nThe ObjectAttribute fires a press event when the user chooses the active text. Note: If property active is set to true, only the value of the\ntext property is styled and acts as a link. In this case the text\nproperty must also be set, as otherwise there will be no link displayed for the user."
        },
        "ObjectHeader": {
            "attributes": [{
                "name": "title",
                "documentation": "Determines the title of the ObjectHeader."
            }, {
                "name": "number",
                "documentation": "Determines the displayed number of the ObjectHeader number field."
            }, {
                "name": "numberUnit",
                "documentation": "Determines the units qualifier of the ObjectHeader number. Note: The value of the numberUnit is not displayed if the\nnumber property is set to null."
            }, {
                "name": "intro",
                "documentation": "Determines the introductory text for the ObjectHeader."
            }, {
                "name": "introActive",
                "documentation": "Determines whether the introductory text of the ObjectHeader is clickable."
            }, {
                "name": "titleActive",
                "documentation": "Determines whether the title of the ObjectHeader is clickable\nand is set only if a title is provided."
            }, {
                "name": "icon",
                "documentation": "Defines the icon of the ObjectHeader. Note: Recursive resolution of binding expressions is not supported by the framework.\nIt works only in ObjectHeader, since it is a composite control and creates an Image control internally."
            }, {
                "name": "iconActive",
                "documentation": "Determines whether the ObjectHeader icon is clickable."
            }, {
                "name": "iconAlt",
                "documentation": "Determines the alternative text of the ObjectHeader icon. The text is\ndisplayed if the image for the icon is not available, or cannot be displayed."
            }, {
                "name": "iconTooltip",
                "documentation": "Determines the tooltip text of the ObjectHeader icon."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get\nthe density perfect version of image if this version of image doesn't exist on the server. If bandwidth is the key for the application, set this value to false."
            }, {
                "name": "markFavorite",
                "documentation": "Sets the favorite state for the ObjectHeader. The showMarkers\nproperty must be set to true for this property to take effect."
            }, {
                "name": "markFlagged",
                "documentation": "Sets the flagged state for the ObjectHeader. The showMarkers property\nmust be set to true for this property to take effect."
            }, {
                "name": "showMarkers",
                "documentation": "If set to true, the ObjectHeader can be marked with icons such as favorite and flag."
            }, {
                "name": "showTitleSelector",
                "documentation": "Determines whether the selector arrow icon/image is displayed and can be pressed."
            }, {
                "name": "numberState",
                "documentation": "Determines the value state of the number and numberUnit properties."
            }, {
                "name": "condensed",
                "documentation": "ObjectHeader with title, one attribute, number, and number unit. Note: Only applied if the responsive property is set to false."
            }, {
                "name": "backgroundDesign",
                "documentation": "Determines the background color of the ObjectHeader. Note: The different types of ObjectHeader come with different default background:\n\nnon responsive - Transparent\nresponsive - Translucent\ncondensed - Solid\n"
            }, {
                "name": "responsive",
                "documentation": "Determines whether the ObjectHeader is rendered with a different design that\nreacts responsively to the screen sizes. Note: Be aware that the design and behavior of the responsive ObjectHeader\ncould change without further notification."
            }, {
                "name": "fullScreenOptimized",
                "documentation": "Optimizes the display of the elements of the ObjectHeader. Set this property to true if your app uses a fullscreen layout (as opposed\nto a master-detail or other split-screen layout). Note: Only applied if the responsive property is also set to true. If set to true, the following situations apply:\n\nOn desktop, 1-3 attributes/statuses - positioned as a third block on the right side of the Title/Number group\nOn desktop, 4+ attributes/statuses - 4 columns below the Title/Number\nOn tablet (portrait mode), always in 2 columns below the Title/Number\nOn tablet (landscape mode), 1-2 attributes/statuses - 2 columns below the Title/Number\nOn tablet (landscape mode), 3+ attributes/statuses - 3 columns below the Title/Number\n\nOn phone, the attributes and statuses are always positioned in 1 column below the Title/Number of the ObjectHeader. If set to false, the attributes and statuses are being positioned below the\nTitle/Number of the ObjectHeader in 2 or 3 columns depending on their number:\n\nOn desktop, 1-4 attributes/statuses - 2 columns\nOn desktop, 5+ attributes/statuses - 3 columns\nOn tablet, always in 2 columns\n"
            }, {
                "name": "titleHref",
                "documentation": "Defines the title link target URI. Supports standard hyperlink behavior. Note: If an action should be triggered, this property should not be set, but instead\nan event handler for the titlePress event should be registered."
            }, {
                "name": "titleTarget",
                "documentation": "Determines the target attribute for the title link. Options are _self,\n_top, _blank, _parent, _search. Alternatively,\na frame name can be entered."
            }, {
                "name": "introHref",
                "documentation": "Determines the intro link target URI. Supports standard hyperlink behavior. If an action should be triggered,\nthis should not be set, but instead an event handler for the introPress event should be registered."
            }, {
                "name": "introTarget",
                "documentation": "Determines the target attribute for the intro link. Options are _self,\n_top, _blank, _parent, _search. Alternatively,\na frame name can be entered."
            }, {
                "name": "titleTextDirection",
                "documentation": "Specifies the title text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "introTextDirection",
                "documentation": "Specifies the intro text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "numberTextDirection",
                "documentation": "Specifies the number and unit text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "titleSelectorTooltip",
                "documentation": "Determines a custom text for the tooltip of the select title arrow. If not set, a default text of the tooltip will be displayed."
            }, {
                "name": "titleLevel",
                "documentation": "Defines the semantic level of the title. This information is used by assistive technologies, such as screen readers to create a hierarchical site map for faster navigation.\nDepending on this setting an HTML h1-h6 element is used."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "titlePress",
                "documentation": "Event is fired when the title is active and the user taps/clicks on it"
            }, {
                "name": "introPress",
                "documentation": "Event is fired when the intro is active and the user taps/clicks on it"
            }, {
                "name": "iconPress",
                "documentation": "Event is fired when the title icon is active and the user taps/clicks on it"
            }, {
                "name": "titleSelectorPress",
                "documentation": "Event is fired when the object header title selector (down-arrow) is pressed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "ObjectHeader is a display control that enables the user to easily identify\na specific object. The object header title is the key identifier of the object and\nadditional text and icons can be used to further distinguish it from other objects."
        },
        "ObjectIdentifier": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the object title."
            }, {
                "name": "text",
                "documentation": "Defines the object text."
            }, {
                "name": "badgeNotes",
                "documentation": "Indicates whether or not the notes icon is displayed."
            }, {
                "name": "badgePeople",
                "documentation": "Indicates whether or not the address book icon is displayed."
            }, {
                "name": "badgeAttachments",
                "documentation": "Indicates whether or not the attachments icon is displayed."
            }, {
                "name": "titleActive",
                "documentation": "Indicates if the ObjectIdentifier's title is clickable."
            }, {
                "name": "textDirection",
                "documentation": "Specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "titlePress",
                "documentation": "Fires when the title is active and the user taps/clicks on it."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The ObjectIdentifier is a display control that enables the user to easily identify a specific object. The ObjectIdentifier title is the key identifier of the object and additional text and icons can be used to further distinguish it from other objects."
        },
        "ObjectListItem": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the ObjectListItem title."
            }, {
                "name": "number",
                "documentation": "Defines the ObjectListItem number."
            }, {
                "name": "numberUnit",
                "documentation": "Defines the number units qualifier of the ObjectListItem."
            }, {
                "name": "intro",
                "documentation": "Defines the introductory text for the ObjectListItem."
            }, {
                "name": "icon",
                "documentation": "ObjectListItem icon displayed to the left of the title."
            }, {
                "name": "activeIcon",
                "documentation": "Icon displayed when the ObjectListItem is active."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image (in case this version of image doesn't exist on the server). If bandwidth is key for the application, set this value to false."
            }, {
                "name": "markFavorite",
                "documentation": "Sets the favorite state for the ObjectListItem."
            }, {
                "name": "markFlagged",
                "documentation": "Sets the flagged state for the ObjectListItem."
            }, {
                "name": "showMarkers",
                "documentation": "If set to true, the ObjectListItem can be marked with icons such as favorite and flag."
            }, {
                "name": "numberState",
                "documentation": "Defines the ObjectListItem number and numberUnit value state."
            }, {
                "name": "titleTextDirection",
                "documentation": "Determines the text direction of the item title.\nAvailable options for the title direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item title inherits the text direction from its parent."
            }, {
                "name": "introTextDirection",
                "documentation": "Determines the text direction of the item intro.\nAvailable options for the intro direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item intro inherits the text direction from its parent."
            }, {
                "name": "numberTextDirection",
                "documentation": "Determines the text direction of the item number.\nAvailable options for the number direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item number inherits the text direction from its parent."
            }, {
                "name": "markLocked",
                "documentation": "Sets the locked state of the ObjectListItem."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "ObjectListItem is a display control that provides summary information about an object as a list item. The ObjectListItem title is the key identifier of the object. Additional text and icons can be used to further distinguish it from other objects. Attributes and statuses can be used to provide additional meaning about the object to the user. Note: The control must only be used in the context of a list."
        },
        "ObjectMarker": {
            "attributes": [{
                "name": "type",
                "documentation": "Sets one of the predefined types. Note: If the visibility property is not specified explicitly, every type comes with predefined one as follows:\n For Flagged and Favorite the icon is visible and the text is not displayed For Draft the text is visible and the icon is not displayed For Locked, LockedBy, Unsaved and UnsavedBy - on screens larger than 600px both icon and text are visible, otherwise only the icon "
            }, {
                "name": "visibility",
                "documentation": "Sets one of the visibility states.\nVisibility states are as follows:\n IconOnly - displays only icon, regardless of the screen size TextOnly - displays only text, regardless of the screen size IconAndText - displays both icon and text, regardless of the screen size\n"
            }, {
                "name": "additionalInfo",
                "documentation": "Sets additional information to the displayed type. Note: If no type is set, the additional information will not be displayed."
            }, {
                "name": "press",
                "documentation": "Event is fired when the ObjectMarker is interactive and the user taps/clicks on it."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The sap.m.ObjectMarker control represents one of the following predefined types:\n\nFlagged\nFavorite\nDraft\nLocked\nLockedBy\nUnsaved\nUnsavedBy\n\nNote: Use the LockedBy/UnsavedBy type along with the additionalInfo property to display the name of the user who locked/changed the object.\nIf additionalInfo property is not set when using LockedBy/UnsavedBy types, the string \"Locked by another user\"/\"Unsaved changes by another user\" will be displayed.\nIf you don't want to display name of the user, simply use the Locked/Unsaved types."
        },
        "ObjectNumber": {
            "attributes": [{
                "name": "number",
                "documentation": "Defines the number field."
            }, {
                "name": "numberUnit",
                "documentation": "Defines the number units qualifier."
            }, {
                "name": "emphasized",
                "documentation": "Indicates if the object number should appear emphasized."
            }, {
                "name": "state",
                "documentation": "Determines the object number's value state. Setting this state will cause the number to be rendered in state-specific colors."
            }, {
                "name": "unit",
                "documentation": "Defines the number units qualifier. If numberUnit and unit are both set, the unit value is used."
            }, {
                "name": "textDirection",
                "documentation": "Available options for the number and unit text direction are LTR(left-to-right) and RTL(right-to-left). By default, the control inherits the text direction from its parent control."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the number and unit."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The ObjectNumber control displays number and number unit properties for an object. The number can be displayed using semantic\ncolors to provide additional meaning about the object to the user."
        },
        "ObjectStatus": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the ObjectStatus title."
            }, {
                "name": "text",
                "documentation": "Defines the ObjectStatus text."
            }, {
                "name": "active",
                "documentation": "Indicates if the ObjectStatus text and icon can be clicked/tapped by the user. Note: If you set this property to true, you have to also set the text or icon property."
            }, {
                "name": "state",
                "documentation": "Defines the text value state."
            }, {
                "name": "icon",
                "documentation": "Icon URI. This may be either an icon font or image path."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If bandwidth is key for the application, set this value to false."
            }, {
                "name": "textDirection",
                "documentation": "Determines the direction of the text, not including the title.\nAvailable options for the text direction are LTR (left-to-right) and RTL (right-to-left). By default the control inherits the text direction from its parent control."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks/taps on active text."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Status information that can be either text with a value state, or an icon."
        },
        "OverflowToolbar": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the control.\nBy default, Toolbar is a block element. If the width is not explicitly set, the control will assume its natural size."
            }, {
                "name": "active",
                "documentation": "Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive."
            }, {
                "name": "enabled",
                "documentation": "Sets the enabled property of all controls defined in the content aggregation.\nNote: This property does not apply to the toolbar itself, but rather to its items."
            }, {
                "name": "height",
                "documentation": "Defines the height of the control. By default, the height\nproperty depends on the used theme and the design property. Note: It is not recommended to use this property if the\nsapMTBHeader-CTX class is used"
            }, {
                "name": "design",
                "documentation": "Defines the toolbar design. Note: Design settings are theme-dependent. They also determine the default height of the toolbar."
            }, {
                "name": "style",
                "documentation": "Defines the visual style of the Toolbar. Note: The visual styles are theme-dependent."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks on the toolbar, if the Active property is set to \"true\"."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Toolbar",
            "documentation": "A container control based on sap.m.Toolbar, that provides overflow when\nits content does not fit in the visible area. Overview The content of the OverflowToolbar moves into the overflow area from\nright to left when the available space is not enough in the visible area of\nthe container. It can be accessed by the user through the overflow button that\nopens it in a popover. Note: It is recommended that you use OverflowToolbar over sap.m.Toolbar, unless you want to avoid overflow in favor of shrinking. Usage Different behavior and priorities can be set for each control inside the\nOverflowToolbar, such as certain controls to appear only in the\noverflow area or to never move there. For more information, see sap.m.OverflowToolbarLayoutData and sap.m.OverflowToolbarPriority. Overflow Behavior\nBy default, only the following controls can move to the overflow area:  sap.m.Button\n sap.m.CheckBox\n sap.m.ComboBox\n sap.m.DatePicker\n sap.m.DateTimeInput\n sap.m.DateTimePicker\n sap.m.Input\n sap.m.Label\n sap.m.MenuButton\n sap.m.OverflowToolbarButton\n sap.m.OverflowToolbarToggleButton\n sap.m.SearchField\n sap.m.SegmentedButton\n sap.m.Select\n sap.m.TimePicker\n sap.m.ToggleButton\n sap.ui.comp.smartfield.SmartField\n sap.ui.comp.smartfield.SmartLabel Additionally, any control that implements the sap.m.IOverflowToolbarContent interface may define\nits behavior (most importantly overflow behavior) when placed inside OverflowToolbar. Note: The OverflowToolbar is an adaptive container that checks the available\nwidth and hides the part of its content that doesn't fit. It is intended that simple controls,\nsuch as sap.m.Button and sap.m.Label are used as content. Embedding other\nadaptive container controls, such as sap.m.Breadcrumbs, results in competition for the available\nspace - both controls calculate the available space based on the other one's size and both change their\nwidth at the same time, leading to incorrectly distributed space. Responsive behavior The height of the toolbar changes on desktop, tablet, and smartphones."
        },
        "OverflowToolbarButton": {
            "attributes": [{
                "name": "text",
                "documentation": "Determines the text of the Button."
            }, {
                "name": "type",
                "documentation": "Defines the Button type."
            }, {
                "name": "width",
                "documentation": "Defines the Button width."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the Button is enabled (default is set to true).\nA disabled Button has different colors depending on the sap.m.ButtonType ButtonType."
            }, {
                "name": "icon",
                "documentation": "Defines the icon to be displayed as graphical element within the Button.\nIt can be an image or an icon from the icon font."
            }, {
                "name": "iconFirst",
                "documentation": "Determines whether the icon is displayed before the text."
            }, {
                "name": "activeIcon",
                "documentation": "The source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the icon property is not set or has a different type, the active icon is not displayed."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image."
            }, {
                "name": "textDirection",
                "documentation": "This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fired when the user taps the control."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks or taps on the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Button",
            "documentation": "Represents an sap.m.Button that shows its text only when in the overflow area of an sap.m.OverflowToolbar. Note: This control is intended to be used exclusively in the context of the OverflowToolbar, whenever it is required\nto have buttons that show only an icon in the toolbar, but icon and text in the overflow menu."
        },
        "OverflowToolbarLayoutData": {
            "attributes": [{
                "name": "moveToOverflow",
                "documentation": "The OverflowToolbar item can or cannot move to the overflow area"
            }, {
                "name": "stayInOverflow",
                "documentation": "The OverflowToolbar item can or cannot stay in the overflow area"
            }, {
                "name": "priority",
                "documentation": "Defines OverflowToolbar items priority, Available priorities ate NeverOverflow, High, Low, Disappear and AlwaysOverflow"
            }, {
                "name": "group",
                "documentation": "Defines OverflowToolbar items group number.\nDefault value is 0, which means that the control does not belong to any group.\nElements that belong to a group overflow together. The overall priority of the group is defined by the element with highest priority.\nElements that belong to a group are not allowed to have AlwaysOverflow or NeverOverflow priority."
            }, {
                "name": "closeOverflowOnInteraction",
                "documentation": "Defines whether the overflow area is automatically closed when interacting with a control in it"
            }, {
                "name": "shrinkable",
                "documentation": "Determines whether the control, when in a toolbar, is shrinkable or not. For controls with fixed width (100px, 5rem, etc...) this property is ignored. Note: Nested layout controls should not be shrinkable."
            }, {
                "name": "minWidth",
                "documentation": "Sets the minimum width of the toolbar item."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the toolbar item."
            }],
            "extendsElement": "sap.m.ToolbarLayoutData",
            "documentation": "Holds layout data for the sap.m.OverflowToolbar items."
        },
        "OverflowToolbarToggleButton": {
            "attributes": [{
                "name": "pressed",
                "documentation": "The property is “true” when the control is toggled. The default state of this property is \"false\"."
            }, {
                "name": "text",
                "documentation": "Determines the text of the Button."
            }, {
                "name": "type",
                "documentation": "Defines the Button type."
            }, {
                "name": "width",
                "documentation": "Defines the Button width."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the Button is enabled (default is set to true).\nA disabled Button has different colors depending on the sap.m.ButtonType ButtonType."
            }, {
                "name": "icon",
                "documentation": "Defines the icon to be displayed as graphical element within the Button.\nIt can be an image or an icon from the icon font."
            }, {
                "name": "iconFirst",
                "documentation": "Determines whether the icon is displayed before the text."
            }, {
                "name": "activeIcon",
                "documentation": "The source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the icon property is not set or has a different type, the active icon is not displayed."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image."
            }, {
                "name": "textDirection",
                "documentation": "This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fired when the user taps the control."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks or taps on the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ToggleButton",
            "documentation": "Represents an sap.m.ToggleButton that shows its text only when in the overflow area of an sap.m.OverflowToolbar. Note: This control is intended to be used exclusively in the context of the OverflowToolbar, whenever it is required\nto have buttons that show only an icon in the toolbar, but icon and text in the overflow menu."
        },
        "P13nColumnsItem": {
            "attributes": [{
                "name": "columnKey",
                "documentation": "This property contains the unique table column key"
            }, {
                "name": "index",
                "documentation": "This property contains the index of a table column"
            }, {
                "name": "visible",
                "documentation": "This property decides whether a P13nColumnsItem is visible"
            }, {
                "name": "width",
                "documentation": "This property contains the with of a table column."
            }, {
                "name": "total",
                "documentation": "This property contains the total flag of a table column."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Type for columnsItems aggregation in P13nColumnsPanel control."
        },
        "P13nColumnsPanel": {
            "attributes": [{
                "name": "visibleItemsThreshold",
                "documentation": "Specifies a threshold of visible items. If the end user makes a lot of columns visible, this might cause performance to slow down.\nWhen this happens, the user can receive a corresponding warning triggered by the visibleItemsThreshold property. The\nproperty needs to be activated and set to the required value by the consuming application to ensure that the warning message is\nshown when the threshold has been exceeded. In the following example the message will be shown if more than 100 visible columns are\nselected: \ncustomData&gt;\ncore:CustomData key=&quot;p13nDialogSettings&quot;\nvalue='\\{&quot;columns&quot;:\\{&quot;visible&quot;: true, &quot;payload&quot;: \\{&quot;visibleItemsThreshold&quot;: 3\\\\\\' /&gt;\n/customData&gt;\n"
            }, {
                "name": "addColumnsItem",
                "documentation": "Event raised when a columnsItem is added."
            }, {
                "name": "changeColumnsItems",
                "documentation": "Event raised if columnsItems is changed or new one needs to be created in the model."
            }, {
                "name": "setData",
                "documentation": "Event raised if setData is called in model. The event serves the purpose of minimizing such calls since they can\ntake up a lot of performance."
            }, {
                "name": "title",
                "documentation": "Title text appears in the panel."
            }, {
                "name": "titleLarge",
                "documentation": "Large title text appears e.g. in dialog header in case that only one panel is shown."
            }, {
                "name": "type",
                "documentation": "Panel type for generic use. Due to extensibility reason the type of type property should be string.\nSo it is feasible to add a custom panel without expanding the type."
            }, {
                "name": "verticalScrolling",
                "documentation": "Enables the vertical Scrolling on the P13nDialog when the panel is shown."
            }, {
                "name": "validationExecutor",
                "documentation": "Callback method which is called in order to validate end user entry."
            }, {
                "name": "validationListener",
                "documentation": "Callback method which is called in order to register for validation result."
            }, {
                "name": "changeNotifier",
                "documentation": "Callback which notifies a change on this panel."
            }, {
                "name": "beforeNavigationTo",
                "documentation": "Due to performance the data of the panel can be requested in lazy mode e.g. when the panel is displayed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.P13nPanel",
            "documentation": "The P13nColumnsPanel control is used to define column-specific settings for table personalization."
        },
        "P13nConditionPanel": {
            "attributes": [{
                "name": "maxConditions",
                "documentation": "defines the max number of conditions on the ConditionPanel"
            }, {
                "name": "exclude",
                "documentation": "exclude options for filter"
            }, {
                "name": "containerQuery",
                "documentation": "defines if the mediaQuery or a ContainerResize will be used for layout update.\nWhen the P13nConditionPanel is used on a dialog the property should be set to true!"
            }, {
                "name": "autoAddNewRow",
                "documentation": "adds initial a new empty condition row"
            }, {
                "name": "disableFirstRemoveIcon",
                "documentation": "makes the remove icon on the first condition row disabled when only one condition exist."
            }, {
                "name": "alwaysShowAddIcon",
                "documentation": "makes the Add icon visible on each condition row. If is set to false the Add is only visible at the end and you can only append a\nnew condition."
            }, {
                "name": "usePrevConditionSetting",
                "documentation": "new added condition use the settings from the previous condition as default."
            }, {
                "name": "autoReduceKeyFieldItems",
                "documentation": "KeyField value can only be selected once. When you set the property to true the ConditionPanel will automatically offers on the\nKeyField drop down only the keyFields which are not used. The default behavior is that in each keyField dropdown all keyfields are\nlisted."
            }, {
                "name": "layoutMode",
                "documentation": "can be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor \"Phone\" you can set a fixed layout."
            }, {
                "name": "showLabel",
                "documentation": "show additional labels in the condition"
            }, {
                "name": "displayFormat",
                "documentation": "This represents the displayFormat of the condition Values. With the value \"UpperCase\" the entered value of the condition will be\nconverted to upperCase."
            }, {
                "name": "validationExecutor",
                "documentation": "Calls the validation listener tbd..."
            }, {
                "name": "dataChange",
                "documentation": "Workaround for updating the binding"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The ConditionPanel Control will be used to implement the Sorting, Filtering and Grouping panel of the new Personalization dialog."
        },
        "P13nDialog": {
            "attributes": [{
                "name": "initialVisiblePanelType",
                "documentation": "This property determines which panel is initially shown when dialog is opened. If not defined then the first visible\npanel of panels aggregation is taken. Setting value after the dialog is opened has no effect anymore.\nDue to extensibility reason the type should be string. So it is feasible to add a custom panel without\nexpanding the type."
            }, {
                "name": "showReset",
                "documentation": "This property determines whether the 'Restore' button is shown inside the dialog. If this property is set to true, clicking the\n'Reset' button will trigger the reset event sending a notification that model data must be reset."
            }, {
                "name": "showResetEnabled",
                "documentation": "This property determines whether the 'Restore' button is enabled and is taken into account only if showReset is set\nto true."
            }, {
                "name": "validationExecutor",
                "documentation": "Calls the validation listener once all panel-relevant validation checks have been done. This callback function is called in order\nto perform cross-model validation checks."
            }, {
                "name": "ok",
                "documentation": "Event fired if the 'ok' button in P13nDialog is clicked."
            }, {
                "name": "cancel",
                "documentation": "Event fired if the 'cancel' button in P13nDialog is clicked."
            }, {
                "name": "reset",
                "documentation": "Event fired if the 'reset' button in P13nDialog is clicked."
            }, {
                "name": "icon",
                "documentation": "Icon displayed in the dialog's header. This icon is invisible on the iOS platform and it's density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen."
            }, {
                "name": "title",
                "documentation": "Title text appears in the dialog header."
            }, {
                "name": "showHeader",
                "documentation": "Determines whether the header is shown inside the dialog. If this property is set to true, the text and icon property are ignored. This property has a default value true."
            }, {
                "name": "type",
                "documentation": "The type of the dialog. In some themes, the type \"message\" will limit the dialog's width within 480px on tablet and desktop."
            }, {
                "name": "state",
                "documentation": "The state affects the icon and the title color. If other than \"None\" is set, a predefined icon will be added to the dialog. Setting icon property will overwrite the predefined icon. The default value is \"None\" which doesn't add any icon to the Dialog control. This property is by now only supported by blue crystal theme."
            }, {
                "name": "stretchOnPhone",
                "documentation": "Determines whether the dialog will displayed on full screen on a phone."
            }, {
                "name": "stretch",
                "documentation": "Determines if the dialog will be stretched to full screen. This property is only applicable to standard dialog and message type dialog ignores this property."
            }, {
                "name": "contentWidth",
                "documentation": "Preferred width of content in Dialog. This property affects the width of dialog on phone in landscape mode, tablet or desktop, because the dialog has a fixed width on phone in portrait mode. If the preferred width is less than the minimum width of the dialog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of dialog width on tablet is 400px."
            }, {
                "name": "contentHeight",
                "documentation": "Preferred height of content in Dialog. If the preferred height is bigger than the available space on screen, it will be overwritten by the maximum available height on screen in order to make sure that dialog isn't cut off."
            }, {
                "name": "horizontalScrolling",
                "documentation": "Indicates if user can scroll horizontally inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property."
            }, {
                "name": "verticalScrolling",
                "documentation": "Indicates if user can scroll vertically inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property."
            }, {
                "name": "resizable",
                "documentation": "Indicates whether the dialog is resizable. the dialog is resizable. If this property is set to true, the dialog will have a resize handler in it's bottom right corner. This property has a default value false. The Dialog can be resizable only in desktop mode."
            }, {
                "name": "draggable",
                "documentation": "Indicates whether the dialog is draggable. If this property is set to true, the dialog will be draggable by it's header. This property has a default value false. The Dialog can be draggable only in desktop mode."
            }, {
                "name": "escapeHandler",
                "documentation": "This property expects a function with one parameter of type Promise. In the function you should call either resolve() or reject() on the Promise object.\nThe function allows you to define custom behaviour which will be executed when the ESCAPE key is pressed. By default when the ESCAPE key is pressed the Dialog is immediately closed."
            }, {
                "name": "leftButton",
                "documentation": "LeftButton is shown at the left edge of the bar in iOS, and at the right side of the bar for the other platforms. Please set this to null if you want to remove the left button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored. Setting leftButton will also set the beginButton internally."
            }, {
                "name": "rightButton",
                "documentation": "RightButton is always shown at the right edge of the bar. Please set this to null if you want to remove the right button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored. Setting rightButton will also set the endButton internally."
            }, {
                "name": "initialFocus",
                "documentation": "Focus is set to the dialog in the sequence of leftButton and rightButton when available. But if some other control needs to get the focus other than one of those two buttons, set the initialFocus with the control which should be focused on. Setting initialFocus to input controls doesn't open the on screen keyboard on mobile device, this is due to the browser limitation that the on screen keyboard can't be opened with javascript code. The opening of on screen keyboard must be triggered by real user action."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "beforeOpen",
                "documentation": "This event will be fired before the dialog is opened."
            }, {
                "name": "afterOpen",
                "documentation": "This event will be fired after the dialog is opened."
            }, {
                "name": "beforeClose",
                "documentation": "This event will be fired before the dialog is closed."
            }, {
                "name": "afterClose",
                "documentation": "This event will be fired after the dialog is closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Dialog",
            "documentation": "The P13nDialog control provides a dialog that contains one or more panels. On each of the panels, one or more changes with regards to a table can be processed. For example, a panel to set a column to invisible, change the order of the columns or a panel to sort or filter tables."
        },
        "P13nDimMeasureItem": {
            "attributes": [{
                "name": "columnKey",
                "documentation": "Specifies the unique chart column key. In this context a column refers to dimensions or measures of a chart."
            }, {
                "name": "index",
                "documentation": "Specifies the order of visible dimensions or measures of a chart."
            }, {
                "name": "visible",
                "documentation": "Specifies the visibility of dimensions or measures."
            }, {
                "name": "role",
                "documentation": "Specifies the role of dimensions or measures. The role determines how dimensions and measures influence the chart."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Type for columnsItems aggregation in P13nDimMeasurePanel control."
        },
        "P13nDimMeasurePanel": {
            "attributes": [{
                "name": "chartTypeKey",
                "documentation": "Specifies a chart type key."
            }, {
                "name": "changeDimMeasureItems",
                "documentation": "Event raised when one or more DimMeasureItems has been updated.\nAggregation DimMeasureItems should be updated outside..."
            }, {
                "name": "changeChartType",
                "documentation": "Event raised when a ChartType has been updated."
            }, {
                "name": "title",
                "documentation": "Title text appears in the panel."
            }, {
                "name": "titleLarge",
                "documentation": "Large title text appears e.g. in dialog header in case that only one panel is shown."
            }, {
                "name": "type",
                "documentation": "Panel type for generic use. Due to extensibility reason the type of type property should be string.\nSo it is feasible to add a custom panel without expanding the type."
            }, {
                "name": "verticalScrolling",
                "documentation": "Enables the vertical Scrolling on the P13nDialog when the panel is shown."
            }, {
                "name": "validationExecutor",
                "documentation": "Callback method which is called in order to validate end user entry."
            }, {
                "name": "validationListener",
                "documentation": "Callback method which is called in order to register for validation result."
            }, {
                "name": "changeNotifier",
                "documentation": "Callback which notifies a change on this panel."
            }, {
                "name": "beforeNavigationTo",
                "documentation": "Due to performance the data of the panel can be requested in lazy mode e.g. when the panel is displayed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.P13nPanel",
            "documentation": "The P13nDimMeasurePanel control is used to define chart-specific settings like chart type, the visibility, the order and roles of dimensions and measures for table personalization."
        },
        "P13nFilterItem": {
            "attributes": [{
                "name": "operation",
                "documentation": "sap.m.P13nConditionOperation"
            }, {
                "name": "value1",
                "documentation": "value of the filter"
            }, {
                "name": "value2",
                "documentation": "to value of the between filter"
            }, {
                "name": "columnKey",
                "documentation": "key of the column"
            }, {
                "name": "exclude",
                "documentation": "defines if the filter is an include or exclude filter item"
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Type for filterItems aggregation in P13nFilterPanel control."
        },
        "P13nFilterPanel": {
            "attributes": [{
                "name": "maxIncludes",
                "documentation": "Defines the maximum number of include filters."
            }, {
                "name": "maxExcludes",
                "documentation": "Defines the maximum number of exclude filters."
            }, {
                "name": "containerQuery",
                "documentation": "Defines if the mediaQuery or a ContainerResize is used for layout update. If the\nConditionPanel is used in a dialog, the property must be set to true."
            }, {
                "name": "layoutMode",
                "documentation": "Can be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout."
            }, {
                "name": "addFilterItem",
                "documentation": "Event raised if a filter item has been added."
            }, {
                "name": "removeFilterItem",
                "documentation": "Event raised if a filter item has been removed."
            }, {
                "name": "updateFilterItem",
                "documentation": "Event raised if a filter item has been updated."
            }, {
                "name": "title",
                "documentation": "Title text appears in the panel."
            }, {
                "name": "titleLarge",
                "documentation": "Large title text appears e.g. in dialog header in case that only one panel is shown."
            }, {
                "name": "type",
                "documentation": "Panel type for generic use. Due to extensibility reason the type of type property should be string.\nSo it is feasible to add a custom panel without expanding the type."
            }, {
                "name": "verticalScrolling",
                "documentation": "Enables the vertical Scrolling on the P13nDialog when the panel is shown."
            }, {
                "name": "validationExecutor",
                "documentation": "Callback method which is called in order to validate end user entry."
            }, {
                "name": "validationListener",
                "documentation": "Callback method which is called in order to register for validation result."
            }, {
                "name": "changeNotifier",
                "documentation": "Callback which notifies a change on this panel."
            }, {
                "name": "beforeNavigationTo",
                "documentation": "Due to performance the data of the panel can be requested in lazy mode e.g. when the panel is displayed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.P13nPanel",
            "documentation": "The P13nFilterPanel control is used to define filter-specific settings for table personalization."
        },
        "P13nGroupItem": {
            "attributes": [{
                "name": "operation",
                "documentation": "sap.m.P13nConditionOperation"
            }, {
                "name": "columnKey",
                "documentation": "key of the column"
            }, {
                "name": "showIfGrouped",
                "documentation": "make the grouped column as normalcolumn visible"
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Type for groupItems aggregation in P13nGroupPanel control."
        },
        "P13nGroupPanel": {
            "attributes": [{
                "name": "maxGroups",
                "documentation": "Defines the maximum number of groups."
            }, {
                "name": "containerQuery",
                "documentation": "Defines if mediaQuery or ContainerResize is used for a layout update. If ConditionPanel\nis used in a dialog, the property must be set to true."
            }, {
                "name": "layoutMode",
                "documentation": "Can be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor \"Phone\" you can set a fixed layout."
            }, {
                "name": "addGroupItem",
                "documentation": "Event raised if a GroupItem has been added."
            }, {
                "name": "removeGroupItem",
                "documentation": "Event raised if a GroupItem has been removed."
            }, {
                "name": "updateGroupItem",
                "documentation": "Event raised if a GroupItem has been updated."
            }, {
                "name": "title",
                "documentation": "Title text appears in the panel."
            }, {
                "name": "titleLarge",
                "documentation": "Large title text appears e.g. in dialog header in case that only one panel is shown."
            }, {
                "name": "type",
                "documentation": "Panel type for generic use. Due to extensibility reason the type of type property should be string.\nSo it is feasible to add a custom panel without expanding the type."
            }, {
                "name": "verticalScrolling",
                "documentation": "Enables the vertical Scrolling on the P13nDialog when the panel is shown."
            }, {
                "name": "validationExecutor",
                "documentation": "Callback method which is called in order to validate end user entry."
            }, {
                "name": "validationListener",
                "documentation": "Callback method which is called in order to register for validation result."
            }, {
                "name": "changeNotifier",
                "documentation": "Callback which notifies a change on this panel."
            }, {
                "name": "beforeNavigationTo",
                "documentation": "Due to performance the data of the panel can be requested in lazy mode e.g. when the panel is displayed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.P13nPanel",
            "documentation": "The P13nGroupPanel control is used to define group-specific settings for table personalization."
        },
        "P13nItem": {
            "attributes": [{
                "name": "columnKey",
                "documentation": "Can be used as input for subsequent actions."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "visible",
                "documentation": "Defines visibility of column"
            }, {
                "name": "type",
                "documentation": "data type of the column (text, numeric or date is supported)"
            }, {
                "name": "precision",
                "documentation": "if type==numeric the precision will be used to format the entered value (maxIntegerDigits of the used Formatter)"
            }, {
                "name": "formatSettings",
                "documentation": "A JSON object containing the formatSettings which will be used to pass additional type/format settings for the entered value.\nif type==time or date or datetime the object will be used for the DateFormatter, TimeFormatter or DateTimeFormatter Below you can find a brief example \n{ UTC: false, style: \"medium\" //\"short\" or \"long\" "
            }, {
                "name": "scale",
                "documentation": "if type==numeric the scale will be used to format the entered value (maxFractionDigits of the used Formatter)"
            }, {
                "name": "maxLength",
                "documentation": "specifies the number of characters which can be entered in the value fields of the condition panel"
            }, {
                "name": "width",
                "documentation": "Defines column width"
            }, {
                "name": "isDefault",
                "documentation": "the column with isDefault==true will be used as the selected column item on the conditionPanel"
            }, {
                "name": "values",
                "documentation": "the array of values for type bool. e.g. [\"\", \"Off\", \"On\"]. The first entry can be empty (used to blank the value field). Next value\nrepresent the false value, last entry the true value."
            }, {
                "name": "role",
                "documentation": "Defines role. The role is reflected in the manner how the dimension will influence the chart layout."
            }, {
                "name": "aggregationRole",
                "documentation": "Defines aggregation role"
            }, {
                "name": "href",
                "documentation": "Defines href of a link."
            }, {
                "name": "target",
                "documentation": "Defines target of a link."
            }, {
                "name": "press",
                "documentation": "Defines press handler of a link."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Base type for items aggregation in P13nPanel control."
        },
        "P13nPanel": {
            "attributes": [{
                "name": "title",
                "documentation": "Title text appears in the panel."
            }, {
                "name": "titleLarge",
                "documentation": "Large title text appears e.g. in dialog header in case that only one panel is shown."
            }, {
                "name": "type",
                "documentation": "Panel type for generic use. Due to extensibility reason the type of type property should be string.\nSo it is feasible to add a custom panel without expanding the type."
            }, {
                "name": "verticalScrolling",
                "documentation": "Enables the vertical Scrolling on the P13nDialog when the panel is shown."
            }, {
                "name": "validationExecutor",
                "documentation": "Callback method which is called in order to validate end user entry."
            }, {
                "name": "validationListener",
                "documentation": "Callback method which is called in order to register for validation result."
            }, {
                "name": "changeNotifier",
                "documentation": "Callback which notifies a change on this panel."
            }, {
                "name": "beforeNavigationTo",
                "documentation": "Due to performance the data of the panel can be requested in lazy mode e.g. when the panel is displayed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Base type for panels aggregation in P13nDialog control."
        },
        "P13nSortItem": {
            "attributes": [{
                "name": "operation",
                "documentation": "sap.m.P13nConditionOperation"
            }, {
                "name": "columnKey",
                "documentation": "key of the column"
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Type for sortItems aggregation in P13nSortPanel control."
        },
        "P13nSortPanel": {
            "attributes": [{
                "name": "containerQuery",
                "documentation": "defines if the mediaQuery or a ContainerResize will be used for layout update. When the ConditionPanel is used on a dialog the\nproperty should be set to true!"
            }, {
                "name": "layoutMode",
                "documentation": "can be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor \"Phone\" you can set a fixed layout."
            }, {
                "name": "addSortItem",
                "documentation": "event raised when a SortItem was added"
            }, {
                "name": "removeSortItem",
                "documentation": "event raised when a SortItem was removed"
            }, {
                "name": "updateSortItem",
                "documentation": "event raised when a SortItem was updated"
            }, {
                "name": "title",
                "documentation": "Title text appears in the panel."
            }, {
                "name": "titleLarge",
                "documentation": "Large title text appears e.g. in dialog header in case that only one panel is shown."
            }, {
                "name": "type",
                "documentation": "Panel type for generic use. Due to extensibility reason the type of type property should be string.\nSo it is feasible to add a custom panel without expanding the type."
            }, {
                "name": "verticalScrolling",
                "documentation": "Enables the vertical Scrolling on the P13nDialog when the panel is shown."
            }, {
                "name": "validationExecutor",
                "documentation": "Callback method which is called in order to validate end user entry."
            }, {
                "name": "validationListener",
                "documentation": "Callback method which is called in order to register for validation result."
            }, {
                "name": "changeNotifier",
                "documentation": "Callback which notifies a change on this panel."
            }, {
                "name": "beforeNavigationTo",
                "documentation": "Due to performance the data of the panel can be requested in lazy mode e.g. when the panel is displayed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.P13nPanel",
            "documentation": "The P13nSortPanel control is used to define settings for sorting in table personalization."
        },
        "PDFViewer": {
            "attributes": [{
                "name": "height",
                "documentation": "Defines the height of the PDF viewer control, respective to the height of\nthe parent container. Can be set to a percent, pixel, or em value."
            }, {
                "name": "width",
                "documentation": "Defines the width of the PDF viewer control, respective to the width of the\nparent container. Can be set to a percent, pixel, or em value."
            }, {
                "name": "source",
                "documentation": "Specifies the path to the PDF file to display. Can be set to a relative or\nan absolute path.\nOptionally, this property can also be set to a data URI path or a blob URL\nin all major web browsers except Internet Explorer and Microsoft Edge, provided\nthat this data URI or blob URL is whitelisted in advance."
            }, {
                "name": "errorMessage",
                "documentation": "A custom error message that is displayed when the PDF file cannot be loaded."
            }, {
                "name": "errorPlaceholderMessage",
                "documentation": "A custom text that is displayed instead of the PDF file content when the PDF\nfile cannot be loaded."
            }, {
                "name": "popupHeaderTitle",
                "documentation": "A custom title for the PDF viewer popup dialog. Works only if the PDF viewer\nis set to open in a popup dialog."
            }, {
                "name": "title",
                "documentation": "A custom title for the PDF viewer."
            }, {
                "name": "showDownloadButton",
                "documentation": "Shows or hides the download button."
            }, {
                "name": "loaded",
                "documentation": "This event is fired when a PDF file is loaded. If the PDF is loaded in smaller chunks,\nthis event is fired as often as defined by the browser's plugin. This may happen after\na couple chunks are processed."
            }, {
                "name": "error",
                "documentation": "This event is fired when there is an error loading the PDF file."
            }, {
                "name": "sourceValidationFailed",
                "documentation": "This event is fired when the PDF viewer control cannot check the loaded content. For\nexample, the default configuration of the Mozilla Firefox browser may not allow checking\nthe loaded content. This may also happen when the source PDF file is stored in a different\ndomain.\nIf you want no error message to be displayed when this event is fired, call the\npreventDefault() method inside the event handler."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control enables you to display PDF documents within your app.\nIt can be embedded in your user interface layout, or you can set it to open in a popup dialog.\nPlease note that the PDF Viewer control can be fully displayed on desktop devices only. On mobile\ndevices, only the toolbar with a download button is visible."
        },
        "Page": {
            "attributes": [{
                "name": "title",
                "documentation": "The title text appearing in the page header bar."
            }, {
                "name": "titleLevel",
                "documentation": "Defines the semantic level of the title. Using \"Auto\" no explicit level information is written.\nUsed for accessibility purposes only."
            }, {
                "name": "showNavButton",
                "documentation": "A nav button will be rendered on the left area of header bar if this property is set to true."
            }, {
                "name": "showHeader",
                "documentation": "Whether this page shall have a header.\nIf set to true, either the control under the \"customHeader\" aggregation is used, or if there is no such control, a Header control is constructed from the properties \"title\", \"showNavButton\", \"navButtonText\" and \"icon\" depending on the platform."
            }, {
                "name": "showSubHeader",
                "documentation": "Whether this page shall show the subheader."
            }, {
                "name": "navButtonText",
                "documentation": "The text of the nav button when running in iOS (if shown) in case it deviates from the default, which is \"Back\". This property is mvi-theme-dependent and will not have any effect in other themes."
            }, {
                "name": "navButtonTooltip",
                "documentation": "The tooltip of the nav button Since version 1.34"
            }, {
                "name": "enableScrolling",
                "documentation": "Enable vertical scrolling of page contents. Page headers and footers are fixed and do not scroll.\nIf set to false, there will be no vertical scrolling at all. The Page only allows vertical scrolling because horizontal scrolling is discouraged in general for full-page content. If it still needs to be achieved, disable the Page scrolling and use a ScrollContainer as full-page content of the Page. This allows you to freely configure scrolling. It can also be used to create horizontally-scrolling sub-areas of (vertically-scrolling) Pages."
            }, {
                "name": "icon",
                "documentation": "the icon that is rendered in the page header bar in non-iOS phone/tablet platforms. This property is theme-dependent and only has an effect in the MVI theme."
            }, {
                "name": "backgroundDesign",
                "documentation": "This property is used to set the background color of a page. When a list is placed inside a page, the value \"List\" should be used to display a gray background. \"Standard\", with the value white, is used as default if not specified."
            }, {
                "name": "navButtonType",
                "documentation": "This property is used to set the appearance of the NavButton. By default when showNavButton is set to true, a back button will be shown in iOS and an up button in other platforms. In case you want to show a normal button in the left header area, you can set the value to \"Default\"."
            }, {
                "name": "showFooter",
                "documentation": "Whether this page shall have a footer"
            }, {
                "name": "contentOnlyBusy",
                "documentation": "Decides which area is covered by the local BusyIndicator when page.setBusy() is called. By default the entire page is covered, including headers and footer. When this property is set to \"true\", only the content area is covered (not header/sub header and footer), which is useful e.g. when there is a SearchField in the sub header and live search continuously updates the content area while the user is still able to type."
            }, {
                "name": "floatingFooter",
                "documentation": "Decides whether the footer can float.\nWhen set to true, the footer is not fixed below the content area anymore, but rather floats over it with a slight offset from the bottom."
            }, {
                "name": "navButtonTap",
                "documentation": "this event is fired when Nav Button is tapped"
            }, {
                "name": "navButtonPress",
                "documentation": "this event is fired when Nav Button is pressed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A container control that holds one whole screen of an application. Overview\nThe sap.m.Page is a container control that holds one whole screen of an application.\nThe page has three distinct areas that can hold content - a header, content area and a footer.\nStructure\nHeader\nThe top most area of the page is occupied by the header. The standard header includes a navigation button and a title.\nAlternatively, you can create your own custom header, which is defined in the customHeader aggregation.\nContent\nThe content occupies the main part of the page. Only the content area is scrollable by default.\nThis can be prevented by setting enableScrolling to false.\nFooter\nThe footer is optional and occupies the fixed bottom part of the page. Alternatively, the footer can be floating above the bottom part of the content.\nThis is enabled with the floatingFooter property. Note: All accessibility information for the different areas and their corresponding ARIA roles is set in the aggregation landmarkInfo of type sap.m.PageAccessibleLandmarkInfo"
        },
        "PageAccessibleLandmarkInfo": {
            "attributes": [{
                "name": "rootRole",
                "documentation": "Landmark role of the root container of the corresponding sap.m.Page control. If set to sap.ui.core.AccessibleLandmarkRole.None, no landmark will be added to the container."
            }, {
                "name": "rootLabel",
                "documentation": "Texts which describes the landmark of the root container of the corresponding sap.m.Page control. If not set (and a landmark different than sap.ui.core.AccessibleLandmarkRole.None is defined), a predefined text\nis used."
            }, {
                "name": "contentRole",
                "documentation": "Landmark role of the content container of the corresponding sap.m.Page control. If set to sap.ui.core.AccessibleLandmarkRole.None, no landmark will be added to the container."
            }, {
                "name": "contentLabel",
                "documentation": "Texts which describes the landmark of the content container of the corresponding sap.m.Page control. If not set (and a landmark different than sap.ui.core.AccessibleLandmarkRole.None is defined), a predefined text\nis used."
            }, {
                "name": "headerRole",
                "documentation": "Landmark role of the header container of the corresponding sap.m.Page control. If set to sap.ui.core.AccessibleLandmarkRole.None, no landmark will be added to the container."
            }, {
                "name": "headerLabel",
                "documentation": "Texts which describes the landmark of the header container of the corresponding sap.m.Page control. If not set (and a landmark different than sap.ui.core.AccessibleLandmarkRole.None is defined), a predefined text\nis used."
            }, {
                "name": "subHeaderRole",
                "documentation": "Landmark role of the subheader container of the corresponding sap.m.Page control. If set to sap.ui.core.AccessibleLandmarkRole.None, no landmark will be added to the container."
            }, {
                "name": "subHeaderLabel",
                "documentation": "Texts which describes the landmark of the subheader container of the corresponding sap.m.Page control. If not set (and a landmark different than sap.ui.core.AccessibleLandmarkRole.None is defined), a predefined text\nis used."
            }, {
                "name": "footerRole",
                "documentation": "Landmark role of the footer container of the corresponding sap.m.Page control. If set to sap.ui.core.AccessibleLandmarkRole.None, no landmark will be added to the container."
            }, {
                "name": "footerLabel",
                "documentation": "Texts which describes the landmark of the header container of the corresponding sap.m.Page control. If not set (and a landmark different than sap.ui.core.AccessibleLandmarkRole.None is defined), a predefined text\nis used."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Settings for accessible landmarks which can be applied to the container elements of a sap.m.Page control.\nThese landmarks are e.g. used by assistive technologies (like screenreaders) to provide a meaningful page overview."
        },
        "PagingButton": {
            "attributes": [{
                "name": "count",
                "documentation": "Determines the total count of items/entities that the control navigates through.\nThe minimum number of items/entities is 1."
            }, {
                "name": "position",
                "documentation": "Determines the current position in the items/entities that the control navigates through.\nStarting (minimum) number is 1."
            }, {
                "name": "nextButtonTooltip",
                "documentation": "Determines the tooltip of the next button."
            }, {
                "name": "previousButtonTooltip",
                "documentation": "Determines the tooltip of the previous button."
            }, {
                "name": "positionChange",
                "documentation": "Fired when the current position is changed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Enables users to navigate between items/entities."
        },
        "Panel": {
            "attributes": [{
                "name": "headerText",
                "documentation": "This property is used to set the header text of the Panel.\nThe \"headerText\" is visible in both expanded and collapsed state.\nNote: This property is overwritten by the \"headerToolbar\" aggregation."
            }, {
                "name": "width",
                "documentation": "Determines the Panel width."
            }, {
                "name": "height",
                "documentation": "Determines the Panel height."
            }, {
                "name": "expandable",
                "documentation": "Specifies whether the control is expandable.\nThis allows for collapsing or expanding the infoToolbar (if available) and content of the Panel.\nNote: If expandable is set to false, the Panel will always be rendered expanded."
            }, {
                "name": "expanded",
                "documentation": "Indicates whether the Panel is expanded or not.\nIf expanded is set to true, then both the infoToolbar (if available) and the content are rendered.\nIf expanded is set to false, then only the headerText or headerToolbar is rendered."
            }, {
                "name": "expandAnimation",
                "documentation": "Indicates whether the transition between the expanded and the collapsed state of the control is animated.\nBy default the animation is enabled."
            }, {
                "name": "backgroundDesign",
                "documentation": "This property is used to set the background color of the Panel.\nDepending on the theme you can change the state of the background from \"Solid\" over \"Translucent\" to \"Transparent\"."
            }, {
                "name": "accessibleRole",
                "documentation": "This property is used to set the accessible aria role of the Panel.\nDepending on the usage you can change the role from the default Form to Region or Complementary."
            }, {
                "name": "expand",
                "documentation": "Indicates that the panel will expand or collapse."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A container control which has a header and content.\nOverview\nThe panel is a container for grouping and displaying information. It can be collapsed to save space on the screen.\nGuidelines:\n\nNesting two or more panels is not recommended.\nDo not stack too many panels on one page.\n\nStructure\nA panel consists of a title bar with a header text or header toolbar, an info toolbar (optional), and a content area.\nUsing the headerToolbar aggregation, you can add a toolbar with any toolbar content (i.e. custom buttons, spacers, titles) inside the title bar. There are two types of panels: fixed and expandable. Expendable panels are enabled by the expandable property.\nFurthermore you can define an expand animation with the property expandAnimation.\nUsage\nWhen to use:\n\nYou need to group or display information and want to give users the option of hiding this information.\nYou want to show additional information on demand (for example, a panel could show optional input fields for an advanced search).\nYou want to create a panel with controls that do not require user interaction and are not part of a form. Depending on the usage, change the accessibleRole property from the default  sap.m.PanelAccessibleRole Form to  sap.m.PanelAccessibleRole Region or  sap.m.PanelAccessibleRole Complementary.\n\nResponsive Behavior\n\nIf the width of the panel is set to 100% (default), the panel and its children are resized responsively, depending on its parent container.\nIf the panel has a fixed defined height, it will take up the space, even if the panel is collapsed.\nWhen the panel is expandable, an arrow icon (pointing to the right) appears in front of the header.\nWhen the animation is activated, expand/collapse uses a smooth animation to open or close the content area.\nWhen the panel expands/collapses, the arrow icon rotates 90 degrees clockwise/counter-clockwise.\nWhen the height uses the default property auto, the height of the content area is automatically adjusted to match the height of its content.\nWhen the height of the panel is set to a fixed size, the content area can be scrolled through.\n"
        },
        "PlanningCalendar": {
            "attributes": [{
                "name": "startDate",
                "documentation": "Determines the start date of the row, as a JavaScript date object. The current date is used as default."
            }, {
                "name": "viewKey",
                "documentation": "Defines the key of the PlanningCalendarView used for the output. Note: The default value is set Hour. If you are using your own views, the keys of these\nviews should be used instead."
            }, {
                "name": "singleSelection",
                "documentation": "Determines whether only a single row can be selected."
            }, {
                "name": "width",
                "documentation": "Specifies the width of the PlanningCalendar."
            }, {
                "name": "height",
                "documentation": "Specifies the height of the PlanningCalendar."
            }, {
                "name": "showIntervalHeaders",
                "documentation": "Determines whether the assigned interval headers are displayed. You can assign them using the\nintervalHeaders aggregation of the sap.m.PlanningCalendarRow PlanningCalendarRow. Note: If you set both showIntervalHeaders and showEmptyIntervalHeaders\nproperties to true, the space (at the top of the intervals) where the assigned interval\nheaders appear, will remain visible even if no interval headers are assigned."
            }, {
                "name": "showEmptyIntervalHeaders",
                "documentation": "Determines whether the space (at the top of the intervals), where the assigned interval headers appear, should remain\nvisible even when no interval headers are present in the visible time frame. If set to false, this\nspace would collapse/disappear when no interval headers are assigned. Note: This property takes effect, only if showIntervalHeaders is also set to true."
            }, {
                "name": "showRowHeaders",
                "documentation": "Determines whether the column containing the headers of the sap.m.PlanningCalendarRow PlanningCalendarRows\nis displayed."
            }, {
                "name": "noDataText",
                "documentation": "Defines the text that is displayed when no sap.m.PlanningCalendarRow PlanningCalendarRows are assigned."
            }, {
                "name": "groupAppointmentsMode",
                "documentation": "Defines the mode in which the overlapping appointments are displayed. Note: This property takes effect, only if the intervalType of the current calendar view\nis set to sap.ui.unified.CalendarIntervalType.Month. On phone devices this property is ignored,\nand the default value is applied."
            }, {
                "name": "appointmentsReducedHeight",
                "documentation": "Determines whether the appointments that have only title without text are rendered with smaller height. Note: On phone devices this property is ignored, appointments are always rendered in full height\nto facilitate touching."
            }, {
                "name": "appointmentsVisualization",
                "documentation": "Determines how the appointments are visualized depending on the used theme."
            }, {
                "name": "minDate",
                "documentation": "Defines the minimum date that can be displayed and selected in the PlanningCalendar.\nThis must be a JavaScript date object. Note: If the minDate is set to be after the current maxDate,\nthe maxDate is set to the last date of the month in which the minDate belongs."
            }, {
                "name": "maxDate",
                "documentation": "Defines the maximum date that can be displayed and selected in the PlanningCalendar.\nThis must be a JavaScript date object. Note: If the maxDate is set to be before the current minDate,\nthe minDate is set to the first date of the month in which the maxDate belongs."
            }, {
                "name": "showDayNamesLine",
                "documentation": "Determines whether the day names are displayed in a separate line or inside the single days."
            }, {
                "name": "showWeekNumbers",
                "documentation": "Determines if the week numbers are displayed."
            }, {
                "name": "builtInViews",
                "documentation": "Defines the list of predefined views as an array.\nThe views should be specified by their keys. The default predefined views and their keys are available at sap.m.PlanningCalendarBuiltInView. Note: If set, all specified views will be displayed along\nwith any custom views (if available). If not set and no custom\nviews are available, all default views will be displayed.\nIf not set and there are any custom views available, only the\ncustom views will be displayed."
            }, {
                "name": "stickyHeader",
                "documentation": "Determines whether the header area will remain visible (fixed on top) when the rest of the content is scrolled out of view. The sticky header behavior is automatically disabled on phones in landscape mode for better visibility of the content. Note: There is limited browser support, hence the API is in experimental state.\nBrowsers that currently support this feature are Chrome (desktop and mobile), Safari (desktop and mobile) and Edge 41. There are also some known issues with respect to the scrolling behavior and focus handling. A few are given below: When the PlanningCalendar is placed in certain layout containers, for example the GridLayout control,\nthe column headers do not fix at the top of the viewport. Similar behavior is also observed with the ObjectPage control. This API should not be used in production environment."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the Appointments. Note: The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "appointmentSelect",
                "documentation": "Fired if an appointment is selected."
            }, {
                "name": "intervalSelect",
                "documentation": "Fired if an interval was selected in the calendar header or in the row."
            }, {
                "name": "rowSelectionChange",
                "documentation": "Fires when row selection is changed."
            }, {
                "name": "startDateChange",
                "documentation": "startDate was changed while navigating in the PlanningCalendar.\nThe new value can be obtained using the sap.m.PlanningCalendar() method."
            }, {
                "name": "viewChange",
                "documentation": "viewKey was changed by user interaction."
            }, {
                "name": "rowHeaderClick",
                "documentation": "Fires when a row header is clicked."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Displays rows with appointments for different entities (such as persons or teams) for the selected time interval. Overview You can use the PlanningCalendar to represent a calendar containing multiple rows with\nappointments, where each row represents a different person. You can configure different time-interval views that the user can switch between, such as hours or days, and even\na whole week/month. The available navigation allows the user to select a specific interval using a picker, or\nmove to the previous/next interval using arrows. Note: The PlanningCalendar uses parts of the sap.ui.unified library.\nThis library will be loaded after the PlanningCalendar, if it wasn't loaded first.\nThis could lead to a waiting time when a PlanningCalendar is used for the first time.\nTo prevent this, apps that use the PlanningCalendar should also load the\nsap.ui.unified library. Usage The PlanningCalendar has the following structure from top to bottom: \nA toolbar where you can add your own buttons or other controls using the toolbarContent aggregation.\nA header containing a drop-down menu for selecting the sap.m.PlanningCalendarView PlanningCalendarViews,\nand navigation for moving through the intervals using arrows or selecting a specific interval with a picker.\nCustom views can be configured using the views aggregation. If not configured, the following set of default\nbuilt-in views is available - Hours, Days, 1 Week, 1 Month, and Months. Setting a custom view(s) replaces the built-in ones.\nThe rows of the PlanningCalendar that contain the assigned appointments.\nThey can be configured with the rows aggregation, which is of type sap.m.PlanningCalendarRow PlanningCalendarRow.\n Since 1.48 the empty space in the cell that is below an appointment can be removed by adding\nthe sapUiCalendarAppFitVertically CSS class to the PlanningCalendar.\nPlease note that it should be used only for a PlanningCalendar with one appointment per day\nfor a row that doesn't have interval headers set. Since 1.44 alternating row colors can be suppressed by adding the sapMPlanCalSuppressAlternatingRowColors\nCSS class to the PlanningCalendar. Responsive behavior You can define the number of displayed intervals based on the size of the PlanningCalendar using the sap.m.PlanningCalendarView PlanningCalendarView's properties."
        },
        "PlanningCalendarLegend": {
            "attributes": [{
                "name": "itemsHeader",
                "documentation": "Defines the text displayed in the header of the items list. It is commonly related to the calendar days."
            }, {
                "name": "appointmentItemsHeader",
                "documentation": "Defines the text displayed in the header of the appointment items list. It is commonly related to the calendar appointments."
            }, {
                "name": "standardItems",
                "documentation": "Determines the standard items related to the calendar days, such as, today, selected, working and non-working.\nValues must be one of sap.ui.unified.StandardCalendarLegendItem.\nNote: for versions 1.50 and 1.52, this property was defined in the the subclass sap.m.PlanningCalendarLegend"
            }, {
                "name": "columnWidth",
                "documentation": "Defines the width of the created columns in which the items are arranged."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.unified.CalendarLegend",
            "documentation": "A legend for the sap.m.PlanningCalendar that displays the special dates and appointments in colors with their corresponding description.\nThe PlanningCalendarLegend extends sap.ui.unified.CalendarLegend and\noverwrites the default value for property columnWidth to auto"
        },
        "PlanningCalendarRow": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the title of the header (for example, the name of the person)."
            }, {
                "name": "text",
                "documentation": "Defines the text of the header (for example, the department of the person)."
            }, {
                "name": "icon",
                "documentation": "Specifies the URI of an image or an icon registered in sap.ui.core.IconPool."
            }, {
                "name": "nonWorkingDays",
                "documentation": "Determines whether the provided weekdays are displayed as non-working days.\nValid values inside the array are from 0 to 6 (other values are ignored).\nIf not set, the weekend defined in the locale settings is displayed as non-working days. Note: The non-working days are visualized if the intervalType\nproperty of the sap.m.PlanningCalendarView is set to Day."
            }, {
                "name": "nonWorkingHours",
                "documentation": "Determines whether the provided hours are displayed as non-working hours.\nValid values inside the array are from 0 to 23 (other values are ignored). Note: The non-working hours are visualized if intervalType\nproperty of the sap.m.PlanningCalendarView is set to Hour."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the PlanningCalendarRow. Note: Binding the selected property in single selection modes may\ncause unwanted results if you have more than one selected row in your binding."
            }, {
                "name": "key",
                "documentation": "Defines the identifier of the row."
            }, {
                "name": "enableAppointmentsDragAndDrop",
                "documentation": "Determines whether the appointments in the row are draggable. The drag and drop interaction is visualized by a placeholder highlighting the area where the\nappointment can be dropped by the user. Specifics based on the intervals (hours, days or months) displayed in the PlanningCalendar views: Hours:\nFor views where the displayed intervals are hours, the placeholder snaps on every interval\nof 30 minutes. After the appointment is dropped, the appointmentDrop event is fired, containing\nthe new start and end JavaScript date objects.\nFor example, an appointment with start date \"Nov 13 2017 12:17:00\" and end date \"Nov 13 2017 12:45:30\"\nlasts for 27 minutes and 30 seconds. After dragging and dropping to a new time, the possible new\nstart date has time that is either \"hh:00:00\" or \"hh:30:00\" because of the placeholder that can\nsnap on every 30 minutes. The new end date is calculated to be 27 minutes and 30 seconds later\nand would be either \"hh:27:30\" or \"hh:57:30\". Days:\nFor views where intervals are days, the placeholder highlights the whole day and after the\nappointment is dropped the appointmentDrop event is fired. The event contains the new start and\nend JavaScript date objects with changed date but the original time (hh:mm:ss) is preserved. Months:\nFor views where intervals are months, the placeholder highlights the whole month and after the\nappointment is dropped the appointmentDrop event is fired. The event contains the new start and\nend JavaScript date objects with changed month but the original date and time is preserved. Notes:\n\nIn \"One month\" view, the appointments are not draggable on small screen (as there they are\ndisplayed as a list below the dates). Group appointments are also not draggable\nAppointments can be dragged only within their original PlanningCalendarRow\n"
            }, {
                "name": "appointmentDrop",
                "documentation": "Fired if an appointment is dropped."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Row in the sap.m.PlanningCalendar. This element holds the data of one row in the sap.m.PlanningCalendar. Once the header information (for example, person information)\nis assigned, the appointments are assigned."
        },
        "PlanningCalendarView": {
            "attributes": [{
                "name": "key",
                "documentation": "Defines the key of the view. This must be set to identify the used view in the sap.m.PlanningCalendar."
            }, {
                "name": "intervalType",
                "documentation": "Determines the type of the intervals of the row. Note: Not all predefined interval types are supported for this property. For more information, see the\ndescriptions in the sap.ui.unified.CalendarIntervalType CalendarIntervalType enumeration."
            }, {
                "name": "description",
                "documentation": "Defines the description of the PlanningCalendarView."
            }, {
                "name": "intervalsS",
                "documentation": "Defines the number of intervals that are displayed for a sap.m.PlanningCalendar that is less than 600 pixels wide."
            }, {
                "name": "intervalsM",
                "documentation": "Defines the number of intervals that are displayed for a sap.m.PlanningCalendar that is between 600 and 1024 pixels wide."
            }, {
                "name": "intervalsL",
                "documentation": "Defines the number of intervals that are displayed for a sap.m.PlanningCalendar that is more than 1024 pixels wide."
            }, {
                "name": "showSubIntervals",
                "documentation": "If set, subintervals are displayed as lines in the rows. \nQuarter hour subintervals for interval type Hour.\nHour subintervals for interval types Day, Week and OneMonth.\nDay subintervals for interval type Month.\n"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "View of the sap.m.PlanningCalendar. The PlanningCalendarView defines the type of the intervals (hours, days, months)\nand how many intervals are displayed."
        },
        "Popover": {
            "attributes": [{
                "name": "placement",
                "documentation": "This is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferredLeft, sap.m.PlacementType.HorizontalPreferredRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferredTop, sap.m.PlacementType.VerticalPreferredBottom, sap.m.PlacementType.Auto. The default value is sap.m.PlacementType.Right. Setting this property while popover is open won't cause any rerendering of the popover, but it will take effect when it's opened again."
            }, {
                "name": "showHeader",
                "documentation": "If a header should be shown at the top of the popover."
            }, {
                "name": "title",
                "documentation": "Title text appears in the header. This property will be ignored when showHeader is set to false."
            }, {
                "name": "modal",
                "documentation": "If the popover will not be closed when tapping outside the popover. It also blocks any interaction with the background. The default value is false."
            }, {
                "name": "offsetX",
                "documentation": "The offset for the popover placement in the x axis. It's with unit pixel."
            }, {
                "name": "offsetY",
                "documentation": "The offset for the popover placement in the y axis. It's with unit pixel."
            }, {
                "name": "showArrow",
                "documentation": "Whether Popover arrow should be visible"
            }, {
                "name": "contentWidth",
                "documentation": "Set the width of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control."
            }, {
                "name": "contentMinWidth",
                "documentation": "Sets the minimum width of the content area inside popover."
            }, {
                "name": "contentHeight",
                "documentation": "Set the height of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control."
            }, {
                "name": "enableScrolling",
                "documentation": "This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling."
            }, {
                "name": "verticalScrolling",
                "documentation": "This property indicates if user can scroll vertically inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly.\nPopover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property."
            }, {
                "name": "horizontalScrolling",
                "documentation": "This property indicates if user can scroll horizontally inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly.\nPopover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property."
            }, {
                "name": "bounce",
                "documentation": "Whether bouncing is enabled."
            }, {
                "name": "resizable",
                "documentation": "Whether resize option is enabled."
            }, {
                "name": "leftButton",
                "documentation": "LeftButton is shown at the left edge of the bar in iOS, and at the right side of the bar for the other platforms. Please set this to null if you want to remove the left button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored."
            }, {
                "name": "rightButton",
                "documentation": "RightButton is always shown at the right edge of the bar. Please set this to null if you want to remove the right button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored."
            }, {
                "name": "initialFocus",
                "documentation": "Focus is set to the popover in the sequence of leftButton and rightButton when available. But if some other control neends to get the focus other than one of those two buttons, set the initialFocus with the control which should be focused on."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "afterOpen",
                "documentation": "This event will be fired after the popover is opened."
            }, {
                "name": "afterClose",
                "documentation": "This event will be fired after the popover is closed."
            }, {
                "name": "beforeOpen",
                "documentation": "This event will be fired before the popover is opened."
            }, {
                "name": "beforeClose",
                "documentation": "This event will be fired before the popover is closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Displays additional information for an object in a compact way. Overview\nThe popover displays additional information for an object in a compact way and without leaving the page. The popover can contain various UI elements such as fields, tables, images, and charts. It can also include actions in the footer.\nStructure\nThe popover has three main areas:\n\nHeader (optional) - with a back button and a title\nContent - holds all the controls\nFooter (optional) - with additional action buttons\n\nGuidelines\n\nDo not overlap popovers.\nYou can determine the sap.m.PlacementType placement of the popover relative to the control that opens it.\nEnsure that the content has a basic design and shows only the most important information.\n\nUsage\nWhen to use:\n\nYou need to define your own structure of controls within the popover.\n\nWhen not to use:\n\nThe sap.m.QuickView QuickView is more appropriate for your use case.\n\nResponsive Behavior\nThe popover is closed when the user clicks or taps outside the popover or selects an action within the popover. You can prevent this with the modal property.\nThe popover can be resized when the resizable property is enabled. \n sap.m.Popover is not responsive on mobile devices - it will always be rendered as a popover and you have to take care of its size and position.\n sap.m.ResponsivePopover is adaptive and responsive. It renders as a dialog with a close button in the header on phones, and as a popover on tablets.\n"
        },
        "ProgressIndicator": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and cannot be focused."
            }, {
                "name": "state",
                "documentation": "Specifies the state of the bar. Enumeration sap.ui.core.ValueState provides Error (red), Warning (yellow), Success (green), None (blue) (default value)."
            }, {
                "name": "displayValue",
                "documentation": "Specifies the text value to be displayed in the bar."
            }, {
                "name": "percentValue",
                "documentation": "Specifies the numerical value in percent for the length of the progress bar. Note: If a value greater than 100 is provided, the percentValue is set to 100.\nIn other cases of invalid value, percentValue is set to its default of 0."
            }, {
                "name": "showValue",
                "documentation": "Indicates whether the displayValue should be shown in the ProgressIndicator."
            }, {
                "name": "width",
                "documentation": "Specifies the width of the control."
            }, {
                "name": "height",
                "documentation": "Specifies the height of the control. The default value depends on the theme. Suggested size for normal use is 2.5rem (40px). Suggested size for small size (like for use in ObjectHeader) is 1.375rem (22px)."
            }, {
                "name": "textDirection",
                "documentation": "Specifies the element's text directionality with enumerated options (RTL or LTR). By default, the control inherits text direction from the DOM."
            }, {
                "name": "displayOnly",
                "documentation": "Determines whether the control is in display-only state where the control has different visualization and cannot be focused."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Shows the progress of a process in a graphical way. To indicate the progress, the inside of the ProgressIndicator is filled with a color.\nAdditionally, a user-defined string can be displayed on the ProgressIndicator."
        },
        "PullToRefresh": {
            "attributes": [{
                "name": "description",
                "documentation": "Optional description. May be used to inform a user, for example, when the list has been updated last time."
            }, {
                "name": "showIcon",
                "documentation": "Set to true to display an icon/logo. Icon must be set either in the customIcon property or in the CSS theme for the PullToRefresh control."
            }, {
                "name": "customIcon",
                "documentation": "Provide a URI to a custom icon image to replace the SAP logo. Large images are scaled down to max 50px height."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If bandwidth is the key for the application, set this value to false."
            }, {
                "name": "refresh",
                "documentation": "Event indicates that the user has requested new data"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "PullToRefresh control. Put it as the first control in contents of a scroll container or a scrollable page. Do not place it into a page with disabled scrolling.\nOn touch devices it gets hidden by default and when the user pulls down the page far enough, it gets visible and triggers the \"refresh\" event.\nIn non-touch browsers where scrollbars are used for scrolling, it is always visible and triggers the \"refresh\" event when clicked."
        },
        "QuickView": {
            "attributes": [{
                "name": "placement",
                "documentation": "This property is reused from sap.m.Popover and only takes effect when running on desktop or tablet. Please refer the documentation of the placement property of sap.m.Popover."
            }, {
                "name": "width",
                "documentation": "The width of the QuickView. The property takes effect only when running on desktop or tablet."
            }, {
                "name": "afterOpen",
                "documentation": "This event fires after the QuickView is opened."
            }, {
                "name": "afterClose",
                "documentation": "This event fires after the QuickView is closed."
            }, {
                "name": "beforeOpen",
                "documentation": "This event fires before the QuickView is opened."
            }, {
                "name": "beforeClose",
                "documentation": "This event fires before the QuickView is closed."
            }, {
                "name": "navigate",
                "documentation": "The event is fired when navigation between two pages has been triggered.\nThe transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(),\nwhich means that there will be no navigation."
            }, {
                "name": "afterNavigate",
                "documentation": "The event is fired when navigation between two pages has completed.\nIn case of animated transitions this event is fired with some delay\nafter the \"navigate\" event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.QuickViewBase",
            "documentation": "A responsive popover that displays information on an object in a business-card format.\nOverview\nThe quick view is used to show business information on either a person or an entity (e.g. a company). It uses a set of pre-defined controls.\nObjects can be linked together and you can navigate between several objects. An unlimited number of objects can be linked.\nStructure\nEach card is represented by a sap.m.QuickViewPage which holds all the information (icon, title, header, description) for the object.\nA single quick view can hold multiple objects, each showing information on a single entity.\nUsage\nWhen to use\n\nYou want to display a concise overview of an object (an employee or a company).\nInformation on the object can be split into concrete groups.\n\nWhen not to use\n\nYou want to display complex information about an object.\n\nResponsive Behavior\nThe quick view is displayed in a sap.m.Popover popover on desktop and a full-screen sap.m.Dialog dialog on mobile devices."
        },
        "QuickViewBase": {
            "attributes": [{
                "name": "navigate",
                "documentation": "The event is fired when navigation between two pages has been triggered.\nThe transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(),\nwhich means that there will be no navigation."
            }, {
                "name": "afterNavigate",
                "documentation": "The event is fired when navigation between two pages has completed.\nIn case of animated transitions this event is fired with some delay\nafter the \"navigate\" event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "QuickViewBase class provides base functionality for QuickView and QuickViewCard.\nDo not use it directly."
        },
        "QuickViewCard": {
            "attributes": [{
                "name": "showVerticalScrollBar",
                "documentation": "Determines whether the browser displays the vertical scroll bar or simply cuts the content of the QuickViewCard."
            }, {
                "name": "navigate",
                "documentation": "The event is fired when navigation between two pages has been triggered.\nThe transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(),\nwhich means that there will be no navigation."
            }, {
                "name": "afterNavigate",
                "documentation": "The event is fired when navigation between two pages has completed.\nIn case of animated transitions this event is fired with some delay\nafter the \"navigate\" event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.QuickViewBase",
            "documentation": "The QuickViewCard control displays information of an object in a business-card format.\nIt also allows this object to be linked to another object using one of the links.\nClicking that link updates the information with the data of the linked object.\nUnlimited number of objects can be linked."
        },
        "QuickViewGroup": {
            "attributes": [{
                "name": "visible",
                "documentation": "Determines whether the group is visible on the screen."
            }, {
                "name": "heading",
                "documentation": "The title of the group"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "QuickViewGroup consists of a title (optional) and an entity of group elements."
        },
        "QuickViewGroupElement": {
            "attributes": [{
                "name": "visible",
                "documentation": "Determines whether the element should be visible on the screen."
            }, {
                "name": "label",
                "documentation": "Specifies the text displayed below the associated label."
            }, {
                "name": "value",
                "documentation": "Specifies the text of the control that associates with the label."
            }, {
                "name": "url",
                "documentation": "Specifies the address of the QuickViewGroupElement link. Works only with QuickViewGroupElement of type link."
            }, {
                "name": "target",
                "documentation": "Specifies the target of the link - it works like the target property of the HTML  tag. Works only with QuickViewGroupElement of type link."
            }, {
                "name": "type",
                "documentation": "Specifies the type of the displayed information - phone number, mobile number, e-mail, link, text or a link to another QuickViewPage. Default value is 'text'."
            }, {
                "name": "pageLinkId",
                "documentation": "Specifies the ID of the QuickViewPage, which is opened from the link in the QuickViewGroupElement.\nWorks only with QuickViewGroupElement of type pageLink."
            }, {
                "name": "emailSubject",
                "documentation": "The subject of the email.\nWorks only with QuickViewGroupElement of type email."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "QuickViewGroupElement is a combination of one label and another control (Link or Text) associated to this label."
        },
        "QuickViewPage": {
            "attributes": [{
                "name": "pageId",
                "documentation": "Page id"
            }, {
                "name": "header",
                "documentation": "Specifies the text displayed in the header of the control."
            }, {
                "name": "title",
                "documentation": "Specifies the text displayed in the header of the content section of the control."
            }, {
                "name": "titleUrl",
                "documentation": "Specifies the URL which opens when the title or the thumbnail is clicked."
            }, {
                "name": "crossAppNavCallback",
                "documentation": "Specifies the application which provides target and param configuration for cross-application navigation from the 'page header'."
            }, {
                "name": "description",
                "documentation": "Specifies the text displayed under the header of the content section"
            }, {
                "name": "icon",
                "documentation": "Specifies the URL of the icon displayed under the header of the page"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "QuickViewPage consists of a page header, an object icon or image,\nan object name with short description, and an object information divided in groups.\nThe control uses the sap.m.SimpleForm control to display information."
        },
        "RadioButton": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Specifies if the radio button is disabled."
            }, {
                "name": "selected",
                "documentation": "Specifies the select state of the radio button"
            }, {
                "name": "groupName",
                "documentation": "Name of the radio button group the current radio button belongs to. You can define a new name for the group.\nIf no new name is specified, this radio button belongs to the sapMRbDefaultGroup per default. Default behavior of a radio button in a group is that when one of the radio buttons in a group is selected, all others are unselected."
            }, {
                "name": "text",
                "documentation": "Specifies the text displayed next to the RadioButton"
            }, {
                "name": "textDirection",
                "documentation": "Options for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container."
            }, {
                "name": "width",
                "documentation": "Width of the RadioButton or it's label depending on the useEntireWidth property.\nBy Default width is set only for the label."
            }, {
                "name": "useEntireWidth",
                "documentation": "Indicates if the given width will be applied for the whole RadioButton or only it's label.\nBy Default width is set only for the label."
            }, {
                "name": "activeHandling",
                "documentation": "This is a flag to switch on activeHandling. When it is switched off,\nthere will not be visual changes on active state. Default value is 'true'"
            }, {
                "name": "editable",
                "documentation": "Specifies whether the user can select the radio button."
            }, {
                "name": "valueState",
                "documentation": "Enumeration sap.ui.core.ValueState provides state values Error, Success, Warning, None"
            }, {
                "name": "textAlign",
                "documentation": "Specifies the alignment of the radio button. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\"."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Event is triggered when the user makes a change on the radio button (selecting or unselecting it)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "RadioButton is a control similar to a sap.m.CheckBox checkbox, but it allows you to choose only one of the predefined set of options.\nMultiple radio buttons have to belong to the same group (have the same value for groupName) in order to be mutually exclusive.\nA wrapper control sap.m.RadioButtonGroup RadioButtonGroup can be used instead of individual radio buttons.\nStructure\n\nRadio buttons can have a value state like Error or Warning.\nRadio buttons can be arranged vertically by setting the column to a number higher than 1.\nRadio button options need to have a sap.m.Label label.\n\nUsage\nWhen to use:\n\nYou quickly need to choose between at least two alternatives.\nYou need to place other controls between the radio button options.\n\nWhen not to use:\n\nYou want to select multiple values for the same option. Use sap.m.CheckBox checkboxes instead.\nWhen the default value is recommended for most users in most situations. Use a sap.m.Select drop-down instead as is saves space by not showing all the alternatives.\nYou want have more than 8 options. Use a sap.m.Select drop-down instead.\nWhen the options are mutually exclusive e.g. ON/OFF. Use a sap.m.Switch switch instead.\nAvoid using horizontally aligned radio buttons as they will be cut off on phones.\n Note: The order in which the RadioButtons will be selected one after another is determined upon instantiation of the control.\nThis order is consistent with the ARIA attributes for position, which the same button will receive when added to specific group. Example: If three buttons are created (button1, button2, button3) in consecutive order, initially they will have the same positions\nand TAB order. However if after that button1 and button3 are moved to a new group and then button2 is added to the\nsame group, their TAB order and position in this group will be button1, button3, button2."
        },
        "RadioButtonGroup": {
            "attributes": [{
                "name": "width",
                "documentation": "Specifies the width of the RadioButtonGroup."
            }, {
                "name": "columns",
                "documentation": "Specifies the maximum number of radio buttons displayed in one line."
            }, {
                "name": "editable",
                "documentation": "Specifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally, the control is no longer interactive, but can receive focus."
            }, {
                "name": "valueState",
                "documentation": "The value state to be displayed for the radio button. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to \"true\"."
            }, {
                "name": "selectedIndex",
                "documentation": "Determines the index of the selected/checked RadioButton. Default is 0.\nIf no radio button is selected, the selectedIndex property will return -1."
            }, {
                "name": "enabled",
                "documentation": "Switches the enabled state of the control. All Radio Buttons inside a disabled group are disabled. Default value is \"true\"."
            }, {
                "name": "textDirection",
                "documentation": "This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when selection is changed by user interaction."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control is used as a wrapper for a group of sap.m.RadioButton controls, which can be used as a single UI element.\nYou can select only one of the grouped radio buttons at a time.\nStructure\n\nThe radio buttons are stored in the buttons aggregation.\nBy setting the columns property, you can create layouts like a 'matrix', 'vertical' or 'horizontal'.\nNote:For proper display on all devices, we recommend creating radio button groups with only one row or only one column.\n\nUsage\nWhen to use:\n\nYou want to attach a single event handler on a group of buttons, rather than on each individual button.\n\nWhen not to use:\n\nDo not put two radio button groups right next to each other as it is difficult to determine which buttons belong to which group.\n"
        },
        "RangeSlider": {
            "attributes": [{
                "name": "value2",
                "documentation": "Current second value of the slider. (Position of the second handle.) Note: If the value is not in the valid range (between min and max) it will be changed to be in the valid range.\nIf it is smaller than value it will be set to the same value."
            }, {
                "name": "range",
                "documentation": "Determines the currently selected range on the slider. If the value is lower/higher than the allowed minimum/maximum, a warning message will be output to the console."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can change the value."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code for the slider (e.g. for HTML forms that send data to the server via submit)."
            }, {
                "name": "min",
                "documentation": "The minimum value."
            }, {
                "name": "max",
                "documentation": "The maximum value."
            }, {
                "name": "step",
                "documentation": "Define the amount of units to change the slider when adjusting by drag and drop. Defines the size of the slider's selection intervals. (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10). The step must be positive, if a negative number is provided, the default value will be used instead.\nIf the width of the slider converted to pixels is less than the range (max - min), the value will be rounded to multiples of the step size."
            }, {
                "name": "progress",
                "documentation": "Indicate whether a progress bar indicator is shown."
            }, {
                "name": "value",
                "documentation": "Define the value. If the value is lower/higher than the allowed minimum/maximum, the value of the properties min/max are used instead."
            }, {
                "name": "showHandleTooltip",
                "documentation": "Indicate whether the handle tooltip is shown."
            }, {
                "name": "showAdvancedTooltip",
                "documentation": "Indicate whether the handle's advanced tooltip is shown. Note: Setting this option to true\nwill ignore the value set in showHandleTooltips. This will cause only the advanced tooltip to be shown."
            }, {
                "name": "inputsAsTooltips",
                "documentation": "Indicates whether input fields should be used as tooltips for the handles. Note: Setting this option to true\nwill only work if showAdvancedTooltips is set to true."
            }, {
                "name": "enableTickmarks",
                "documentation": "Enables tickmarks visualisation"
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "This event is triggered after the end user finishes interacting, if there is any change."
            }, {
                "name": "liveChange",
                "documentation": "This event is triggered during the dragging period, each time the slider value changes."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Slider",
            "documentation": "Represents a numerical interval and two handles to select a sub-range within it.\nOverview\nThe purpose of the control is to enable visual selection of sub-ranges within a given interval.\nNotes:\n\nThe RangeSlider extends the functionality of the sap.m.Slider Slider\nThe right and left handle can be moved individually and their positions could therefore switch.\nThe entire range can be moved along the interval.\nThe right and left handle can select the same value\n Usage\nThe most common usecase is to select and move sub-ranges on a continuous numerical scale. Responsive Behavior\nYou can move the currently selected range by clicking on it and dragging it along the interval."
        },
        "RatingIndicator": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Value \"true\" is required to let the user rate with this control. It is recommended to set this parameter to \"false\" for the \"Small\" size which is meant for indicating a value only"
            }, {
                "name": "maxValue",
                "documentation": "The number of displayed rating symbols"
            }, {
                "name": "value",
                "documentation": "The indicated value of the rating"
            }, {
                "name": "iconSize",
                "documentation": "The Size of the image or icon to be displayed. The default value depends on the theme. Please be sure that the size is corresponding to a full pixel value as some browsers don't support subpixel calculations. Recommended size is 1.375rem (22px) for normal, 1rem (16px) for small, and 2rem (32px) for large icons correspondingly."
            }, {
                "name": "iconSelected",
                "documentation": "The URI to the icon font icon or image that will be displayed for selected rating symbols. A star icon will be used if the property is not set"
            }, {
                "name": "iconUnselected",
                "documentation": "The URI to the icon font icon or image that will be displayed for all unselected rating symbols. A star icon will be used if the property is not set"
            }, {
                "name": "iconHovered",
                "documentation": "The URI to the icon font icon or image that will be displayed for hovered rating symbols. A star icon will be used if the property is not set"
            }, {
                "name": "visualMode",
                "documentation": "Defines how float values are visualized: Full, Half (see enumeration RatingIndicatorVisualMode)"
            }, {
                "name": "displayOnly",
                "documentation": "The RatingIndicator in displayOnly mode is not interactive, not editable, not focusable, and not in the tab chain. This setting is used for forms in review mode."
            }, {
                "name": "editable",
                "documentation": "Defines whether the user is allowed to edit the RatingIndicator. If editable is false the control is focusable, and in the tab chain but not interactive."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "The event is fired when the user has done a rating."
            }, {
                "name": "liveChange",
                "documentation": "This event is triggered during the dragging period, each time the rating value changes."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The rating indicator is used to display a specific number of icons that are used to rate an item. Additionally it is also used to display the average over all ratings.\nStructure\n\nThe rating indicator can use different icons (default: stars) which are defined as URIs in the properties iconHovered, iconSelected and iconUnselected.\nThe rating indicator can display half-values ( sap.m.RatingIndicatorVisualMode visualMode = Half) when it is used to show the average. Half-values can't be selected by the user.\n\nUsage\nThe preferred number of icons is between 5 (default) and 7.\nResponsive Behavior\nYou can display icons in 4 recommended sizes:\n\nlarge - 32px\nmedium(default) - 22px\nsmall - 16px\nXS - 12px\n\nNote: If no icon size is set, the rating indicator will set it according to the content density."
        },
        "ResponsivePopover": {
            "attributes": [{
                "name": "placement",
                "documentation": "This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover."
            }, {
                "name": "showHeader",
                "documentation": "This property is supported by both variants. Please see the documentation on sap.m.Popover and sap.m.Dialog"
            }, {
                "name": "title",
                "documentation": "This property is supported by both variants. Please see the documentation on sap.m.Popover and sap.m.Dialog"
            }, {
                "name": "icon",
                "documentation": "This property only takes effect on phone. Please see the documentation sap.m.Dialog."
            }, {
                "name": "modal",
                "documentation": "This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover."
            }, {
                "name": "offsetX",
                "documentation": "This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover."
            }, {
                "name": "offsetY",
                "documentation": "This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover."
            }, {
                "name": "showArrow",
                "documentation": "This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover."
            }, {
                "name": "contentWidth",
                "documentation": "This property is supported by both variants. Please see the documentation on sap.m.Popover and sap.m.Dialog"
            }, {
                "name": "contentHeight",
                "documentation": "This property is supported by both variants. Please see the documentation on sap.m.Popover and sap.m.Dialog"
            }, {
                "name": "horizontalScrolling",
                "documentation": "This property is supported by both variants. Please see the documentation on sap.m.Popover and sap.m.Dialog"
            }, {
                "name": "verticalScrolling",
                "documentation": "This property is supported by both variants. Please see the documentation on sap.m.Popover and sap.m.Dialog"
            }, {
                "name": "showCloseButton",
                "documentation": "Determines if a close button should be inserted into the dialog's header dynamically to close the dialog. This property only takes effect on phone.\nNote: The close button could be placed only in a sap.m.Bar if a sap.m.Toolbar is passed as a header - the property will not take effect."
            }, {
                "name": "resizable",
                "documentation": "Whether resize option is enabled."
            }, {
                "name": "initialFocus",
                "documentation": "InitialFocus is supported by both variants. Please see the documentation on sap.m.Popover and sap.m.Dialog"
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "beforeOpen",
                "documentation": "Event is fired before popover or dialog is open."
            }, {
                "name": "afterOpen",
                "documentation": "Event is fired after popover or dialog is open."
            }, {
                "name": "beforeClose",
                "documentation": "Event is fired before popover or dialog is closed."
            }, {
                "name": "afterClose",
                "documentation": "Event is fired after popover or dialog is closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Overview\nThe responsive popover acts as a sap.m.Popover popover on desktop and tablet,\nwhile on phone it acts as a sap.m.Dialog dialog with stretch set to true. Note: It is recommended that ResponsivePopover is used in fragments otherwise there might\nbe some implications on the user experience. For example, on desktop, open or close functions\nof the Popover might not be called. Usage\nWhen you want to make sure that all content is visible on any device."
        },
        "ResponsiveScale": {
            "attributes": [{
                "name": "tickmarksBetweenLabels",
                "documentation": "Put a label on every N-th tickmark."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Overview A sap.m.Slider element represents a scale with tickmarks and labels.\nThe purpose of the element is to decouple the scale logic from other controls i.e. Slider / RangeSlider The most important properties of the ResponsiveScale are:\n\n tickmarksBetweenLabels - Puts a label on every N-th tickmark.\n"
        },
        "ScrollContainer": {
            "attributes": [{
                "name": "width",
                "documentation": "The width of the ScrollContainer.\nIf not set, it consumes the complete available width, behaving like normal HTML block elements. If only vertical scrolling is enabled, make sure the content always fits or wraps."
            }, {
                "name": "height",
                "documentation": "The height of the ScrollContainer.\nBy default the height equals the content height. If only horizontal scrolling is used, do not set the height or make sure the height is always larger than the height of the content. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined."
            }, {
                "name": "horizontal",
                "documentation": "Whether horizontal scrolling should be possible."
            }, {
                "name": "vertical",
                "documentation": "Whether vertical scrolling should be possible. Note that this is off by default because typically a Page is used as fullscreen element which can handle vertical scrolling. If this is not the case and vertical scrolling is required, this flag needs to be set to \"true\".\nImportant: it is not supported to have nested controls that both enable scrolling into the same dimension."
            }, {
                "name": "focusable",
                "documentation": "Whether the scroll container can be focused. Note that it should be set to \"true\" when there are no focusable elements inside or when keyboard interaction requires an additional tab stop on the container."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The ScrollContainer is a control that can display arbitrary content within a limited screen area and provides scrolling to make all content accessible.\nWhen not to use\nDo not nest scrolling areas that scroll in the same direction (e.g. a ScrollContainer that scrolls vertically inside a Page control with scrolling enabled)."
        },
        "SearchField": {
            "attributes": [{
                "name": "value",
                "documentation": "Input Value."
            }, {
                "name": "width",
                "documentation": "Defines the CSS width of the input. If not set, width is 100%."
            }, {
                "name": "enabled",
                "documentation": "Boolean property to enable the control (default is true)."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "placeholder",
                "documentation": "Text shown when no value available. Default placeholder text is the word \"Search\" in the current local language (if supported) or in English."
            }, {
                "name": "showMagnifier",
                "documentation": "Set to false to hide the magnifier icon."
            }, {
                "name": "showRefreshButton",
                "documentation": "Set to true to display a refresh button in place of the search icon. By pressing the refresh button or F5 key on keyboard, the user can reload the results list without changing the search string."
            }, {
                "name": "refreshButtonTooltip",
                "documentation": "Tooltip text of the refresh button. If it is not set, the tooltip of the SearchField (if any) is displayed. Tooltips are not displayed on touch devices."
            }, {
                "name": "showSearchButton",
                "documentation": "Set to true to show the search button with the magnifier icon.\nIf false, both the search and refresh buttons are not displayed even if the \"showRefreshButton\" property is true."
            }, {
                "name": "enableSuggestions",
                "documentation": "If true, a suggest event is fired when user types in the input and when the input is focused.\nOn a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty."
            }, {
                "name": "selectOnFocus",
                "documentation": "Normally, search text is selected for copy when the SearchField is focused by keyboard navigation. If an application re-renders the SearchField during the liveChange event, set this property to false to disable text selection by focus."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "search",
                "documentation": "Event which is fired when the user triggers a search."
            }, {
                "name": "liveChange",
                "documentation": "This event is fired when the value of the search field is changed by a user - e.g. at each key press. Do not invalidate or re-render a focused search field, especially during the liveChange event."
            }, {
                "name": "suggest",
                "documentation": "This event is fired when the search field is initially focused or its value is changed by the user.\nThis event means that suggestion data should be updated, in case if suggestions are used.\nUse the value parameter to create new suggestions for it."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "An input field to search for a specific item.\nOverview\nA search field is needed when the user needs to find specific information in large amounts of data.\nThe search field is also the control of choice for filtering down\na given amount of information.\nStructure\nThe search input field can be used in two ways:\n\nManual search - The search is triggered after the user presses the search button.\nManual search uses a “starts with” approach.\nLive search (search-as-you-type) - The search is triggered after each button press.\nA suggestion list is shown below the search field. Live search uses a “contains” approach.\n\nUsage\nWhen to use:\n\n Use live search whenever possible. \n Use a manual search only if the amount of data is too large and if your app would otherwise run\ninto performance issues. \n\nResponsive Behavior\nOn mobile devices, there is no refresh button in the search field. \"Pull Down to Refresh\" is used instead.\nThe \"Pull Down to Refresh\" arrow icon is animated and spins to signal that the user should release it."
        },
        "SegmentedButton": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the SegmentedButton control. If not set, it uses the minimum required width to make all buttons inside of the same size (based on the biggest button)."
            }, {
                "name": "enabled",
                "documentation": "Disables all the buttons in the SegmentedButton control. When disabled all the buttons look grey and you cannot focus or click on them."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. If no item to this key is found in the items aggregation, no changes will apply. Only the items aggregation is affected. If duplicate keys exist, the first item matching the key is used."
            }, {
                "name": "selectedButton",
                "documentation": "A reference to the currently selected button control. By default or if the association is set to false (null, undefined, \"\", false), the first button will be selected.\nIf the association is set to an invalid value (for example, an ID of a button that does not exist) the selection on the SegmentedButton will be removed."
            }, {
                "name": "selectedItem",
                "documentation": "A reference to the currently selected item control."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when the user selects a button, which returns the ID and button object."
            }, {
                "name": "selectionChange",
                "documentation": "Fires when the user selects an item, which returns the item object."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A horizontal control made of multiple buttons, which can display a title or an image. Overview The SegmentedButton shows a group of buttons. When the user clicks or taps\none of the buttons, it stays in a pressed state. It automatically resizes the buttons\nto fit proportionally within the control. When no width is set, the control uses the available width."
        },
        "SegmentedButtonItem": {
            "attributes": [{
                "name": "icon",
                "documentation": "The icon, which belongs to the button.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "visible",
                "documentation": "Whether the button should be visible on the screen. If set to false, a placeholder is rendered instead of the real button."
            }, {
                "name": "width",
                "documentation": "Sets the width of the buttons."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on an individual button."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Used for creating buttons for the sap.m.SegmentedButton.\nIt is derived from the sap.ui.core.Item."
        },
        "Select": {
            "attributes": [{
                "name": "name",
                "documentation": "The name to be used in the HTML code (for example, for HTML forms that send data to the server via submit)."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can change the selection."
            }, {
                "name": "width",
                "documentation": "Sets the width of the field. By default, the field width is automatically adjusted to the size\nof its content and the default width of the field is calculated based on the widest list item\nin the dropdown list.\nIf the width defined is smaller than its content, only the field width is changed whereas\nthe dropdown list keeps the width of its content.\nIf the dropdown list is wider than the visual viewport, it is truncated and an ellipsis is displayed\nfor each item.\nFor phones, the width of the dropdown list is always the same as the viewport. Note: This property is ignored if the autoAdjustWidth property is set to true."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the control. Note: This property is ignored if the autoAdjustWidth property is set to true."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. Note: If duplicate keys exist, the first item matching the key is used."
            }, {
                "name": "selectedItemId",
                "documentation": "ID of the selected item."
            }, {
                "name": "icon",
                "documentation": "The URI to the icon that will be displayed only when using the IconOnly type."
            }, {
                "name": "type",
                "documentation": "Type of a select. Possible values Default, IconOnly."
            }, {
                "name": "autoAdjustWidth",
                "documentation": "Indicates whether the width of the input field is determined by the selected item's content."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text within the input field."
            }, {
                "name": "textDirection",
                "documentation": "Specifies the direction of the text within the input field with enumerated options.\nBy default, the control inherits text direction from the DOM."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning,\nSuccess."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text of the value state message popup.\nIf this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showSecondaryValues",
                "documentation": "Indicates whether the text values of the additionalText property of a sap.ui.core.ListItem are shown."
            }, {
                "name": "forceSelection",
                "documentation": "Indicates whether the selection is restricted to one of the items in the list.\nNote: We strongly recommend that you always set this property to false and bind\nthe selectedKey property to the desired value for better interoperability with data binding."
            }, {
                "name": "selectedItem",
                "documentation": "Sets or retrieves the selected item from the aggregation named items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "This event is fired when the value in the selection field is changed in combination with one of\nthe following actions:\n The focus leaves the selection field The Enter key is pressed The item is pressed\n"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The sap.m.Select control provides a list of items that allows users to select an item."
        },
        "SelectDialog": {
            "attributes": [{
                "name": "title",
                "documentation": "Determines the title text that appears in the dialog header"
            }, {
                "name": "noDataText",
                "documentation": "Determines the text shown when the list has no data"
            }, {
                "name": "multiSelect",
                "documentation": "Determines if the user can select several options from the list"
            }, {
                "name": "growingThreshold",
                "documentation": "Determines the number of items initially displayed in the list. Also defines the number of items to be requested from the model for each grow."
            }, {
                "name": "contentWidth",
                "documentation": "Determines the content width of the inner dialog. For more information, see the dialog documentation."
            }, {
                "name": "rememberSelections",
                "documentation": "This flag controls whether the dialog clears the selection after the confirm event has been fired. If the dialog needs to be opened multiple times in the same context to allow for corrections of previous user inputs, set this flag to \"true\". Note: The sap.m.SelectDialog uses sap.m.ListBase this property of the ListBase and therefore its limitations also apply here."
            }, {
                "name": "contentHeight",
                "documentation": "Determines the content height of the inner dialog. For more information, see the dialog documentation."
            }, {
                "name": "confirm",
                "documentation": "This event will be fired when the dialog is confirmed by selecting an item in single selection mode or by pressing the confirmation button in multi selection mode . The items being selected are returned as event parameters."
            }, {
                "name": "search",
                "documentation": "This event will be fired when the search button has been clicked on the searchfield on the visual control"
            }, {
                "name": "liveChange",
                "documentation": "This event will be fired when the value of the search field is changed by a user - e.g. at each key press"
            }, {
                "name": "cancel",
                "documentation": "This event will be fired when the cancel button is clicked"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Overview\nA SelectDialog is a dialog containing a list, search functionality to filter it and a confirmation/cancel button.\nThe list used in the dialog is a growing list and can be filled with any kind of list item.\nStructure\nDialog structure\nThe select dialog has the following components:\n\nHeader - title of the dialog\nSearch field - input field to enter search terms\nInfo toolbar (only in multi-select) - displays the number of currently selected items\nContent - sap.m.StandardListItem standard list items, sap.m.DisplayListItem\ndisplay list items or sap.m.FeedListItem feed list items\nButton toolbar - for confirmation/cancellation buttons \n\nList structure & selection\n\n The search field triggers the events search and liveChange\nwhere a filter function can be applied to the list binding. \n The growing functionality of the list does not support two-way Binding, so if you use this control with a JSON model\nmake sure the binding mode is set to OneWay and that you update the selection model manually with\nthe items passed in the confirm event. \n In the multi-select mode of the select dialog, checkboxes are provided for choosing multiple entries. \n You can set rememberSelections to true to store the current selection and load this state\nwhen the dialog is opened again. \n When cancelling the selection, the event change will be fired and the selection is restored\nto the state when the dialog was opened. \n\nUsage\nWhen to use:\n\nYou need to select one or more entries from a comprehensive list that contains multiple attributes or values. \n\nWhen not to use:\n\n You need to pick one item from a predefined set of options. Use sap.m.Select select\nor sap.m.ComboBox combobox instead. \n You need to select a range of item. Use sap.ui.comp.valuehelpdialog.ValueHelpDialog value help dialog instead. \n You need to be able to add your own values to an existing list. Use a sap.m.Dialog dialog instead. \n\nResponsive Behavior\n\n On phones, the select dialog takes up the whole screen. \n On desktop and tablet devices, the select dialog appears as a popover. \n"
        },
        "SelectList": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Indicates whether the user can change the selection."
            }, {
                "name": "width",
                "documentation": "Sets the width of the control."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the control."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. Note:  If duplicate keys exist, the first item matching the key is used."
            }, {
                "name": "selectedItemId",
                "documentation": "ID of the selected item."
            }, {
                "name": "showSecondaryValues",
                "documentation": "Indicates whether the text values of the additionalText property of a sap.ui.core.ListItem are shown."
            }, {
                "name": "keyboardNavigationMode",
                "documentation": "Defines the keyboard navigation mode. Note: The sap.m.SelectListKeyboardNavigationMode.None enumeration value,\nis only intended for use in some composite controls that handles keyboard navigation by themselves."
            }, {
                "name": "selectedItem",
                "documentation": "Sets or retrieves the selected item from the aggregation named items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "selectionChange",
                "documentation": "This event is fired when the selection has changed. Note:  The selection can be changed by pressing a non-selected item or\nvia keyboard and after the enter or space key is pressed."
            }, {
                "name": "itemPress",
                "documentation": "This event is fired when an item is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The sap.m.SelectList displays a list of items that allows the user to select an item."
        },
        "Shell": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the application title, which may or may not be displayed outside the actual application, depending on the available screen size."
            }, {
                "name": "logo",
                "documentation": "Defines the logo to be displayed next to the App when the screen is sufficiently large."
            }, {
                "name": "showLogout",
                "documentation": "Determines whether the Logout button should be displayed. Currently, this only happens on very tall screens (1568px height), otherwise, it is always hidden."
            }, {
                "name": "headerRightText",
                "documentation": "Defines texts, such as the name of the logged-in user, which should be displayed on the right side of the header (if there is enough space to display the header at all - this only happens on very tall screens (1568px height), otherwise, it is always hidden)."
            }, {
                "name": "appWidthLimited",
                "documentation": "Determines whether the width of the content (the aggregated App) should be limited or extended to the full screen width."
            }, {
                "name": "backgroundColor",
                "documentation": "Defines the background color of the Shell. If set, this color will override the default background defined by the theme. This should only be set when really required.\nAny configured background image will be placed above this colored background.\nUse the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled."
            }, {
                "name": "backgroundImage",
                "documentation": "Defines the background image of the Shell. If set, this image will override the default background defined by the theme. This should only be set when really required.\nThis background image will be placed above any color set for the background.\nUse the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled."
            }, {
                "name": "backgroundRepeat",
                "documentation": "Determines whether the background image (if configured) should be proportionally stretched to cover the whole Shell (false, default) or whether it should be tiled (true)."
            }, {
                "name": "backgroundOpacity",
                "documentation": "Defines the opacity of the background image. The opacity can be set between 0 (fully transparent) and 1 (fully opaque).\nThis can be used to improve readability of the Shell content by making the background image partly transparent."
            }, {
                "name": "homeIcon",
                "documentation": "Sets the icon used for the mobile device home screen and the icon to be used for bookmarks by desktop browsers. This property should be only set once, and as early as possible. Subsequent calls replace the previous icon settings and may lead to different behavior depending on the browser. Different image sizes for device home screen need to be given as PNG images, an ICO file needs to be given as desktop browser bookmark icon (other file formats may not work in all browsers).\nThe precomposed flag defines whether there is already a glow effect contained in the home screen images (or whether iOS should add such an effect). The given structure could look like this:\n{\n'phone':'phone-icon_57x57.png',\n'phone@2':'phone-retina_114x114.png',\n'tablet':'tablet-icon_72x72.png',\n'tablet@2':'tablet-retina_144x144.png',\n'precomposed':true,\n'favicon':'favicon.ico' See jQuery.sap.setIcons() for full documentation."
            }, {
                "name": "titleLevel",
                "documentation": "Defines the semantic level of the title. This information is used by assistive technologies, such as screen readers to create a hierarchical site map for faster navigation.\nDepending on this setting an HTML h1-h6 element is used."
            }, {
                "name": "logout",
                "documentation": "Fires when the user presses the logout button/link."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The Shell control can be used as root element of applications. It can contain an App or a SplitApp control.\nThe Shell provides some overarching functionality for the overall application and takes care of visual adaptation, such as a frame around the App, on desktop browser platforms."
        },
        "SlideTile": {
            "attributes": [{
                "name": "displayTime",
                "documentation": "The time of the slide display in milliseconds."
            }, {
                "name": "transitionTime",
                "documentation": "The time of the slide changing in milliseconds."
            }, {
                "name": "scope",
                "documentation": "Changes the visualization in order to enable additional actions with the SlideTile control."
            }, {
                "name": "press",
                "documentation": "The event is fired when the user chooses the tile. The event is available only in Actions scope."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The control that displays multiple GenericTile controls as changing slides."
        },
        "Slider": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can change the value."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code for the slider (e.g. for HTML forms that send data to the server via submit)."
            }, {
                "name": "min",
                "documentation": "The minimum value."
            }, {
                "name": "max",
                "documentation": "The maximum value."
            }, {
                "name": "step",
                "documentation": "Define the amount of units to change the slider when adjusting by drag and drop. Defines the size of the slider's selection intervals. (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10). The step must be positive, if a negative number is provided, the default value will be used instead.\nIf the width of the slider converted to pixels is less than the range (max - min), the value will be rounded to multiples of the step size."
            }, {
                "name": "progress",
                "documentation": "Indicate whether a progress bar indicator is shown."
            }, {
                "name": "value",
                "documentation": "Define the value. If the value is lower/higher than the allowed minimum/maximum, the value of the properties min/max are used instead."
            }, {
                "name": "showHandleTooltip",
                "documentation": "Indicate whether the handle tooltip is shown."
            }, {
                "name": "showAdvancedTooltip",
                "documentation": "Indicate whether the handle's advanced tooltip is shown. Note: Setting this option to true\nwill ignore the value set in showHandleTooltips. This will cause only the advanced tooltip to be shown."
            }, {
                "name": "inputsAsTooltips",
                "documentation": "Indicates whether input fields should be used as tooltips for the handles. Note: Setting this option to true\nwill only work if showAdvancedTooltips is set to true."
            }, {
                "name": "enableTickmarks",
                "documentation": "Enables tickmarks visualisation"
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "This event is triggered after the end user finishes interacting, if there is any change."
            }, {
                "name": "liveChange",
                "documentation": "This event is triggered during the dragging period, each time the slider value changes."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Overview A sap.m.Slider control represents a numerical range and a handle.\nThe purpose of the control is to enable visual selection of a value in a continuous numerical range by moving an adjustable handle. Notes:\nOnly horizontal sliders are possible. \nThe handle can be moved in steps of predefined size. This is done with the step property. \nSetting the property showAdvancedTooltips shows an input field above the handle\nSetting the property inputsAsTooltips enables the user to enter a specific value in the handle's tooltip. \n\nStructure The most important properties of the Slider are:\n\n min - The minimum value of the slider range \n max - The maximum value of the slider range \n value - The current value of the slider\n progress - Determines if a progress bar will be shown on the slider range\n step - Determines the increments in which the slider will move\n\nThese properties determine the visualization of the tooltips:\n\n showAdvancedTooltips - Determines if a tooltip should be displayed above the handle\n inputsAsTooltips - Determines if the tooltip displayed above the slider's handle should include an input field\n\nUsage The most common usecase is to select values on a continuous numerical scale (e.g. temperature, volume, etc. ). Responsive Behavior The sap.m.Slider control adjusts to the size of its parent container by recalculating and resizing the width of the control.\nYou can move the slider handle in several different ways:\n\n Drag and drop to the desired value\n Click/tap on the range bar to move the handle to that location \n Enter the desired value in the input field (if available) \n Keyboard (Arrow keys, \"+\" and \"-\") \n"
        },
        "SplitApp": {
            "attributes": [{
                "name": "homeIcon",
                "documentation": "Represents the icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\nNote that only the first attempt to set the homeIcon is executed, subsequent settings are ignored.\nThe icon must be in PNG format. The property can either store the URL of one single icon or an object holding icon URLs for the different required sizes.\nNote that if single icon is used for all devices, when scaled, its quality can regress.\nA desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon.\nFor this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting as the file can contain different images for different resolutions. One example is: app.setHomeIcon({\n'phone':'phone-icon.png',\n'phone@2':'phone-retina.png',\n'tablet':'tablet-icon.png',\n'tablet@2':'tablet-retina.png',\n'icon':'desktop.ico'\n); The image size is 57/114 px for the phone and 72/144 px for the tablet.\nIf an object is given but one of the sizes is not given, the largest given icon will be used for this size. On Android, these icons may or may not be used by the device. Chances can be improved by adding glare effect, rounded corners, setting the file name to end with \"-precomposed.png\", and setting the homeIconPrecomposed property to true."
            }, {
                "name": "orientationChange",
                "documentation": "Fires when orientation (portrait/landscape) is changed."
            }, {
                "name": "defaultTransitionNameDetail",
                "documentation": "Determines the type of the transition/animation to apply when to() is called without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions."
            }, {
                "name": "defaultTransitionNameMaster",
                "documentation": "Determines the type of the transition/animation to apply when to() is called, without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions."
            }, {
                "name": "mode",
                "documentation": "Defines whether the master page will always be displayed (in portrait and landscape mode - StretchCompressMode),\nor if it should be hidden when in portrait mode (ShowHideMode). Default is ShowHideMode.\nOther possible values are Hide (Master is always hidden) and Popover (master is displayed in popover)."
            }, {
                "name": "masterButtonText",
                "documentation": "Determines the text displayed in master button, which has a default value \"Navigation\".\nThis text is only displayed in iOS platform and the icon from the current page in detail area is\ndisplayed in the master button for the other platforms.\nThe master button is shown/hidden depending on the orientation of the device and whether\nthe master area is opened or not. SplitContainer manages the show/hide of the master button by itself\nonly when the pages added to the detail area are sap.m.Page with built-in header or sap.m.Page\nwith built-in header, which is wrapped by one or several sap.ui.core.mvc.View.\nOtherwise, the show/hide of master button needs to be managed by the application."
            }, {
                "name": "masterButtonTooltip",
                "documentation": "Specifies the tooltip of the master button. If the tooltip is not specified,\nthe title of the page, which is displayed is the master part, is set as tooltip to the master button."
            }, {
                "name": "backgroundColor",
                "documentation": "Determines the background color of the SplitContainer. If set, this color overrides the default one,\nwhich is defined by the theme (should only be used when really required).\nAny configured background image will be placed above this colored background,\nbut any theme adaptation in the Theme Designer will override this setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled."
            }, {
                "name": "backgroundImage",
                "documentation": "Sets the background image of the SplitContainer. When set, this image overrides\nthe default background defined by the theme (should only be used when really required).\nThis background image will be placed above any color set for the background,\nbut any theme adaptation in the Theme Designer will override this image setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled."
            }, {
                "name": "backgroundRepeat",
                "documentation": "Defines whether the background image (if configured) is proportionally stretched\nto cover the whole SplitContainer (false) or whether it should be tiled (true)."
            }, {
                "name": "backgroundOpacity",
                "documentation": "Defines the opacity of the background image - between 0 (fully transparent) and 1 (fully opaque).\nThis can be used to improve the content visibility by making the background image partly transparent."
            }, {
                "name": "initialDetail",
                "documentation": "Sets the initial detail page, which is displayed on application launch."
            }, {
                "name": "initialMaster",
                "documentation": "Sets the initial master page, which is displayed on application launch."
            }, {
                "name": "masterNavigate",
                "documentation": "Fires when navigation between two pages in master area has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterMasterNavigate",
                "documentation": "Fires when navigation between two pages in master area has completed.\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event."
            }, {
                "name": "masterButton",
                "documentation": "Fires when a Master Button needs to be shown or hidden. This is necessary for custom headers when the SplitContainer control does not handle the placement of the master button automatically."
            }, {
                "name": "beforeMasterOpen",
                "documentation": "Fires before the master area is opened."
            }, {
                "name": "afterMasterOpen",
                "documentation": "Fires when the master area is fully opened after animation if any."
            }, {
                "name": "beforeMasterClose",
                "documentation": "Fires before the master area is closed."
            }, {
                "name": "afterMasterClose",
                "documentation": "Fires when the master area is fully closed after the animation (if any)."
            }, {
                "name": "detailNavigate",
                "documentation": "Fires when navigation between two pages in detail area has been triggered.\nThe transition (if any) to the new page has not started yet.\nNOTE: This event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterDetailNavigate",
                "documentation": "Fires when navigation between two pages in detail area has completed.\nNOTE: In case of animated transitions this event is fired with some delay after the \"navigate\" event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.SplitContainer",
            "documentation": "SplitApp is another possible root element of an SAPUI5 mobile application besides sap.m.App. It contains two NavContainers if running on tablet or desktop, and one on phone.\nThe display of master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitApp.\nStructure\nThe SplitApp divides the screen into two areas:\n\nMaster area - contains a list of available items where the user can search and filter.\nDetails area - contains a control which shows further details on the item(s) selected from the master view.\n\nBoth areas have separate headers and footer bars with navigation and actions.\nUsage\nWhen to use\n\nYou need to review and process different items quickly with minimal navigation.\n\nWhen not to use\n\nYou need to offer complex filters for the list of items.\nYou need to see different attributes for each item in the list, and compare these values across items.\nYou want to display a single object. Do not use the master list to display different facets of the same object.\n\nResponsive Behavior\nOn narrow screens for phones (or tablet devices in portrait mode), the master list and the details are split into two separate pages. The user can navigate between the list and details, and see all the available information for each area."
        },
        "SplitContainer": {
            "attributes": [{
                "name": "defaultTransitionNameDetail",
                "documentation": "Determines the type of the transition/animation to apply when to() is called without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions."
            }, {
                "name": "defaultTransitionNameMaster",
                "documentation": "Determines the type of the transition/animation to apply when to() is called, without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions."
            }, {
                "name": "mode",
                "documentation": "Defines whether the master page will always be displayed (in portrait and landscape mode - StretchCompressMode),\nor if it should be hidden when in portrait mode (ShowHideMode). Default is ShowHideMode.\nOther possible values are Hide (Master is always hidden) and Popover (master is displayed in popover)."
            }, {
                "name": "masterButtonText",
                "documentation": "Determines the text displayed in master button, which has a default value \"Navigation\".\nThis text is only displayed in iOS platform and the icon from the current page in detail area is\ndisplayed in the master button for the other platforms.\nThe master button is shown/hidden depending on the orientation of the device and whether\nthe master area is opened or not. SplitContainer manages the show/hide of the master button by itself\nonly when the pages added to the detail area are sap.m.Page with built-in header or sap.m.Page\nwith built-in header, which is wrapped by one or several sap.ui.core.mvc.View.\nOtherwise, the show/hide of master button needs to be managed by the application."
            }, {
                "name": "masterButtonTooltip",
                "documentation": "Specifies the tooltip of the master button. If the tooltip is not specified,\nthe title of the page, which is displayed is the master part, is set as tooltip to the master button."
            }, {
                "name": "backgroundColor",
                "documentation": "Determines the background color of the SplitContainer. If set, this color overrides the default one,\nwhich is defined by the theme (should only be used when really required).\nAny configured background image will be placed above this colored background,\nbut any theme adaptation in the Theme Designer will override this setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled."
            }, {
                "name": "backgroundImage",
                "documentation": "Sets the background image of the SplitContainer. When set, this image overrides\nthe default background defined by the theme (should only be used when really required).\nThis background image will be placed above any color set for the background,\nbut any theme adaptation in the Theme Designer will override this image setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled."
            }, {
                "name": "backgroundRepeat",
                "documentation": "Defines whether the background image (if configured) is proportionally stretched\nto cover the whole SplitContainer (false) or whether it should be tiled (true)."
            }, {
                "name": "backgroundOpacity",
                "documentation": "Defines the opacity of the background image - between 0 (fully transparent) and 1 (fully opaque).\nThis can be used to improve the content visibility by making the background image partly transparent."
            }, {
                "name": "initialDetail",
                "documentation": "Sets the initial detail page, which is displayed on application launch."
            }, {
                "name": "initialMaster",
                "documentation": "Sets the initial master page, which is displayed on application launch."
            }, {
                "name": "masterNavigate",
                "documentation": "Fires when navigation between two pages in master area has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterMasterNavigate",
                "documentation": "Fires when navigation between two pages in master area has completed.\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event."
            }, {
                "name": "masterButton",
                "documentation": "Fires when a Master Button needs to be shown or hidden. This is necessary for custom headers when the SplitContainer control does not handle the placement of the master button automatically."
            }, {
                "name": "beforeMasterOpen",
                "documentation": "Fires before the master area is opened."
            }, {
                "name": "afterMasterOpen",
                "documentation": "Fires when the master area is fully opened after animation if any."
            }, {
                "name": "beforeMasterClose",
                "documentation": "Fires before the master area is closed."
            }, {
                "name": "afterMasterClose",
                "documentation": "Fires when the master area is fully closed after the animation (if any)."
            }, {
                "name": "detailNavigate",
                "documentation": "Fires when navigation between two pages in detail area has been triggered.\nThe transition (if any) to the new page has not started yet.\nNOTE: This event can be aborted by the application with preventDefault(), which means that there will be no navigation."
            }, {
                "name": "afterDetailNavigate",
                "documentation": "Fires when navigation between two pages in detail area has completed.\nNOTE: In case of animated transitions this event is fired with some delay after the \"navigate\" event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "SplitContainer maintains two NavContainers if running on tablet or desktop and one NavContainer - on phone.\nThe display of the master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitContainer. NOTE: This control must be rendered as a full screen control in order to make the show/hide master area work properly."
        },
        "StandardListItem": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the title of the list item."
            }, {
                "name": "description",
                "documentation": "Defines the additional information for the title.\nNote: This is only visible when the title property is not empty."
            }, {
                "name": "icon",
                "documentation": "Defines the list item icon."
            }, {
                "name": "iconInset",
                "documentation": "Defines the indentation of the icon. If set to false, the icon will not be shown as embedded. Instead it will take the full height of the list item."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, one or more requests are sent to get the density perfect version of the icon if the given version of the icon doesn't exist on the server.\nNote: If bandwidth is a key factor for the application, set this value to false."
            }, {
                "name": "activeIcon",
                "documentation": "Defines the icon that is shown while the list item is pressed."
            }, {
                "name": "info",
                "documentation": "Defines an additional information text."
            }, {
                "name": "infoState",
                "documentation": "Defines the state of the information text, e.g. Error, Warning, Success."
            }, {
                "name": "adaptTitleSize",
                "documentation": "By default, the title size adapts to the available space and gets bigger if the description is empty. If you have list items with and without descriptions, this results in titles with different sizes. In this case, it can be better to switch the size adaption off by setting this property to false."
            }, {
                "name": "titleTextDirection",
                "documentation": "Defines the title text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "infoTextDirection",
                "documentation": "Defines the info directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "sap.m.StandardListItem is a list item providing the most common use cases, e.g. image, title and description."
        },
        "StandardTile": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the title of the StandardTile."
            }, {
                "name": "info",
                "documentation": "Defines the description of the StandardTile."
            }, {
                "name": "icon",
                "documentation": "Defines the icon of the StandardTile."
            }, {
                "name": "activeIcon",
                "documentation": "Defines the active icon of the StandardTile."
            }, {
                "name": "number",
                "documentation": "Defines the number field of the StandardTile."
            }, {
                "name": "numberUnit",
                "documentation": "Defines the number units qualifier of the StandardTile."
            }, {
                "name": "infoState",
                "documentation": "Defines the color of the info text. Possible values are Error, Warning, Success and so on."
            }, {
                "name": "type",
                "documentation": "Defines the type of the StandardTile."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If bandwidth is key for the application, set this value to false."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "removable",
                "documentation": "Determines whether the tile is movable within the surrounding tile container. The remove event is fired by the tile container."
            }, {
                "name": "press",
                "documentation": "Tap event is raised if the user taps or clicks the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Tile",
            "documentation": "The StandardTile control is displayed in the tile container."
        },
        "StandardTreeItem": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the title of the item."
            }, {
                "name": "icon",
                "documentation": "Defines the tree item icon."
            }, {
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.TreeItemBase",
            "documentation": "The sap.m.StandardTreeItem is a tree item providing a title, image, etc."
        },
        "StepInput": {
            "attributes": [{
                "name": "min",
                "documentation": "Sets the minimum possible value of the defined range."
            }, {
                "name": "max",
                "documentation": "Sets the maximum possible value of the defined range."
            }, {
                "name": "step",
                "documentation": "Increases/decreases the value of the input.\nNote: The value of the step property should not contain more digits after the decimal point than what is set to the displayValuePrecision property, as it may lead to an increase/decrease that is not visible for the user. For example, if the value is set to 1.22 and the displayValuePrecision is set to one digit after the decimal, the user will see 1.2. In this case, if the value of the step property is set to 1.005 and the user selects increase, the resulting value will increase to 1.2261 but the displayed value will remain as 1.2 as it will be rounded to the first digit after the decimal point. Depending on what is set for the value and the displayValuePrecision properties, it is possible the displayed value to be rounded to a higher number, for example to 3.0 when the actual value is 2.99."
            }, {
                "name": "stepMode",
                "documentation": "Defines the calculation mode for the provided step and largerStep. If the user increases/decreases the value by largerStep, this calculation will consider\nit as well. For example, if the current value is 3, step is 5,\nlargerStep is 5 and the user chooses PageUp, the calculation logic will consider\nthe value of 3x5=15 to decide what will be the next value."
            }, {
                "name": "largerStep",
                "documentation": "Increases/decreases the value with a larger value than the set step only when using the PageUp/PageDown keys.\nDefault value is 2 times larger than the set step."
            }, {
                "name": "value",
                "documentation": "Determines the value of the StepInput and can be set initially from the app developer."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "valueState",
                "documentation": "Accepts the core enumeration ValueState.type that supports None, Error, Warning and Success."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to the non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "displayValuePrecision",
                "documentation": "Determines the number of digits after the decimal point. The value should be between 0 (default) and 20.\nIn case the value is not valid it will be set to the default value."
            }, {
                "name": "description",
                "documentation": "Determines the description text after the input field, for example units of measurement, currencies."
            }, {
                "name": "fieldWidth",
                "documentation": "Determines the distribution of space between the input field\nand the description text . Default value is 50% (leaving the other\n50% for the description). Note: This property takes effect only if the\ndescription property is also set."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is displayed inside the input field."
            }, {
                "name": "validationMode",
                "documentation": "Defines when the validation of the typed value will happen. By default this happens on focus out."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "change",
                "documentation": "Is fired when one of the following happens: \n the text in the input has changed and the focus leaves the input field or the enter key is pressed. One of the decrement or increment buttons is pressed\n"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Allows the user to change the input values with predefined increments (steps). Overview The StepInput consists of an input field and buttons with icons to increase/decrease the value. The user can change the value of the control by pressing the increase/decrease buttons,\nby typing a number directly, by using the keyboard up/down and page up/down,\nor by using the mouse scroll wheel. Decimal values are supported. Usage The default step is 1 but the app developer can set a different one. On desktop, the control supports a larger step, when using the keyboard page up/down keys.\nYou can set a multiple of the step with the use of the largerStep property.\nThe default value is 2 (two times the set step). For example, when using the keyboard page up/down keys\nthe value increases/decreases with a double of the default step. If the set step is 2, the larger step is also 2\nand the current value is 1, using the page up key will increase the value to 5 (1 + 2*2). App developers can set a maximum and minimum value for the StepInput.\nThe increase/decrease button and the up/down keyboard navigation become disabled when\nthe value reaches the max/min or a new value is entered from the input which is greater/less than the max/min. When to use\n\nTo adjust amounts, quantities, or other values quickly.\nTo adjust values for a specific step.\n When not to use\n\nTo enter a static number (for example, postal code, phone number, or ID). In this case,\nuse the regular sap.m.Input instead.\nTo display a value that rarely needs to be adjusted and does not pertain to a particular step.\nIn this case, use the regular sap.m.Input instead.\nTo enter dates and times. In this case, use the sap.m.DatePicker, sap.m.DateRangeSelection, sap.m.TimePicker, or sap.m.DateTimePicker instead.\n"
        },
        "SuggestionItem": {
            "attributes": [{
                "name": "icon",
                "documentation": "The icon belonging to this list item instance.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "description",
                "documentation": "Additional text of type string, optionally to be displayed along with this item."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Display suggestion list items."
        },
        "Switch": {
            "attributes": [{
                "name": "state",
                "documentation": "A boolean value indicating whether the switch is on or off."
            }, {
                "name": "customTextOn",
                "documentation": "Custom text for the \"ON\" state. \"ON\" translated to the current language is the default value.\nBeware that the given text will be cut off if available space is exceeded."
            }, {
                "name": "customTextOff",
                "documentation": "Custom text for the \"OFF\" state. \"OFF\" translated to the current language is the default value.\nBeware that the given text will be cut off if available space is exceeded."
            }, {
                "name": "enabled",
                "documentation": "Whether the switch is enabled."
            }, {
                "name": "name",
                "documentation": "The name to be used in the HTML code for the switch (e.g. for HTML forms that send data to the server via submit)."
            }, {
                "name": "type",
                "documentation": "Type of a Switch. Possibles values \"Default\", \"AcceptReject\"."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Triggered when a switch changes the state."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A switch is a user interface control on mobile devices that is used for change between binary states. The user can also drag the button handle or tap to change the state."
        },
        "TabContainer": {
            "attributes": [{
                "name": "showAddNewButton",
                "documentation": "Defines whether an Add New Tab button is displayed in the TabStrip."
            }, {
                "name": "selectedItem",
                "documentation": "Sets or retrieves the selected item from the items aggregation."
            }, {
                "name": "itemClose",
                "documentation": "Fired when an item is closed."
            }, {
                "name": "itemSelect",
                "documentation": "Fired when an item is pressed."
            }, {
                "name": "addNewButtonPress",
                "documentation": "Fired when the Add New Tab button is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A container control for managing multiple tabs, allowing the user to open and edit different items simultaneously. Overview The control contains a TabStrip area where the user can choose which tab to view/edit.\nWhen the open tabs are more than what can be displayed on the screen, there is an overflow mechanism.\nTo access the tabs hidden in the overflow area, the user has to either use the overflow button (left or right arrow)\nto scroll them horizontally or the overflow overview button (down arrow) and view all open items as a list. Each tab has a title and a Close Tab button. The title is truncated, if it's longer than 25 characters.\nOn desktop, the Close Tab button is displayed on the currently active tab and for the other tabs it appears on mouse hover.\nOn mobile devices, the Close Tab buttons are always visible. To show that the open items have unsaved changes, the corresponding tabs can display an asterisk (*) after the title\nas a visual indication that the item is not saved. This is managed by the app developer using sap.m.TabContainerItem TabContainerItem's modified property. Usage The TabContainer can have an Add New Tab button, which appears as a '+' icon on the\ntop-right area of the control. When the user clicks or taps this button, the addNewButtonPress event is fired. Responsive behavior The TabContainer is a full-page container that takes 100% of its parent width and height.\nAs the control is expected to occupy the whole parent, it should be the only child of its parent."
        },
        "TabContainerItem": {
            "attributes": [{
                "name": "name",
                "documentation": "Determines the text to be displayed for the item."
            }, {
                "name": "key",
                "documentation": "Determines the name of the item. Can be used as input for subsequent actions."
            }, {
                "name": "modified",
                "documentation": "Shows if a control is edited (default is false). Items that are marked as modified have a * symbol to indicate that they haven't been saved."
            }, {
                "name": "itemPropertyChanged",
                "documentation": "Sends information that some of the properties have changed."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "An item to be used in a TabContainer."
        },
        "Table": {
            "attributes": [{
                "name": "backgroundDesign",
                "documentation": "Sets the background style of the table. Depending on the theme, you can change the state of the background from Solid to Translucent or to Transparent."
            }, {
                "name": "fixedLayout",
                "documentation": "Defines the algorithm to be used to layout the table cells, rows, and columns.\nBy default, a table is rendered with fixed layout algorithm. This means the horizontal layout only depends on the table's width and the width of the columns, not the contents of the cells. Cells in subsequent rows do not affect column widths. This allows a browser to layout the table faster than the auto table layout since the browser can begin to display the table once the first row has been analyzed. When this property is set to false, sap.m.Table is rendered with auto layout algorithm. This means, the width of the table and its cells depends on the contents of the cells. The column width is set by the widest unbreakable content inside the cells. This can make the rendering slow, since the browser needs to read through all the content in the table before determining the final layout.\nNote: Since sap.m.Table does not have its own scrollbars, setting fixedLayout to false can force the table to overflow, which may cause visual problems. It is suggested to use this property when a table has a few columns in wide screens or within the horizontal scroll container (e.g sap.m.Dialog) to handle overflow.\nIn auto layout mode the width property of sap.m.Column is taken into account as a minimum width."
            }, {
                "name": "showOverlay",
                "documentation": "Setting this property to true will show an overlay on top of the table content and prevents the user interaction with it."
            }, {
                "name": "alternateRowColors",
                "documentation": "Enables alternating table row colors.\nNote: This property can only be used with the Belize and Belize Deep themes.\nAlternate row coloring is not available for the High Contrast Black/White themes."
            }, {
                "name": "popinLayout",
                "documentation": "Defines the layout in which the table pop-in rows are rendered.\nNote: The demandPopin and minScreenWidth properties of the Column control must be configured appropriately."
            }, {
                "name": "sticky",
                "documentation": "Defines the section of the sap.m.Table control that remains fixed at the top of the page during vertical scrolling as long as the table is in the viewport. Note: There is limited browser support, hence the API is in experimental state.\nBrowsers that currently support this feature are Chrome (desktop and mobile), Safari (desktop and mobile) and Edge 41. There are also some known issues with respect to the scrolling behavior and focus handling. A few are given below: If the table is placed in certain layout containers, for example, the sap.ui.layout.Grid control,\nthe column headers are not fixed at the top of the viewport. Similar behavior is also observed with the sap.m.ObjectPage control. This API should not be used in a productive environment."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the context menu is opened.\nWhen the context menu is opened, the binding context of the item is set to the given contextMenu."
            }, {
                "name": "inset",
                "documentation": "Defines the indentation of the container. Setting it to true indents the list."
            }, {
                "name": "headerText",
                "documentation": "Defines the header text that appears in the control.\nNote: If headerToolbar aggregation is set, then this property is ignored."
            }, {
                "name": "headerDesign",
                "documentation": "Defines the header style of the control. Possible values are Standard and Plain."
            }, {
                "name": "footerText",
                "documentation": "Defines the footer text that appears in the control."
            }, {
                "name": "mode",
                "documentation": "Defines the mode of the control (e.g. None, SingleSelect, MultiSelect, Delete)."
            }, {
                "name": "width",
                "documentation": "Sets the width of the control."
            }, {
                "name": "includeItemInSelection",
                "documentation": "Defines whether the items are selectable by clicking on the item itself (true) rather than having to set the selection control first.\nNote: The SingleSelectMaster mode also provides this functionality by default."
            }, {
                "name": "showUnread",
                "documentation": "Activates the unread indicator for all items, if set to true."
            }, {
                "name": "noDataText",
                "documentation": "This text is displayed when the control contains no items."
            }, {
                "name": "showNoData",
                "documentation": "Defines whether or not the text specified in the noDataText property is displayed."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "When this property is set to true, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the busyIndicatorDelay property."
            }, {
                "name": "modeAnimationOn",
                "documentation": "Defines if animations will be shown while switching between modes."
            }, {
                "name": "showSeparators",
                "documentation": "Defines which item separator style will be used."
            }, {
                "name": "swipeDirection",
                "documentation": "Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the swipeContent aggregation."
            }, {
                "name": "growing",
                "documentation": "If set to true, enables the growing feature of the control to load more items by requesting from the model.\nNote:: This feature only works when an items aggregation is bound. Growing must not be used together with two-way binding."
            }, {
                "name": "growingThreshold",
                "documentation": "Defines the number of items to be requested from the model for each grow.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingTriggerText",
                "documentation": "Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingScrollToLoad",
                "documentation": "If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control.\nNote: This property can only be used if the growing property is set to true and only if there is one instance of sap.m.List or sap.m.Table inside the scrollable scroll container (e.g sap.m.Page)."
            }, {
                "name": "growingDirection",
                "documentation": "Defines the direction of the growing feature.\nIf set to Downwards the user has to scroll down to load more items or the growing button is displayed at the bottom.\nIf set to Upwards the user has to scroll up to load more items or the growing button is displayed at the top."
            }, {
                "name": "rememberSelections",
                "documentation": "If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\nNote: This feature works only if two-way data binding for the selected property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the JSONModel is changed."
            }, {
                "name": "keyboardMode",
                "documentation": "Defines keyboard handling behavior of the control."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when selection is changed via user interaction. In MultiSelect mode, this event is also fired on deselection."
            }, {
                "name": "selectionChange",
                "documentation": "Fires when selection is changed via user interaction inside the control."
            }, {
                "name": "delete",
                "documentation": "Fires when delete icon is pressed by user."
            }, {
                "name": "swipe",
                "documentation": "Fires after user's swipe action and before the swipeContent is shown. On the swipe event handler, swipeContent can be changed according to the swiped item.\nCalling the preventDefault method of the event cancels the swipe action."
            }, {
                "name": "growingStarted",
                "documentation": "Fires before the new growing chunk is requested from the model."
            }, {
                "name": "growingFinished",
                "documentation": "Fires after the new growing chunk has been fetched from the model and processed by the control."
            }, {
                "name": "updateStarted",
                "documentation": "Fires before items binding is updated (e.g. sorting, filtering) Note: Event handler should not invalidate the control."
            }, {
                "name": "updateFinished",
                "documentation": "Fires after items binding is updated and processed by the control."
            }, {
                "name": "itemPress",
                "documentation": "Fires when an item is pressed unless the item's type property is Inactive."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the context menu is opened.\nWhen the context menu is opened, the binding context of the item is set to the given contextMenu."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListBase",
            "documentation": "sap.m.Table control provides a set of sophisticated and convenience functions for responsive table design.\nTo render the sap.m.Table properly, the order of the columns aggregation should match with the order of the items cells aggregation. Also sap.m.Table requires at least one visible sap.m.Column in columns aggregation.\nFor mobile devices, the recommended limit of table rows is 100 (based on 4 columns) to assure proper performance. To improve initial rendering on large tables, use the growing feature. See section \" topic:5eb6f63e0cc547d0bdc934d3652fdc9b Creating Tables\" and \" topic:38855e06486f4910bfa6f4485f7c2bac Configuring Responsive Behavior of a Table\"\nin the documentation for an introduction to sap.m.Table control."
        },
        "TableSelectDialog": {
            "attributes": [{
                "name": "title",
                "documentation": "Specifies the title text in the dialog header."
            }, {
                "name": "noDataText",
                "documentation": "Specifies the text displayed when the table has no data."
            }, {
                "name": "multiSelect",
                "documentation": "Enables the user to select several options from the table."
            }, {
                "name": "growingThreshold",
                "documentation": "Determines the number of items initially displayed in the table."
            }, {
                "name": "contentWidth",
                "documentation": "Determines the content width of the inner dialog. For more information, see the Dialog documentation."
            }, {
                "name": "rememberSelections",
                "documentation": "Controls whether the dialog clears the selection or not. When the dialog is opened multiple times in the same context to allow for corrections of previous user inputs, set this flag to \"true\". When the dialog should reset the selection to allow for a new selection each time set it to \"false\"\nNote: This property must be set before the Dialog is opened to have an effect."
            }, {
                "name": "contentHeight",
                "documentation": "Specifies the content height of the inner dialog. For more information, see the Dialog documentation."
            }, {
                "name": "confirm",
                "documentation": "Fires when the dialog is confirmed by selecting an item in single-selection mode or by pressing the confirmation button in multi-selection mode. The items being selected are returned as event parameters."
            }, {
                "name": "search",
                "documentation": "Fires when the search button has been clicked on dialog."
            }, {
                "name": "liveChange",
                "documentation": "Fires when the value of the search field is changed by a user (for example at each key press)."
            }, {
                "name": "cancel",
                "documentation": "Fires when the Cancel button is clicked."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A dialog to select items in a table containing multiple values and attributes.\nOverview\nThe table select dialog helps users select items in a table-like structure with several attributes and values per item. A search fields helps narrow down the results.\nStructure\nThe table select dialog consists of the following elements:\n\n Search field - used to search enter search terms for a specific item.\n Infobar (optional) - shows additional information for the current selection (i.e. total number of selected items).\n Content - the table with the items.\n Footer (optional) - a toolbar for actions.\n\nTable select dialog supports multi-selection when the multiSelect property is set. The selected items can be stored for later editing when the rememberSelections property is set.\nNote: This property has to be set before the dialog is opened.\nUsage\nWhen to use:\n\nYou need to select one or more items from a comprehensive list that contains multiple attributes or values.\n\nWhen not to use:\n\nYou need to select one item from a predefined set of options that contains only one value. Use a sap.m.Select switch control instead.\nYou need to select items within a query-based range. Use a sap.ui.comp.valuehelpdialog.ValueHelpDialog value help control instead.\nYou need to only filter a set of items. Use a sap.ui.comp.filterbar.FilterBar filter bar control instead.\n\nResponsive Behavior\n\nOn smaller screens, the columns of the table wrap and build a list that shows all the information.\n"
        },
        "Text": {
            "attributes": [{
                "name": "text",
                "documentation": "Determines the text to be displayed."
            }, {
                "name": "textDirection",
                "documentation": "Available options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control."
            }, {
                "name": "wrapping",
                "documentation": "Enables text wrapping."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "width",
                "documentation": "Sets the width of the Text control. By default, the Text control uses the full width available. Set this property to restrict the width to a custom value."
            }, {
                "name": "maxLines",
                "documentation": "Limits the number of lines for wrapping texts. Note: The multi-line overflow indicator depends on the browser line clamping support. For such browsers, this will be shown as ellipsis, for the other browsers the overflow will just be hidden."
            }, {
                "name": "renderWhitespace",
                "documentation": "Specifies how whitespace and tabs inside the control are handled. If true, whitespace will be preserved by the browser.\nDepending on wrapping property text will either only wrap on line breaks or wrap when necessary, and on line breaks. Note: Special characters that can be used are : \\t , \\n and \" \" respectively Tab, New line and Space."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The Text control can be used for embedding longer text paragraphs, that need text wrapping, into your app.\nIf the configured text value contains HTML code or script tags, those will be escaped.\nNote: Line breaks (\\r\\n, \\n\\r, \\r, \\n) will always be visualized except when the wrapping property is set to false. In addition, tabs (\\t) and whitespace (\" \") can be preserved by setting the renderWhitespace property to true"
        },
        "TextArea": {
            "attributes": [{
                "name": "rows",
                "documentation": "Defines the number of visible text lines for the control.\nNote: The height property wins over the rows property, if both are set."
            }, {
                "name": "cols",
                "documentation": "Defines the visible width of the control, in average character widths.\nNote: The width property wins over the cols property, if both are set."
            }, {
                "name": "height",
                "documentation": "Defines the height of the control."
            }, {
                "name": "maxLength",
                "documentation": "Defines the maximum number of characters that the value can be."
            }, {
                "name": "showExceededText",
                "documentation": "Determines whether the characters, exceeding the maximum allowed character count, are visible in the input field. If set to false the user is not allowed to enter more characters than what is set in the maxLength property.\nIf set to true the characters exceeding the maxLength value are selected on paste and the counter below\nthe input field displays their number."
            }, {
                "name": "wrapping",
                "documentation": "Indicates how the control wraps the text, e.g. Soft, Hard, Off."
            }, {
                "name": "valueLiveUpdate",
                "documentation": "Indicates when the value property gets updated with the user changes. Setting it to true updates the value property whenever the user has modified the text shown on the text area."
            }, {
                "name": "growing",
                "documentation": "Indicates the ability of the control to automatically grow and shrink dynamically with its content.\nNote: The height property is ignored, if this property set to true."
            }, {
                "name": "growingMaxLines",
                "documentation": "Defines the maximum number of lines that the control can grow."
            }, {
                "name": "liveChange",
                "documentation": "Is fired whenever the user has modified the text shown on the text area."
            }, {
                "name": "value",
                "documentation": "Defines the value of the control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can interact with the control or not.\nNote: Disabled controls cannot be focused and they are out of the tab-chain."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning, Success."
            }, {
                "name": "name",
                "documentation": "Defines the name of the control for the purposes of form submission."
            }, {
                "name": "placeholder",
                "documentation": "Defines a short hint intended to aid the user with data entry when the control has no value."
            }, {
                "name": "editable",
                "documentation": "Defines whether the control can be modified by the user or not.\nNote: A user can tab to non-editable control, highlight it, and copy the text from it."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showValueStateMessage",
                "documentation": "Indicates whether the value state message should be shown or not."
            }, {
                "name": "textAlign",
                "documentation": "Defines the horizontal alignment of the text that is shown inside the input field."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text directionality of the input field, e.g. RTL, LTR"
            }, {
                "name": "required",
                "documentation": "Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation labelFor of sap.m.Label) cannot be established\n(e.g. one label should label multiple fields)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.InputBase",
            "documentation": "A control that is used for multi-line input of text.\nOverview\nThe text area is used to enter multiple lines of text. When empty, it can hold a placeholder similar to an sap.m.Input input.\nYou can define the height and width of the text area and also determine specific behavior when handling long texts.\nStructure\nParameters that determine the size:\n\nrows - Number of visible text lines (overruled by height, if both are set)\ncols - Number of visible characters per line line (overruled by width, if both are set)\nheight - Height of the control\nwidth - Width of the control\n\nParameters that determine the behavior:\n\ngrowing - The text area adjusts its size based on the content\ngrowingMaxLines - Threshold for the growing property (shouldn't exceed the screen size)\nmaxLength - Maximum number of characters that can be entered in a text area\nwrapping - The way the entered text is wrapped by the control\nshowExceededText - Determines how text beyond the maxLength length is handled\n\nUsage\nWhen to use\n\nYou want to enter multiple lines of text.\nAlways provide labels for a text area.\nA placeholder does not substitute a label.\n\nResponsive Behavior\n\nOn smaller screens, you can scroll down the text area to see the entire text. To indicate that the text continues, the control shows only half of the last line.\nIf you have a growing text area, have in mind that its maximum height should not exceed the height of the screen. If that is the case, the screen height is used instead.\nIf showExceededText is set to TRUE and you paste a longer text, all characters beyond the maxLength limit are automatically selected.\nIf showExceededText is set to TRUE, the control will display a counter for the remaining characters."
        },
        "Tile": {
            "attributes": [{
                "name": "removable",
                "documentation": "Determines whether the tile is movable within the surrounding tile container. The remove event is fired by the tile container."
            }, {
                "name": "press",
                "documentation": "Tap event is raised if the user taps or clicks the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A tile to be displayed in the tile container. Use this\ntile as the base class for specialized tile implementations.\nUse the renderer _addOuterClass methods to add a style class to the main\nsurface of the Tile. In this class set the background color, gradients\nor background images.\nInstead of implementing the default render method in the renderer, implement\nyour content HTML in the _renderContent method of the specialized tile."
        },
        "TileContainer": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the TileContainer in px."
            }, {
                "name": "height",
                "documentation": "Defines the height of the TileContainer in px."
            }, {
                "name": "editable",
                "documentation": "Determines whether the TileContainer is editable so you can move, delete or add tiles."
            }, {
                "name": "allowAdd",
                "documentation": "Determines whether the user is allowed to add Tiles in Edit mode (editable = true)."
            }, {
                "name": "tileMove",
                "documentation": "Fires if a Tile is moved."
            }, {
                "name": "tileDelete",
                "documentation": "Fires if a Tile is deleted in Edit mode."
            }, {
                "name": "tileAdd",
                "documentation": "Fires when a Tile is added."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A container that arranges same-size tiles nicely on carousel pages."
        },
        "TileContent": {
            "attributes": [{
                "name": "footer",
                "documentation": "The footer text of the tile."
            }, {
                "name": "footerColor",
                "documentation": "The semantic color of the footer."
            }, {
                "name": "size",
                "documentation": "Updates the size of the tile. If it is not set, then the default size is applied based on the device tile."
            }, {
                "name": "unit",
                "documentation": "The percent sign, the currency symbol, or the unit of measure."
            }, {
                "name": "disabled",
                "documentation": "Disables control if true."
            }, {
                "name": "frameType",
                "documentation": "Frame types: 1x1, 2x1, and auto."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control is used within the GenericTile control."
        },
        "Title": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the text which should be displayed as a title."
            }, {
                "name": "level",
                "documentation": "Defines the semantic level of the title.\nThis information is e.g. used by assistive technologies like screenreaders to create a hierarchical site map for faster navigation.\nDepending on this setting either an HTML h1-h6 element is used or when using level Auto no explicit level information is written (HTML5 header element).\nThis property does not influence the style of the control. Use the property titleStyle for this purpose instead."
            }, {
                "name": "titleStyle",
                "documentation": "Defines the style of the title.\nWhen using the Auto styling, the appearance of the title depends on the current position of the title (e.g. inside a Toolbar).\nThis default behavior can be overridden by setting a different style explicitly.\nThe actual appearance of the title and the different styles always depends on the theme being used."
            }, {
                "name": "width",
                "documentation": "Defines the width of the title."
            }, {
                "name": "textAlign",
                "documentation": "Defines the alignment of the text within the title. Note: This property only has an effect if the overall width of the title control is\nlarger than the displayed text."
            }, {
                "name": "wrapping",
                "documentation": "Enables text wrapping.\nNote: Wrapping must only be activated if the surrounding container allows flexible heights."
            }, {
                "name": "title",
                "documentation": "Defines a relationship to a generic title description.\nIf such a title element is associated, the properties text, level and tooltip (text only) of this element are consumed.\nThe corresponding properties of the title control are ignored."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The Title control represents a single line of text with explicit header / title semantics."
        },
        "ToggleButton": {
            "attributes": [{
                "name": "pressed",
                "documentation": "The property is “true” when the control is toggled. The default state of this property is \"false\"."
            }, {
                "name": "text",
                "documentation": "Determines the text of the Button."
            }, {
                "name": "type",
                "documentation": "Defines the Button type."
            }, {
                "name": "width",
                "documentation": "Defines the Button width."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the Button is enabled (default is set to true).\nA disabled Button has different colors depending on the sap.m.ButtonType ButtonType."
            }, {
                "name": "icon",
                "documentation": "Defines the icon to be displayed as graphical element within the Button.\nIt can be an image or an icon from the icon font."
            }, {
                "name": "iconFirst",
                "documentation": "Determines whether the icon is displayed before the text."
            }, {
                "name": "activeIcon",
                "documentation": "The source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the icon property is not set or has a different type, the active icon is not displayed."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image."
            }, {
                "name": "textDirection",
                "documentation": "This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fired when the user taps the control."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks or taps on the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Button",
            "documentation": "An enhanced sap.m.Button that can be toggled between pressed and normal state. Clicking or tapping a ToggleButton changes its state to pressed. The button returns to\nits initial state when the user clicks or taps it again."
        },
        "Token": {
            "attributes": [{
                "name": "selected",
                "documentation": "Indicates the current selection status of the token."
            }, {
                "name": "key",
                "documentation": "Key of the token."
            }, {
                "name": "text",
                "documentation": "Displayed text of the token."
            }, {
                "name": "editable",
                "documentation": "Indicates the editable status of the token. If it is set to true, token displays a delete icon."
            }, {
                "name": "textDirection",
                "documentation": "This property specifies the text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "delete",
                "documentation": "This event is fired if the user clicks the token's delete icon."
            }, {
                "name": "press",
                "documentation": "This event is fired when the user clicks on the token."
            }, {
                "name": "select",
                "documentation": "This event is fired when the token gets selected."
            }, {
                "name": "deselect",
                "documentation": "This event is fired when the token gets deselected."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Overview\nTokens are small items of information (similar to tags) that mainly serve to visualize previously selected items.\nTokens are manipulated by a sap.m.Tokenizer Tokenizer.\nStructure\nThe tokens store single text items or sometimes key-value pairs, such as \"John Miller (ID1234567)\".\nEach token also contains a delete icon, which is invisible if the token is in edit mode. Usage\nWhen to use:\nTokens can only be used with the Tokenizer as a container."
        },
        "Tokenizer": {
            "attributes": [{
                "name": "editable",
                "documentation": "true if tokens shall be editable otherwise false"
            }, {
                "name": "width",
                "documentation": "Defines the width of the Tokenizer."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tokenChange",
                "documentation": "fired when the tokens aggregation changed (add / remove token)"
            }, {
                "name": "tokenUpdate",
                "documentation": "Fired when the tokens aggregation changed due to a user interaction (add / remove token)"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Overview\nA tokenizer is a container for sap.m.Token Tokens. It also handles all actions associated with the tokens like adding, deleting, selecting and editing.\nStructure\nThe tokens are stored in the tokens aggregation.\nThe tokenizer can determine, by setting the editable property, whether the tokens in it are editable.\nStill the Token itself can determine if it is editable. This allows you to have non-editable Tokens in an editable Tokenizer. Usage\nWhen to use:\nThe tokenizer can only be used as part of sap.m.MultiComboBox MultiComboBox, sap.m.MultiInput MultiInput or sap.ui.comp.valuehelpdialog.ValueHelpDialog ValueHelpDialog"
        },
        "Toolbar": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the control.\nBy default, Toolbar is a block element. If the width is not explicitly set, the control will assume its natural size."
            }, {
                "name": "active",
                "documentation": "Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive."
            }, {
                "name": "enabled",
                "documentation": "Sets the enabled property of all controls defined in the content aggregation.\nNote: This property does not apply to the toolbar itself, but rather to its items."
            }, {
                "name": "height",
                "documentation": "Defines the height of the control. By default, the height\nproperty depends on the used theme and the design property. Note: It is not recommended to use this property if the\nsapMTBHeader-CTX class is used"
            }, {
                "name": "design",
                "documentation": "Defines the toolbar design. Note: Design settings are theme-dependent. They also determine the default height of the toolbar."
            }, {
                "name": "style",
                "documentation": "Defines the visual style of the Toolbar. Note: The visual styles are theme-dependent."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks on the toolbar, if the Active property is set to \"true\"."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Horizontal container most commonly used to display buttons, labels, selects and various\nother input controls. Overview By default, the Toolbar items are shrinkable if they have percent-based width\n(for example, sap.m.Input and sap.m.Slider) or implement the sap.ui.core.IShrinkable interface (for example, sap.m.Text and sap.m.Label).\nThis behavior can be overridden by providing sap.m.ToolbarLayoutData for the Toolbar items. Note: It is recommended that you use sap.m.OverflowToolbar over sap.m.Toolbar,\nunless you want to avoid the overflow behavior in favor of shrinking. Usage You can add a visual separator between the preceding and succeeding sap.m.Toolbar item\nwith the use of the sap.m.ToolbarSeparator. The separator is theme dependent and can be\na padding, a margin or a line. To add horizontal space between the Toolbar items, use the sap.m.ToolbarSpacer.\nYou can define the width of the horizontal space or make it flexible to cover the remaining space\nbetween the Toolbar items (for example, to to push an item to the edge of the Toolbar. Note: sap.m.ToolbarLayoutData should not be used together with sap.m.ToolbarSpacer."
        },
        "ToolbarLayoutData": {
            "attributes": [{
                "name": "shrinkable",
                "documentation": "Determines whether the control, when in a toolbar, is shrinkable or not. For controls with fixed width (100px, 5rem, etc...) this property is ignored. Note: Nested layout controls should not be shrinkable."
            }, {
                "name": "minWidth",
                "documentation": "Sets the minimum width of the toolbar item."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the toolbar item."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "Defines layout data for the sap.m.Toolbar items. Note: ToolbarLayoutData should not be used together with sap.m.ToolbarSpacer."
        },
        "ToolbarSeparator": {
            "attributes": [{
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Creates a visual separator (theme dependent: padding, margin, line) between the\npreceding and succeeding sap.m.Toolbar item."
        },
        "ToolbarSpacer": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the horizontal space.\nNote: Empty(\"\") value makes the space flexible which means it covers the remaining space between toolbar items.\nThis feature can be used to push next item to the edge of the toolbar."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Adds horizontal space between the items used within a sap.m.Toolbar. Note: ToolbarSpacer should not be used together with sap.m.ToolbarLayoutData."
        },
        "Tree": {
            "attributes": [{
                "name": "toggleOpenState",
                "documentation": "Fired when an item has been expanded or collapsed by user interaction."
            }, {
                "name": "inset",
                "documentation": "Defines the indentation of the container. Setting it to true indents the list."
            }, {
                "name": "headerText",
                "documentation": "Defines the header text that appears in the control.\nNote: If headerToolbar aggregation is set, then this property is ignored."
            }, {
                "name": "headerDesign",
                "documentation": "Defines the header style of the control. Possible values are Standard and Plain."
            }, {
                "name": "footerText",
                "documentation": "Defines the footer text that appears in the control."
            }, {
                "name": "mode",
                "documentation": "Defines the mode of the control (e.g. None, SingleSelect, MultiSelect, Delete)."
            }, {
                "name": "width",
                "documentation": "Sets the width of the control."
            }, {
                "name": "includeItemInSelection",
                "documentation": "Defines whether the items are selectable by clicking on the item itself (true) rather than having to set the selection control first.\nNote: The SingleSelectMaster mode also provides this functionality by default."
            }, {
                "name": "showUnread",
                "documentation": "Activates the unread indicator for all items, if set to true."
            }, {
                "name": "noDataText",
                "documentation": "This text is displayed when the control contains no items."
            }, {
                "name": "showNoData",
                "documentation": "Defines whether or not the text specified in the noDataText property is displayed."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "When this property is set to true, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the busyIndicatorDelay property."
            }, {
                "name": "modeAnimationOn",
                "documentation": "Defines if animations will be shown while switching between modes."
            }, {
                "name": "showSeparators",
                "documentation": "Defines which item separator style will be used."
            }, {
                "name": "swipeDirection",
                "documentation": "Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the swipeContent aggregation."
            }, {
                "name": "growing",
                "documentation": "If set to true, enables the growing feature of the control to load more items by requesting from the model.\nNote:: This feature only works when an items aggregation is bound. Growing must not be used together with two-way binding."
            }, {
                "name": "growingThreshold",
                "documentation": "Defines the number of items to be requested from the model for each grow.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingTriggerText",
                "documentation": "Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the growing property is set to true."
            }, {
                "name": "growingScrollToLoad",
                "documentation": "If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control.\nNote: This property can only be used if the growing property is set to true and only if there is one instance of sap.m.List or sap.m.Table inside the scrollable scroll container (e.g sap.m.Page)."
            }, {
                "name": "growingDirection",
                "documentation": "Defines the direction of the growing feature.\nIf set to Downwards the user has to scroll down to load more items or the growing button is displayed at the bottom.\nIf set to Upwards the user has to scroll up to load more items or the growing button is displayed at the top."
            }, {
                "name": "rememberSelections",
                "documentation": "If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\nNote: This feature works only if two-way data binding for the selected property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the JSONModel is changed."
            }, {
                "name": "keyboardMode",
                "documentation": "Defines keyboard handling behavior of the control."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when selection is changed via user interaction. In MultiSelect mode, this event is also fired on deselection."
            }, {
                "name": "selectionChange",
                "documentation": "Fires when selection is changed via user interaction inside the control."
            }, {
                "name": "delete",
                "documentation": "Fires when delete icon is pressed by user."
            }, {
                "name": "swipe",
                "documentation": "Fires after user's swipe action and before the swipeContent is shown. On the swipe event handler, swipeContent can be changed according to the swiped item.\nCalling the preventDefault method of the event cancels the swipe action."
            }, {
                "name": "growingStarted",
                "documentation": "Fires before the new growing chunk is requested from the model."
            }, {
                "name": "growingFinished",
                "documentation": "Fires after the new growing chunk has been fetched from the model and processed by the control."
            }, {
                "name": "updateStarted",
                "documentation": "Fires before items binding is updated (e.g. sorting, filtering) Note: Event handler should not invalidate the control."
            }, {
                "name": "updateFinished",
                "documentation": "Fires after items binding is updated and processed by the control."
            }, {
                "name": "itemPress",
                "documentation": "Fires when an item is pressed unless the item's type property is Inactive."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the context menu is opened.\nWhen the context menu is opened, the binding context of the item is set to the given contextMenu."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListBase",
            "documentation": "The Tree control provides a tree structure for displaying data in a hierarchy.\nNote: Growing feature is not supported by Tree."
        },
        "TreeItemBase": {
            "attributes": [{
                "name": "type",
                "documentation": "Defines the visual indication and behavior of the list items, e.g. Active, Navigation, Detail."
            }, {
                "name": "unread",
                "documentation": "Activates the unread indicator for the list item, if set to true.\nNote: This flag is ignored when the showUnread property of the parent is set to false."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the list items.\nNote: Binding the selected property in single selection modes may cause unwanted results if you have more than one selected items in your binding."
            }, {
                "name": "counter",
                "documentation": "Defines the counter value of the list items."
            }, {
                "name": "highlight",
                "documentation": "Defines the highlight state of the list items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fires when the user taps on the control."
            }, {
                "name": "detailTap",
                "documentation": "Fires when the user taps on the detail button of the control."
            }, {
                "name": "press",
                "documentation": "Fires when the user clicks on the control.\nNote: This event is not fired when the parent mode is SingleSelectMaster or when the includeItemInSelection property is set to true.\nIf there is an interactive element that handles its own press event then the list item's press event is not fired.\nAlso see sap.m.ListBase."
            }, {
                "name": "detailPress",
                "documentation": "Fires when the user clicks on the detail button of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ListItemBase",
            "documentation": "The sap.m.TreeItemBase contains the basic features of all specific tree items."
        },
        "UploadCollection": {
            "attributes": [{
                "name": "fileType",
                "documentation": "Defines the allowed file types for the upload.\nThe chosen files will be checked against an array of file types.\nIf at least one file does not fit the file type requirements, the upload is prevented. Example: [\"jpg\", \"png\", \"bmp\"]."
            }, {
                "name": "maximumFilenameLength",
                "documentation": "Specifies the maximum length of a file name.\nIf the maximum file name length is exceeded, the corresponding event 'filenameLengthExceed' is triggered."
            }, {
                "name": "maximumFileSize",
                "documentation": "Specifies a file size limit in megabytes that prevents the upload if at least one file exceeds the limit.\nThis property is not supported by Internet Explorer 8 and 9."
            }, {
                "name": "mimeType",
                "documentation": "Defines the allowed MIME types of files to be uploaded.\nThe chosen files will be checked against an array of MIME types.\nIf at least one file does not fit the MIME type requirements, the upload is prevented.\nThis property is not supported by Internet Explorer 8 and 9. Example: mimeType [\"image/png\", \"image/jpeg\"]."
            }, {
                "name": "multiple",
                "documentation": "Lets the user select multiple files from the same folder and then upload them.\nInternet Explorer 8 and 9 do not support this property.\nPlease note that the various operating systems for mobile devices can react differently to the property so that fewer upload functions may be available in some cases. If multiple property is set to false, the control shows an error message if more than one file is chosen for drag & drop."
            }, {
                "name": "noDataText",
                "documentation": "Allows you to set your own text for the 'No data' text label."
            }, {
                "name": "noDataDescription",
                "documentation": "Allows you to set your own text for the 'No data' description label."
            }, {
                "name": "sameFilenameAllowed",
                "documentation": "Allows the user to use the same name for a file when editing the file name. 'Same name' refers to an already existing file name in the list."
            }, {
                "name": "showSeparators",
                "documentation": "Defines whether separators are shown between list items."
            }, {
                "name": "uploadEnabled",
                "documentation": "Enables the upload of a file."
            }, {
                "name": "uploadUrl",
                "documentation": "Specifies the URL where the uploaded files have to be stored."
            }, {
                "name": "instantUpload",
                "documentation": "If false, no upload is triggered when a file is selected. In addition, if a file was selected, a new FileUploader instance is created to ensure that multiple files from multiple folders can be chosen."
            }, {
                "name": "numberOfAttachmentsText",
                "documentation": "Sets the title text in the toolbar of the list of attachments.\nTo show as well the number of attachments in brackets like the default text does. The number of attachments could be retrieved via \"getItems().length\".\nIf a new title is set, the default is deactivated.\nThe default value is set to language-dependent \"Attachments (n)\"."
            }, {
                "name": "mode",
                "documentation": "Defines the selection mode of the control (e.g. None, SingleSelect, MultiSelect, SingleSelectLeft, SingleSelectMaster).\nSince the UploadCollection reacts like a list for attachments, the API is close to the ListBase Interface.\nsap.m.ListMode.Delete mode is not supported and will be automatically set to sap.m.ListMode.None.\nIn addition, if instant upload is set to false the mode sap.m.ListMode.MultiSelect is not supported and will be automatically set to sap.m.ListMode.None."
            }, {
                "name": "uploadButtonInvisible",
                "documentation": "If true, the button used for uploading files is invisible."
            }, {
                "name": "terminationEnabled",
                "documentation": "If true, the button that is used to terminate the instant file upload gets visible.\nThe button normally appears when a file is being uploaded."
            }, {
                "name": "change",
                "documentation": "The event is triggered when files are selected in the FileUploader dialog. Applications can set parameters and headerParameters which will be dispatched to the embedded FileUploader control.\nLimitation: parameters and headerParameters are not supported by Internet Explorer 9."
            }, {
                "name": "fileDeleted",
                "documentation": "The event is triggered when an uploaded attachment is selected and the Delete button is pressed."
            }, {
                "name": "filenameLengthExceed",
                "documentation": "The event is triggered when the name of a chosen file is longer than the value specified with the maximumFilenameLength property (only if provided by the application)."
            }, {
                "name": "fileRenamed",
                "documentation": "The event is triggered when the file name is changed."
            }, {
                "name": "fileSizeExceed",
                "documentation": "The event is triggered when the file size of an uploaded file is exceeded (only if the maxFileSize property was provided by the application).\nThis event is not supported by Internet Explorer 9."
            }, {
                "name": "typeMissmatch",
                "documentation": "The event is triggered when the file type or the MIME type don't match the permitted types (only if the fileType property or the mimeType property are provided by the application)."
            }, {
                "name": "uploadComplete",
                "documentation": "The event is triggered as soon as the upload request is completed."
            }, {
                "name": "uploadTerminated",
                "documentation": "The event is triggered as soon as the upload request was terminated by the user."
            }, {
                "name": "beforeUploadStarts",
                "documentation": "The event is triggered before the actual upload starts. An event is fired per file. All the necessary header parameters should be set here."
            }, {
                "name": "selectionChange",
                "documentation": "Fires when selection is changed via user interaction inside the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control allows you to upload single or multiple files from your devices (desktop, tablet or phone) and attach them to the application. The consuming application needs to take into account that the consistency checks of the model during the upload of the file need to be performed, for example, if the user is editing or deleting a file."
        },
        "UploadCollectionItem": {
            "attributes": [{
                "name": "contributor",
                "documentation": "Specifies the name of the user who uploaded the file."
            }, {
                "name": "documentId",
                "documentation": "Specifies a unique identifier of the file (created by the application)."
            }, {
                "name": "fileName",
                "documentation": "Specifies the name of the uploaded file."
            }, {
                "name": "fileSize",
                "documentation": "Specifies the size of the uploaded file (in megabytes)."
            }, {
                "name": "mimeType",
                "documentation": "Specifies the MIME type of the file."
            }, {
                "name": "thumbnailUrl",
                "documentation": "Specifies the URL where the thumbnail of the file is located. This can also be an SAPUI5 icon URL."
            }, {
                "name": "uploadedDate",
                "documentation": "Specifies the date on which the file was uploaded.\nThe application has to define the date format."
            }, {
                "name": "url",
                "documentation": "Specifies the URL where the file is located.\nIf the application doesn't provide a value for this property, the icon and the file name of the UploadCollectionItem are not clickable."
            }, {
                "name": "enableEdit",
                "documentation": "Enables/Disables the Edit button.\nIf the value is true, the Edit button is enabled and the edit function can be used.\nIf the value is false, the edit function is not available."
            }, {
                "name": "enableDelete",
                "documentation": "Enables/Disables the Delete button.\nIf the value is true, the Delete button is enabled and the delete function can be used.\nIf the value is false, the delete function is not available."
            }, {
                "name": "visibleEdit",
                "documentation": "Show/Hide the Edit button.\nIf the value is true, the Edit button is visible.\nIf the value is false, the Edit button is not visible."
            }, {
                "name": "visibleDelete",
                "documentation": "Show/Hide the Delete button.\nIf the value is true, the Delete button is visible.\nIf the value is false, the Delete button is not visible."
            }, {
                "name": "ariaLabelForPicture",
                "documentation": "Aria label for the icon (or for the image)."
            }, {
                "name": "selected",
                "documentation": "Defines the selected state of the UploadCollectionItem."
            }, {
                "name": "fileUploader",
                "documentation": "ID of the FileUploader instance"
            }, {
                "name": "press",
                "documentation": "This event is triggered when the user presses the filename link.\nIf this event is provided, it overwrites the default behavior of opening the file."
            }, {
                "name": "deletePress",
                "documentation": "When a deletePress event handler is attached to the item and the user presses the delete button, this event is triggered.\nIf this event is triggered, it overwrites the default delete behavior of UploadCollection and the fileDeleted event of UploadCollection is not triggered."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Defines a structure of the element of the 'items' aggregation."
        },
        "UploadCollectionParameter": {
            "attributes": [{
                "name": "name",
                "documentation": "Specifies the name of the parameter."
            }, {
                "name": "value",
                "documentation": "Specifies the value of the parameter."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Defines a structure of the element of the 'parameters' aggregation."
        },
        "UploadCollectionToolbarPlaceholder": {
            "attributes": [{
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Used to create a customizable toolbar for the UploadCollection.\nA FileUploader instance is required in the toolbar and will be placed by the application."
        },
        "VBox": {
            "attributes": [{
                "name": "height",
                "documentation": "The height of the sap.m.FlexBox. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined."
            }, {
                "name": "width",
                "documentation": "The width of the sap.m.FlexBox. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined."
            }, {
                "name": "displayInline",
                "documentation": "Determines whether the sap.m.FlexBox is in block or inline mode."
            }, {
                "name": "direction",
                "documentation": "Determines the direction of the layout of child elements."
            }, {
                "name": "fitContainer",
                "documentation": "Determines whether the sap.m.FlexBox will be sized to completely fill its container. If the sap.m.FlexBox is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport."
            }, {
                "name": "renderType",
                "documentation": "Determines whether the layout is rendered as a series of divs or as an unordered list (ul).\n\nWe recommend to use Bare in most cases to avoid layout issues due to browser inconsistencies."
            }, {
                "name": "justifyContent",
                "documentation": "Determines the layout behavior along the main axis."
            }, {
                "name": "alignItems",
                "documentation": "Determines the layout behavior of items along the cross-axis. \"Baseline\" is not supported in Internet Explorer 10."
            }, {
                "name": "wrap",
                "documentation": "Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below."
            }, {
                "name": "alignContent",
                "documentation": "Determines the layout behavior of container lines when there's extra space along the cross-axis. This property has no effect in Internet Explorer 10."
            }, {
                "name": "backgroundDesign",
                "documentation": "Defines the background style of the sap.m.FlexBox."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.FlexBox",
            "documentation": "The VBox control builds the container for a vertical flexible box layout. VBox is a convenience control, as it is just a specialized FlexBox control.\n\nNote: Be sure to check the renderType setting to avoid issues due to browser inconsistencies."
        },
        "ViewSettingsCustomItem": {
            "attributes": [{
                "name": "filterCount",
                "documentation": "The number of currently active filters for this custom filter item. It will be displayed in the filter list of the ViewSettingsDialog to represent the filter state of the custom control."
            }, {
                "name": "selected",
                "documentation": "Selected state of the item. If set to \"true\", the item will be displayed as selected in the view settings dialog."
            }, {
                "name": "itemPropertyChanged",
                "documentation": "Let the outside world know that some of its properties has changed."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.m.ViewSettingsItem",
            "documentation": "The ViewSettingsCustomItem control is used for modelling custom filters in the ViewSettingsDialog."
        },
        "ViewSettingsCustomTab": {
            "attributes": [{
                "name": "icon",
                "documentation": "Custom tab button icon"
            }, {
                "name": "title",
                "documentation": "Custom tab title"
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "The ViewSettingsCustomTab control is used for adding custom tabs in the ViewSettingsDialog."
        },
        "ViewSettingsDialog": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the title of the dialog. If not set and there is only one active tab, the dialog uses the default \"View\" or \"Sort\", \"Group\", \"Filter\" respectively."
            }, {
                "name": "sortDescending",
                "documentation": "Determines whether the sort order is descending or ascending (default)."
            }, {
                "name": "groupDescending",
                "documentation": "Determines whether the group order is descending or ascending (default)."
            }, {
                "name": "filterSearchOperator",
                "documentation": "Provides a string filter operator which is used when the user searches items in filter details page.\nPossible operators are: AnyWordStartsWith, Contains, StartsWith, Equals.\nThis property will be ignored if a custom callback is provided through setFilterSearchCallback method."
            }, {
                "name": "selectedSortItem",
                "documentation": "The sort item that is selected. It can be set by either passing a key or the item itself to the function setSelectedSortItem."
            }, {
                "name": "selectedGroupItem",
                "documentation": "The group item that is selected. It can be set by either passing a key or the item itself to the function setSelectedGroupItem.\nBy default 'None' is selected. You can restore back to 'None' by setting this association to empty value."
            }, {
                "name": "selectedPresetFilterItem",
                "documentation": "The preset filter item that is selected. It can be set by either passing a key or the item itself to the function setSelectedPresetFilterItem. Note that either a preset filter OR multiple detail filters can be active at the same time."
            }, {
                "name": "confirm",
                "documentation": "Indicates that the user has pressed the OK button and the selected sort, group, and filter settings should be applied to the data on this page.\nNote: Custom tabs are not converted to event parameters automatically. For custom tabs, you have to read the state of your controls inside the callback of this event."
            }, {
                "name": "cancel",
                "documentation": "Called when the Cancel button is pressed. It can be used to set the state of custom filter controls."
            }, {
                "name": "resetFilters",
                "documentation": "Called when the reset filters button is pressed. It can be used to clear the state of custom filter controls."
            }, {
                "name": "filterDetailPageOpened",
                "documentation": "Fired when the filter detail page is opened."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Helps the user to sort, filter, or group data within a (master) sap.m.List or a sap.m.Table. The dialog is triggered by icon buttons in the table toolbar. Each\nbutton shows a dropdown list icon. Overview The ViewSettingsDialog is a composite control,\nconsisting of a modal sap.m.Popover and several internal lists.\nThere are three different tabs (Sort, Group, Filter) in the dialog that can be\nactivated by filling the respective associations. If only one association is\nfilled, the other tabs are automatically hidden. The selected options can be used\nto create sorters and filters for the table. Note: If the app does not offer all three sorting, filtering, and grouping\nfunctionalities, but only one of these (such as sort), we recommend placing the\nicon button directly in the toolbar. Do not place sort, filter, or group buttons in\nthe footer toolbar if they refer to a table. Place group, sort, and filter buttons\nin the footer toolbar if they refer to a master list. Usage When to use?\nIf you need to allow the user to sort line items in a manageable list or\ntable (up to 20 columns)\nIf you need to offer custom filter settings in a manageable list or table\n(up to 20 columns)\nIf you need to allow the user to group line items in a manageable list or\ntable (up to 20 columns) When not to use?\nIf you have complex tables (more than 20 columns)\nIf you need to rearrange columns within your table (use the sap.m.TablePersoDialog instead)\nIf you need very specific sort, filter, or column sorting options within\ncomplex tables (use the sap.m.P13nDialog instead) Responsive behavior The popover dialog appears as a modal window on desktop and tablet screen sizes,\nbut full screen on smartphones."
        },
        "ViewSettingsFilterItem": {
            "attributes": [{
                "name": "multiSelect",
                "documentation": "If set to (true), multi selection will be allowed for the items aggregation."
            }, {
                "name": "filterDetailItemsAggregationChange",
                "documentation": "Let the outside world know that the filter detail aggregation was changed."
            }, {
                "name": "selected",
                "documentation": "Selected state of the item. If set to \"true\", the item will be displayed as selected in the view settings dialog."
            }, {
                "name": "itemPropertyChanged",
                "documentation": "Let the outside world know that some of its properties has changed."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.m.ViewSettingsItem",
            "documentation": "A ViewSettingsFilterItem control is used for modelling filter behaviour in the ViewSettingsDialog.\nIt is derived from a core Item, but does not support the base class properties like textDirection and enabled.\nSetting these properties will not have any effects."
        },
        "ViewSettingsItem": {
            "attributes": [{
                "name": "selected",
                "documentation": "Selected state of the item. If set to \"true\", the item will be displayed as selected in the view settings dialog."
            }, {
                "name": "itemPropertyChanged",
                "documentation": "Let the outside world know that some of its properties has changed."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "ViewSettingsItem is used for modelling filter behaviour in the ViewSettingsDialog.\nIt is derived from a core Item, but does not support the base class properties \"textDirection\" and \"enabled\", setting these properties will not have any effects."
        },
        "Wizard": {
            "attributes": [{
                "name": "width",
                "documentation": "Determines the width of the Wizard."
            }, {
                "name": "height",
                "documentation": "Determines the height of the Wizard."
            }, {
                "name": "showNextButton",
                "documentation": "Controls the visibility of the next button. The developers can choose to control the flow of the\nsteps either through the API (with nextStep and previousStep methods) or let the user click\nthe next button, and control it with validateStep or invalidateStep methods."
            }, {
                "name": "finishButtonText",
                "documentation": "Changes the text of the finish button for the last step.\nThis property can be used only if showNextButton is set to true.\nBy default the text of the button is \"Review\"."
            }, {
                "name": "enableBranching",
                "documentation": "Enables the branching functionality of the Wizard.\nBranching gives the developer the ability to define multiple routes a user\nis able to take based on the input in the current step.\nIt is up to the developer to programatically check for what is the input in the\ncurrent step and set a concrete next step amongs the available subsequent steps.\nNote: If this property is set to false, next and subSequentSteps\nassociations of the WizardStep control are ignored."
            }, {
                "name": "currentStep",
                "documentation": "This association controls the current activated step of the wizard (meaning the last step)\nFor example if we have A->B->C->D steps, we are on step A and we setCurrentStep(C) A,B and C are going to be activated. D will still remain unvisited.\nThe parameter needs to be a Wizard step that is part of the current Wizard"
            }, {
                "name": "stepActivate",
                "documentation": "The StepActivated event is fired every time a new step is activated."
            }, {
                "name": "complete",
                "documentation": "The complete event is fired when the user clicks the finish button of the Wizard.\nThe finish button is only available on the last step of the Wizard."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Enables users to accomplish a single goal which consists of multiple dependable sub-tasks.\nOverview\nThe sap.m.Wizard helps users complete a complex and unfamiliar task by dividing it into sections and guiding the user through it.\nThe wizard has two main areas - a navigation area at the top showing the step sequence and a content area below it.\nStructure\nNavigation Area\nThe top most area of the wizard is occupied by the navigation area. It shows the sequence of sap.m.WizardStep wizard steps.\n\nThe minimum number of steps is 3 and the maximum is 8 and are stored in the steps aggregation.\nSteps can be branching depending on choices the user made in their input - this is set by the enableBranching property. \nSteps can have different visual representations - numbers or icons. You can add labels for better readability \n\nContent\nThe content occupies the main part of the page. It can hold any type of input controls. The content is kept in sap.m.WizardStep wizard steps.\nNext Step Button\nThe next step button is displayed below the content. It can be hidden by setting showNextButton to false and displayed, for example,\nonly after the user has filled all mandatory fields.\nUsage\nWhen to use:\nWhen the user has to accomplish a long or unfamiliar task.\nWhen not to use:\nWhen the user has to accomplish a routine task that is clear and familiar.\nWhen the task has only two steps or less.\nResponsive Behavior\nOn mobile devices the steps in the StepNavigator are grouped together and overlap. Tapping on them will show a popover to select the step to navigate to."
        },
        "WizardStep": {
            "attributes": [{
                "name": "title",
                "documentation": "Determines the title of the step.\nThe title is visualized in the Wizard control."
            }, {
                "name": "icon",
                "documentation": "Determines the icon that is displayed for this step.\nThe icon is visualized in the progress navigation part of the Wizard control.\nNote: In order for the icon to be displayed, each step in the Wizard should have\nthis property defined, otherwise the default numbering will be displayed."
            }, {
                "name": "validated",
                "documentation": "Indicates whether or not the step is validated.\nWhen a step is validated a Next button is visualized in the Wizard control."
            }, {
                "name": "optional",
                "documentation": "Indicates whether or not the step is optional.\nWhen a step is optional an \"(Optional)\" label is displayed under the step's title."
            }, {
                "name": "subsequentSteps",
                "documentation": "This association is used only when the enableBranching property of the Wizard is set to true.\nUse the association to store the next steps that are about to come after the current.\nIf this is going to be a final step - leave this association empty."
            }, {
                "name": "nextStep",
                "documentation": "The next step to be taken after the step is completed.\nSet this association value in the complete event of the current WizardStep."
            }, {
                "name": "complete",
                "documentation": "This event is fired after the user presses the Next button in the Wizard,\nor on nextStep method call from the app developer."
            }, {
                "name": "activate",
                "documentation": "This event is fired on next step activation from the Wizard."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A container control used to aggregate user input controls as part of an sap.m.Wizard.\nOverview\nWizardStep gives the developer the ability to validate, invalidate the step and define subsequent steps.\nThe WizardStep control control is supposed to be used only as an aggregation of the sap.m.Wizard Wizard control,\nand should not be used as a standalone one.\nStructure\n\nEach wizard step has a title. Additionally it can have an icon.\nEach wizard step can be validated by setting the validated property. This action will trigger the rendering of the Next step button.\nIf the execution needs to branch after a given step, you should set all possible next steps in the subsequentSteps aggregation."
        },
        "AddAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "An AddAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage. See sap.m.semantic.MasterPage, sap.m.semantic.FullscreenPage, sap.m.semantic.DetailPage"
        },
        "CancelAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A CancelAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "DeleteAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A DeleteAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "DetailPage": {
            "attributes": [{
                "name": "title",
                "documentation": "See sap.m.Page"
            }, {
                "name": "titleLevel",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showNavButton",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showSubHeader",
                "documentation": "See sap.m.Page"
            }, {
                "name": "enableScrolling",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showFooter",
                "documentation": "Hides or shows the page footer"
            }, {
                "name": "floatingFooter",
                "documentation": "Determines whether the floating footer behavior is enabled.\nIf set to true, the content is visible when it's underneath the footer."
            }, {
                "name": "semanticRuleSet",
                "documentation": "Declares the type of semantic ruleset that will govern the styling and positioning of semantic content."
            }, {
                "name": "backgroundDesign",
                "documentation": "Determines the backgound color of the page. For more\ninformation, see sap.m.Page."
            }, {
                "name": "navButtonPress",
                "documentation": "See sap.m.Page"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ShareMenuPage",
            "documentation": "A DetailPage is a sap.m.semantic.ShareMenuPage that supports semantic content of the following types:   sap.m.semantic.AddAction  sap.m.semantic.MainAction  sap.m.semantic.PositiveAction  sap.m.semantic.NegativeAction  sap.m.semantic.ForwardAction  sap.m.semantic.EditAction  sap.m.semantic.SaveAction  sap.m.semantic.DeleteAction  sap.m.semantic.CancelAction  sap.m.semantic.FlagAction  sap.m.semantic.FavoriteAction  sap.m.semantic.OpenInAction  sap.m.semantic.DiscussInJamAction  sap.m.semantic.ShareInJamAction  sap.m.semantic.SendEmailAction  sap.m.semantic.SendMessageAction  sap.m.semantic.PrintAction  sap.m.semantic.MessagesIndicator  sap.m.DraftIndicator\n"
        },
        "DiscussInJamAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A DiscussInJamAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "EditAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "An EditAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "FavoriteAction": {
            "attributes": [{
                "name": "pressed",
                "documentation": "The property is “true” when the control is toggled. The default state of this property is \"false\"."
            }, {
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticToggleButton",
            "documentation": "A FavoriteAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "FilterAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A FilterAction is a sap.m.Button control enhanced with styling according to the semantics of a common \"Filter\" action. A FilterAction cannot be used independently but only as aggregation content of a sap.m.semantic.SemanticPage. Your app should listen to the press event of sap.m.semantic.FilterAction in order to trigger the display of the filtering options. If your filtering options are a simple list of items and require single choice only, then you can consider using a sap.m.semantic.FilterSelect instead."
        },
        "FilterSelect": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Select"
            }, {
                "name": "selectedKey",
                "documentation": "See sap.m.Select"
            }, {
                "name": "selectedItem",
                "documentation": "See sap.m.Select"
            }, {
                "name": "change",
                "documentation": "See sap.m.Select:change"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticSelect",
            "documentation": "A FilterSelect is a sap.m.Select control enhanced with styling according to the semantics of a common \"Filter\" acton. A FilterSelect cannot be used independently but only as aggregation content of a sap.m.semantic.SemanticPage. The filtering options should be added to the items aggregation of sap.m.semantic.FilterSelect and will be displayed as a pop-up list with support for single-item selection.\nIf this simple popup list is not sufficient for your use case, you can implement your own custom dialog by using sap.m.semantic.FilterAction to trigger the dialog opening."
        },
        "FlagAction": {
            "attributes": [{
                "name": "pressed",
                "documentation": "The property is “true” when the control is toggled. The default state of this property is \"false\"."
            }, {
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticToggleButton",
            "documentation": "A FlagAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "ForwardAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A ForwardAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "FullscreenPage": {
            "attributes": [{
                "name": "title",
                "documentation": "See sap.m.Page"
            }, {
                "name": "titleLevel",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showNavButton",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showSubHeader",
                "documentation": "See sap.m.Page"
            }, {
                "name": "enableScrolling",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showFooter",
                "documentation": "Hides or shows the page footer"
            }, {
                "name": "floatingFooter",
                "documentation": "Determines whether the floating footer behavior is enabled.\nIf set to true, the content is visible when it's underneath the footer."
            }, {
                "name": "semanticRuleSet",
                "documentation": "Declares the type of semantic ruleset that will govern the styling and positioning of semantic content."
            }, {
                "name": "backgroundDesign",
                "documentation": "Determines the backgound color of the page. For more\ninformation, see sap.m.Page."
            }, {
                "name": "navButtonPress",
                "documentation": "See sap.m.Page"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.ShareMenuPage",
            "documentation": "A FullscreenPage is a sap.m.semantic.ShareMenuPage that supports semantic content of the following types:   sap.m.semantic.AddAction  sap.m.semantic.MainAction  sap.m.semantic.PositiveAction  sap.m.semantic.NegativeAction  sap.m.semantic.ForwardAction  sap.m.semantic.EditAction  sap.m.semantic.SaveAction  sap.m.semantic.DeleteAction  sap.m.semantic.CancelAction  sap.m.semantic.FlagAction  sap.m.semantic.FavoriteAction  sap.m.semantic.OpenInAction  sap.m.semantic.DiscussInJamAction  sap.m.semantic.ShareInJamAction  sap.m.semantic.SendEmailAction  sap.m.semantic.SendMessageAction  sap.m.semantic.PrintAction  sap.m.semantic.MessagesIndicator  sap.m.DraftIndicator\n"
        },
        "GroupAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A GroupAction is a sap.m.Button control enhanced with styling according to the semantics of a common \"Group\" action. A GroupAction cannot be used independently but only as aggregation content of a sap.m.semantic.SemanticPage. Your app should listen to the press event of sap.m.semantic.GroupAction in order to trigger the display of the grouping options. If your grouping options are a simple list of items and require single choice only, then you can consider using a sap.m.semantic.GroupSelect instead."
        },
        "GroupSelect": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Select"
            }, {
                "name": "selectedKey",
                "documentation": "See sap.m.Select"
            }, {
                "name": "selectedItem",
                "documentation": "See sap.m.Select"
            }, {
                "name": "change",
                "documentation": "See sap.m.Select:change"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticSelect",
            "documentation": "A GroupSelect is a sap.m.Select control enhanced with styling according to the semantics of a common \"Group\" acton. A GroupSelect cannot be used independently but only as aggregation content of a sap.m.semantic.SemanticPage. The grouping options should be added to the items aggregation of sap.m.semantic.GroupSelect and will be displayed as a pop-up list with support for single-item selection.\nIf this simple popup list is not sufficient for your use case, you can implement your own custom dialog by using sap.m.semantic.GroupAction to trigger the dialog opening."
        },
        "MainAction": {
            "attributes": [{
                "name": "text",
                "documentation": "Button text"
            }, {
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A MainAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "MasterPage": {
            "attributes": [{
                "name": "title",
                "documentation": "See sap.m.Page"
            }, {
                "name": "titleLevel",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showNavButton",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showSubHeader",
                "documentation": "See sap.m.Page"
            }, {
                "name": "enableScrolling",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showFooter",
                "documentation": "Hides or shows the page footer"
            }, {
                "name": "floatingFooter",
                "documentation": "Determines whether the floating footer behavior is enabled.\nIf set to true, the content is visible when it's underneath the footer."
            }, {
                "name": "semanticRuleSet",
                "documentation": "Declares the type of semantic ruleset that will govern the styling and positioning of semantic content."
            }, {
                "name": "backgroundDesign",
                "documentation": "Determines the backgound color of the page. For more\ninformation, see sap.m.Page."
            }, {
                "name": "navButtonPress",
                "documentation": "See sap.m.Page"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.SemanticPage",
            "documentation": "A MasterPage is a sap.m.semantic.SemanticPage that supports semantic content of the following types:   sap.m.semantic.AddAction  sap.m.semantic.MainAction  sap.m.semantic.PositiveAction  sap.m.semantic.NegativeAction  sap.m.semantic.ForwardAction  sap.m.semantic.EditAction  sap.m.semantic.SaveAction  sap.m.semantic.DeleteAction  sap.m.semantic.CancelAction  sap.m.semantic.MultiSelectAction  sap.m.semantic.FlagAction  sap.m.semantic.FavoriteAction  sap.m.semantic.SortAction  sap.m.semantic.SortSelect  sap.m.semantic.FilterAction  sap.m.semantic.FilterSelect  sap.m.semantic.GroupAction  sap.m.semantic.GroupSelect  sap.m.semantic.MessagesIndicator\n"
        },
        "MessagesIndicator": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A MessagesIndicator button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "MultiSelectAction": {
            "attributes": [{
                "name": "pressed",
                "documentation": "The property is “true” when the control is toggled. The default state of this property is \"false\"."
            }, {
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticToggleButton",
            "documentation": "A MultiSelectAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "NegativeAction": {
            "attributes": [{
                "name": "text",
                "documentation": "Button text"
            }, {
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A NegativeAction button has default semantic-specific properties and\nis eligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "OpenInAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "An OpenInAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "PositiveAction": {
            "attributes": [{
                "name": "text",
                "documentation": "Button text"
            }, {
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A PositiveAction button has default semantic-specific properties and\nis eligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "PrintAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A PrintAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "SaveAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A SaveAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "SemanticButton": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticControl",
            "documentation": "A semantic button is either a sap.m.Button or sap.m.semantic.SemanticOverflowToolbarButton ,\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "SemanticControl": {
            "attributes": [{
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "A semantic control is an abstraction for either a sap.m.semantic.SemanticButton or sap.m.semantic.SemanticSelect ,\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "SemanticPage": {
            "attributes": [{
                "name": "title",
                "documentation": "See sap.m.Page"
            }, {
                "name": "titleLevel",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showNavButton",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showSubHeader",
                "documentation": "See sap.m.Page"
            }, {
                "name": "enableScrolling",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showFooter",
                "documentation": "Hides or shows the page footer"
            }, {
                "name": "floatingFooter",
                "documentation": "Determines whether the floating footer behavior is enabled.\nIf set to true, the content is visible when it's underneath the footer."
            }, {
                "name": "semanticRuleSet",
                "documentation": "Declares the type of semantic ruleset that will govern the styling and positioning of semantic content."
            }, {
                "name": "backgroundDesign",
                "documentation": "Determines the backgound color of the page. For more\ninformation, see sap.m.Page."
            }, {
                "name": "navButtonPress",
                "documentation": "See sap.m.Page"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "An enhanced sap.m.Page, that can contain controls with semantic meaning,\nsee sap.m.semantic.SemanticControl. Note: This control implements the SAP Fiori 1.0 design guidelines.\nFor SAP Fiori 2.0, see the sap.f.semantic.SemanticPage. Overview The main functionality of the SemanticPage is to predefine the placement,\nbehavior and styles of the page elements. Content specified in the semantic aggregations will be automatically positioned in\ndedicated sections of the footer or the header of the page. Structure The semantics of the content are the following:\n\nVisual properties (for example, AddAction will be styled as an icon button)\nPosition in the page (UX guidelines specify that some buttons should be in the header only, while others are in the footer or the \"share\" menu, so we do the correct positioning)\nSequence order (UX guidelines define a specific sequence order of semantic controls with\nrespect to each other)\nDefault localized tooltip for icon-only buttons\nOverflow behavior (UX guidelines define which buttons are allowed to go to the overflow of\nthe toolbar when the screen gets narrower). For icon buttons, we ensure that the text label of\nthe button appears when the button is in overflow, as specified by UX.\nScreen reader support (invisible text for reading the semantic type)\n In addition to the predefined semantic controls, the SemanticPage can host also\ncustom app controls. It preserves most of the API of the sap.m.Page for specifying page content. Usage The app developer only has to specify the action type, and the required styling and\npositioning are automatically added."
        },
        "SemanticSelect": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Select"
            }, {
                "name": "selectedKey",
                "documentation": "See sap.m.Select"
            }, {
                "name": "selectedItem",
                "documentation": "See sap.m.Select"
            }, {
                "name": "change",
                "documentation": "See sap.m.Select:change"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticControl",
            "documentation": "A semantic select is a sap.m.Select eligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "SemanticToggleButton": {
            "attributes": [{
                "name": "pressed",
                "documentation": "The property is “true” when the control is toggled. The default state of this property is \"false\"."
            }, {
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A SemanticToggleButton is eligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "SendEmailAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A SendEmailAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "SendMessageAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A SendMessageAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "ShareInJamAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A ShareInJamAction button has default semantic-specific properties and is\neligible for aggregation content of a sap.m.semantic.SemanticPage."
        },
        "ShareMenuPage": {
            "attributes": [{
                "name": "title",
                "documentation": "See sap.m.Page"
            }, {
                "name": "titleLevel",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showNavButton",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showSubHeader",
                "documentation": "See sap.m.Page"
            }, {
                "name": "enableScrolling",
                "documentation": "See sap.m.Page"
            }, {
                "name": "showFooter",
                "documentation": "Hides or shows the page footer"
            }, {
                "name": "floatingFooter",
                "documentation": "Determines whether the floating footer behavior is enabled.\nIf set to true, the content is visible when it's underneath the footer."
            }, {
                "name": "semanticRuleSet",
                "documentation": "Declares the type of semantic ruleset that will govern the styling and positioning of semantic content."
            }, {
                "name": "backgroundDesign",
                "documentation": "Determines the backgound color of the page. For more\ninformation, see sap.m.Page."
            }, {
                "name": "navButtonPress",
                "documentation": "See sap.m.Page"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.SemanticPage",
            "documentation": "A ShareMenuPage is a sap.m.semantic.SemanticPage with support for \"share\" menu in the footer."
        },
        "SortAction": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Button"
            }, {
                "name": "press",
                "documentation": "See sap.m.Button"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticButton",
            "documentation": "A SortAction is a sap.m.Button control enhanced with styling according to the semantics of a common \"Sort\" action. A SortAction cannot be used independently but only as aggregation content of a sap.m.semantic.SemanticPage. Your app should listen to the press event of sap.m.semantic.SortAction in order to trigger the display of the sorting options. If your sorting options are a simple list of items and require single choice only, then you can consider using a sap.m.semantic.SortSelect instead."
        },
        "SortSelect": {
            "attributes": [{
                "name": "enabled",
                "documentation": "See sap.m.Select"
            }, {
                "name": "selectedKey",
                "documentation": "See sap.m.Select"
            }, {
                "name": "selectedItem",
                "documentation": "See sap.m.Select"
            }, {
                "name": "change",
                "documentation": "See sap.m.Select:change"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }, {
                "name": "visible",
                "documentation": "See sap.ui.core.Control"
            }],
            "extendsElement": "sap.m.SemanticSelect",
            "documentation": "A SortSelect is a sap.m.Select control enhanced with styling according to the semantics of a common \"Sort\" acton. A SortSelect cannot be used independently but only as aggregation content of a sap.m.semantic.SemanticPage. The sorting options should be added to the items aggregation of sap.m.semantic.SortSelect and will be displayed as a pop-up list with support for single-item selection.\nIf this simple popup list is not sufficient for your use case, you can implement your own custom dialog by using sap.m.semantic.SortAction to trigger the dialog opening."
        }
    },
    "sap.tnt": {
        "InfoLabel": {
            "attributes": [{
                "name": "text",
                "documentation": "Specifies the text inside the InfoLabel control."
            }, {
                "name": "renderMode",
                "documentation": "Specifies the type of the InfoLabel paddings - loose or narrow.\nNote: By default the padding is loose. It is recommended to use narrow (smaller) paddings for numeric texts."
            }, {
                "name": "colorScheme",
                "documentation": "Specifies the fill and text color of the control. Accepts a digit as a value.\nYou can choose from 9 predefined background and text color combinations.\nThe color schemes are non-semantic, you can select them according to your own preferences.\nThe default colorScheme is 7."
            }, {
                "name": "width",
                "documentation": "Specifies the width of the InfoLabel control. By default, the InfoLabel control has the width of the content. Set this property to restrict the width to a custom value."
            }, {
                "name": "displayOnly",
                "documentation": "Determines if the InfoLabel is in displayOnly mode.\nWhen set to true the control size adjusts to fit other controls, for example non-editable Forms."
            }, {
                "name": "textDirection",
                "documentation": "Available options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The InfoLabel is a small non-interactive control which contains text information and non-semantic color chosen from a list of predefined color schemes. It serves the purpose to attract the user attention to some piece of information (state, quantity, condition, etc.). Overview The control visualizes text information without user interaction. The text inside the control is always in upper case. It can have smaller or larger side paddings which can be specified by the renderMode property.\nThe text-background color pair can be changed by setting a digit between 1 and 9 that corresponds to the 9 predefined color combinations of the colorScheme property.\nThe control is designed to be vertically aligned with UI5 Input and Button control families.\nWhen using InfoLabel in non-editable Forms, Tables, etc., set displayOnly=true for best visual results. Limitations\n\nIf the text is longer than the width of the control, it doesn’t wrap. Instead, it’s represented as ellipsis. \nWhen truncated, the full text in the control is not visible. Therefore, it’s recommended to make more space for longer items to be fully displayed.\nColors are not semantic and have no visual representation in sap_belize_hcb and sap_belize_hcw themes.\nThe control shows plain text only, formatting is not visualized.\n"
        },
        "NavigationList": {
            "attributes": [{
                "name": "width",
                "documentation": "Specifies the width of the control."
            }, {
                "name": "expanded",
                "documentation": "Specifies if the control is in expanded or collapsed mode."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "selectedItem",
                "documentation": "The currently selected NavigationListItem."
            }, {
                "name": "itemSelect",
                "documentation": "Fired when an item is selected."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The NavigationList control is an interactive control, which provides a choice of\ndifferent items, ordered as a list."
        },
        "NavigationListItem": {
            "attributes": [{
                "name": "icon",
                "documentation": "Specifies the icon for the item."
            }, {
                "name": "expanded",
                "documentation": "Specifies if the item is expanded."
            }, {
                "name": "hasExpander",
                "documentation": "Specifies if the item has an expander."
            }, {
                "name": "visible",
                "documentation": "Specifies if the item should be shown."
            }, {
                "name": "select",
                "documentation": "Fired when this item is selected."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "The NavigationListItem control represents an action, which can be selected by the user.\nIt can provide sub items."
        },
        "SideNavigation": {
            "attributes": [{
                "name": "expanded",
                "documentation": "Specifies if the control is expanded."
            }, {
                "name": "selectedItem",
                "documentation": "The selected NavigationListItem."
            }, {
                "name": "itemSelect",
                "documentation": "Fired when an item is selected."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The SideNavigation control is a container, which consists of flexible and fixed parts on top of each other.\nResponsive Behavior\n\nThe flexible part adapts its size to the fixed one.\nThe flexible part has a scrollbar when the content is larger than the available space.\n\nNote: In order for the SideNavigation to stretch properly, its parent layout control should only be the sap.tnt.ToolPage."
        },
        "ToolHeader": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the control.\nBy default, Toolbar is a block element. If the width is not explicitly set, the control will assume its natural size."
            }, {
                "name": "active",
                "documentation": "Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive."
            }, {
                "name": "enabled",
                "documentation": "Sets the enabled property of all controls defined in the content aggregation.\nNote: This property does not apply to the toolbar itself, but rather to its items."
            }, {
                "name": "height",
                "documentation": "Defines the height of the control. By default, the height\nproperty depends on the used theme and the design property. Note: It is not recommended to use this property if the\nsapMTBHeader-CTX class is used"
            }, {
                "name": "design",
                "documentation": "Defines the toolbar design. Note: Design settings are theme-dependent. They also determine the default height of the toolbar."
            }, {
                "name": "style",
                "documentation": "Defines the visual style of the Toolbar. Note: The visual styles are theme-dependent."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks on the toolbar, if the Active property is set to \"true\"."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control.\nBy default, Toolbar is a block element. If the width is not explicitly set, the control will assume its natural size."
            }, {
                "name": "active",
                "documentation": "Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive."
            }, {
                "name": "enabled",
                "documentation": "Sets the enabled property of all controls defined in the content aggregation.\nNote: This property does not apply to the toolbar itself, but rather to its items."
            }, {
                "name": "height",
                "documentation": "Defines the height of the control. By default, the height\nproperty depends on the used theme and the design property. Note: It is not recommended to use this property if the\nsapMTBHeader-CTX class is used"
            }, {
                "name": "design",
                "documentation": "Defines the toolbar design. Note: Design settings are theme-dependent. They also determine the default height of the toolbar."
            }, {
                "name": "style",
                "documentation": "Defines the visual style of the Toolbar. Note: The visual styles are theme-dependent."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks on the toolbar, if the Active property is set to \"true\"."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.OverflowToolbar",
            "documentation": "The ToolHeader control is a horizontal container that is most\ncommonly used to display buttons, labels, and other various input controls.\nOverview\nThe ToolHeader control is based on sap.m.OverflowToolbar. It contains clearly structured menus of commands that are available across the various apps within the same tool layout.\nUsage\n\nIf an app implements side navigation in addition to the tool header menu, the menu icon must be the first item on the left-hand side of the tool header.\nThe app menu and the side navigation must not have any dependencies and must work independently.\n"
        },
        "ToolHeaderUtilitySeparator": {
            "attributes": [{
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The ToolHeaderUtilitySeparator control is used in the sap.tnt.ToolHeader control\nto specify where the overflow button is placed."
        },
        "ToolPage": {
            "attributes": [{
                "name": "sideExpanded",
                "documentation": "Indicates if the side area is expanded. Overrides the expanded property of the sideContent aggregation."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The ToolPage is a layout control, used to create a basic tools app that has a header, side navigation and contents area.\nOverview\nThe control has three main areas - a header on top, navigation to the side and a content are that can hold any control. The header and side navigation use custom controls\n- sap.tnt.ToolHeader and sap.tnt.SideNavigation.\nUsage\nThe main usage for the asp.tnt controls is for scenarios in the tooling or administration space."
        }
    },
    "sap.ui.commons": {
        "Accordion": {
            "attributes": [{
                "name": "width",
                "documentation": "When the specified width is less than the width of a section content, a horizontal scroll bar is provided."
            }, {
                "name": "openedSectionsId",
                "documentation": "Section IDs that are opened by default at application start"
            }, {
                "name": "sectionOpen",
                "documentation": "Event is triggered when the user opens a section."
            }, {
                "name": "sectionClose",
                "documentation": "Event is triggered when the user closes a section."
            }, {
                "name": "sectionsReorder",
                "documentation": "Event is triggered when the user changes the position of a section."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Contains N sections, acting as containers for any library control"
        },
        "AccordionSection": {
            "attributes": [{
                "name": "maxHeight",
                "documentation": "When the section content exceeds maxHeight, a vertical scroll bar appears."
            }, {
                "name": "enabled",
                "documentation": "It is required that the used theme supports the control."
            }, {
                "name": "collapsed",
                "documentation": "It is recommended to adjust the settings for the width when the section is set to 'collapsed'."
            }, {
                "name": "title",
                "documentation": "Text for the section header"
            }, {
                "name": "scroll",
                "documentation": "Event is fired when the user scrolls the panel"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Represents a panel which is a container for other controls. The container does not have any layout function."
        },
        "ApplicationHeader": {
            "attributes": [{
                "name": "logoSrc",
                "documentation": "Path (src) to the logo icon to be displayed in the application header."
            }, {
                "name": "logoText",
                "documentation": "The text that will be displayed beside the logo in the application header. This property is optional."
            }, {
                "name": "displayLogoff",
                "documentation": "Determines if the logoff area will be displayed at the right hand side of the application header."
            }, {
                "name": "userName",
                "documentation": "User name that will be displayed beside the welcome text"
            }, {
                "name": "displayWelcome",
                "documentation": "Determines if the welcome text is displayed"
            }, {
                "name": "logoff",
                "documentation": "Fires an event to log off the user from the application.\nNo parameters."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The application header control stands on the top of any application page. It consists of 4 areas: Logo area, Function area provided by application, Search area, Logout area."
        },
        "Area": {
            "attributes": [{
                "name": "shape",
                "documentation": "The value is a string and can be 'rect' for rectangle, 'poly' for poligon, 'circle', or default."
            }, {
                "name": "coords",
                "documentation": "Coordinates of the area"
            }, {
                "name": "href",
                "documentation": "Hyper link that is executed when the area is clicked"
            }, {
                "name": "alt",
                "documentation": "Alternative text that is displayed in the case the image is not available"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Used for defining areas in an image map. At runtime, the user can trigger an action, or start a URL, from the single image areas."
        },
        "AutoComplete": {
            "attributes": [{
                "name": "enableScrolling",
                "documentation": "Determines whether scrolling should be enabled when the number of items is higher than maxPopupItems.\nIf set to false only the first n items (n=maxPopupItems) are shown."
            }, {
                "name": "suggest",
                "documentation": "Fired when the user has changed the value and a suggestion list update should occur."
            }, {
                "name": "maxPopupItems",
                "documentation": "Defines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided."
            }, {
                "name": "displaySecondaryValues",
                "documentation": "Indicates whether the additionalText property that is available for sap.ui.core.ListItem shall be displayed in the list."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. If the value has no corresponding item the key is empty. If duplicate keys exists the first item matching the key is used. If the key is set to a not existing value it will not be changed."
            }, {
                "name": "selectedItemId",
                "documentation": "Id of the selected item. If the value has no corresponding item, the selectedItemId is empty. If the selectedItemId is set to a not existing item, it will not be changed."
            }, {
                "name": "listBox",
                "documentation": "Using this method, you provide a ListBox control. This allows reuse of item lists in different controls. Either a control id can be used as new target, or a control instance. Note: The ListBox must not be rendered somewhere in the UI. But if you want to bind the ListBox items to a model it must be in the control tree.\nSo we suggest to add it as dependent somewhere (e.g. to the view or the first used ComboBox). If it is not set as child or dependant to an other control it will be automatically set as dependent to the first ComboBox where it is assigned."
            }, {
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.ComboBox",
            "documentation": "Textfield with list based text completion."
        },
        "Button": {
            "attributes": [{
                "name": "text",
                "documentation": "Button text displayed at runtime."
            }, {
                "name": "enabled",
                "documentation": "Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings."
            }, {
                "name": "width",
                "documentation": "Control width as common CSS-size (px or % as unit, for example)"
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service"
            }, {
                "name": "icon",
                "documentation": "Icon to be displayed as graphical element within the button.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "iconHovered",
                "documentation": "Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconSelected",
                "documentation": "Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconFirst",
                "documentation": "If set to true (default), the display sequence is 1. icon 2. control text ."
            }, {
                "name": "height",
                "documentation": "Specifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer."
            }, {
                "name": "styled",
                "documentation": "Indicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass."
            }, {
                "name": "lite",
                "documentation": "The button is rendered as lite button."
            }, {
                "name": "style",
                "documentation": "Style of the button.\n(e.g. emphasized)"
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user presses the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Enables users to trigger actions such as save or print. For the button UI, you can define some text or an icon, or both."
        },
        "Callout": {
            "attributes": [{
                "name": "open",
                "documentation": "The event is fired when the popup is opened."
            }, {
                "name": "close",
                "documentation": "Event is fired when the Callout window is closed."
            }, {
                "name": "beforeOpen",
                "documentation": "Event is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content"
            }, {
                "name": "opened",
                "documentation": "Is fired when the Callout has been opened"
            }, {
                "name": "text",
                "documentation": "The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip."
            }, {
                "name": "openDuration",
                "documentation": "Optional. Open Duration in milliseconds."
            }, {
                "name": "closeDuration",
                "documentation": "Optional. Close Duration in milliseconds."
            }, {
                "name": "myPosition",
                "documentation": "Optional. My position defines which position on the extended tooltip being positioned to align with the target control."
            }, {
                "name": "atPosition",
                "documentation": "Optional. At position defines which position on the target control to align the positioned tooltip."
            }, {
                "name": "offset",
                "documentation": "Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\"."
            }, {
                "name": "collision",
                "documentation": "Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position."
            }, {
                "name": "openDelay",
                "documentation": "Opening delay of the tooltip in milliseconds"
            }, {
                "name": "closeDelay",
                "documentation": "Closing delay of the tooltip in milliseconds"
            }, {
                "name": "closed",
                "documentation": "This event is fired when the Tooltip has been closed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.CalloutBase",
            "documentation": "Callout is a small popup with some useful information and links that is shown when a mouse is hovered over a specific view element."
        },
        "CalloutBase": {
            "attributes": [{
                "name": "open",
                "documentation": "The event is fired when the popup is opened."
            }, {
                "name": "close",
                "documentation": "Event is fired when the Callout window is closed."
            }, {
                "name": "beforeOpen",
                "documentation": "Event is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content"
            }, {
                "name": "opened",
                "documentation": "Is fired when the Callout has been opened"
            }, {
                "name": "text",
                "documentation": "The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip."
            }, {
                "name": "openDuration",
                "documentation": "Optional. Open Duration in milliseconds."
            }, {
                "name": "closeDuration",
                "documentation": "Optional. Close Duration in milliseconds."
            }, {
                "name": "myPosition",
                "documentation": "Optional. My position defines which position on the extended tooltip being positioned to align with the target control."
            }, {
                "name": "atPosition",
                "documentation": "Optional. At position defines which position on the target control to align the positioned tooltip."
            }, {
                "name": "offset",
                "documentation": "Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\"."
            }, {
                "name": "collision",
                "documentation": "Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position."
            }, {
                "name": "openDelay",
                "documentation": "Opening delay of the tooltip in milliseconds"
            }, {
                "name": "closeDelay",
                "documentation": "Closing delay of the tooltip in milliseconds"
            }, {
                "name": "closed",
                "documentation": "This event is fired when the Tooltip has been closed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.TooltipBase",
            "documentation": "CalloutBase is a building block for Callout. Do not use it directly. Use the Callout control instead"
        },
        "Carousel": {
            "attributes": [{
                "name": "orientation",
                "documentation": "Determines the orientation of the Carousel. Can be either \"horizontal\" or \"vertical\""
            }, {
                "name": "width",
                "documentation": "Determines the width of the Carousel"
            }, {
                "name": "height",
                "documentation": "Determines the height of the Carousel"
            }, {
                "name": "defaultItemHeight",
                "documentation": "Default height of the item in a carousel if no height can be determined"
            }, {
                "name": "defaultItemWidth",
                "documentation": "Default width of the item in a carousel if no height can be determined"
            }, {
                "name": "animationDuration",
                "documentation": "Duration for animation when navigating through the contents of the Carousel"
            }, {
                "name": "visibleItems",
                "documentation": "If defined, the carousel displays the number of items defined. Items will be resized to fit the area."
            }, {
                "name": "handleSize",
                "documentation": "Determines the size of the handle in pixels. (Height for vertical carousel, width for horizontal carousel)"
            }, {
                "name": "firstVisibleIndex",
                "documentation": "The index of the element in the content aggreation which is displayed first on rendering"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Carousel holds multiple controls and displays them vertically or horizontally next to each other. You can define how many content items should be displayed at once or let the Carousel determine that for you. Navigation is done through buttons or keys."
        },
        "CheckBox": {
            "attributes": [{
                "name": "checked",
                "documentation": "Contains the state of the control whether it is flagged with a check mark, or not"
            }, {
                "name": "text",
                "documentation": "Defines the text displayed next to the check box"
            }, {
                "name": "enabled",
                "documentation": "Using this property, the control could be disabled, if required."
            }, {
                "name": "editable",
                "documentation": "Specifies whether the user shall be allowed to select the check box."
            }, {
                "name": "valueState",
                "documentation": "Accepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'."
            }, {
                "name": "width",
                "documentation": "The width can be set to an absolute value. If no value is set, the control width results from the text length."
            }, {
                "name": "textDirection",
                "documentation": "The value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control."
            }, {
                "name": "name",
                "documentation": "The 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is triggered when the control status is changed by the user by flagging or unflagging the checkbox."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Provides a box which can be flagged, the box has a label. A check box can either stand alone, or in a group with other check boxes. As an option, the boxes can initially be set to status 'Not Editable'."
        },
        "ColorPicker": {
            "attributes": [{
                "name": "colorString",
                "documentation": "Determines the input parameter that can be a string of type HEX, RGB, HSV, or a CSS color name:\n\nHEX - \nRGB - rgb(255,255,255)\nHSV - hsv(360,100,100)\nCSS - red\n\nNote: The output parameter is an RGB string of the current color."
            }, {
                "name": "mode",
                "documentation": "Determines the color mode of the ColorPicker."
            }, {
                "name": "change",
                "documentation": "Fired when the value is changed by user action. Note: When the user action is mouse dragging, the\nchange event fires on the mouseup event."
            }, {
                "name": "liveChange",
                "documentation": "Fired when the value is changed during the mouse move. Note: When the user action is mouse move, the liveChange\nevent is fired during the mousedown event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.unified.ColorPicker",
            "documentation": "This control gives the user the opportunity to choose a color. The color can be defined using HEX-, RGB- or HSV-values or a CSS colorname."
        },
        "ComboBox": {
            "attributes": [{
                "name": "maxPopupItems",
                "documentation": "Defines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided."
            }, {
                "name": "displaySecondaryValues",
                "documentation": "Indicates whether the additionalText property that is available for sap.ui.core.ListItem shall be displayed in the list."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. If the value has no corresponding item the key is empty. If duplicate keys exists the first item matching the key is used. If the key is set to a not existing value it will not be changed."
            }, {
                "name": "selectedItemId",
                "documentation": "Id of the selected item. If the value has no corresponding item, the selectedItemId is empty. If the selectedItemId is set to a not existing item, it will not be changed."
            }, {
                "name": "listBox",
                "documentation": "Using this method, you provide a ListBox control. This allows reuse of item lists in different controls. Either a control id can be used as new target, or a control instance. Note: The ListBox must not be rendered somewhere in the UI. But if you want to bind the ListBox items to a model it must be in the control tree.\nSo we suggest to add it as dependent somewhere (e.g. to the view or the first used ComboBox). If it is not set as child or dependant to an other control it will be automatically set as dependent to the first ComboBox where it is assigned."
            }, {
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.TextField",
            "documentation": "The control provides a field that allows end users to either enter some text, or to choose an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete ListBox, single ListItems."
        },
        "DatePicker": {
            "attributes": [{
                "name": "locale",
                "documentation": "Defines the locale (language and country), e.g. \"en-US\", whose translations and Date formatters should be used to render the DatePicker.If the value property is bound to a model using a Date type the locale will be ignored, because the locale information of the model are used."
            }, {
                "name": "yyyymmdd",
                "documentation": "Defines the date as a \"yyyymmdd\" string, independent from the format used. The inherited textField \"value\" attribute uses the date format as configured via the locale.\nThe date is interpreted as gregorian date"
            }, {
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.TextField",
            "documentation": "Allows end users to interact with dates.\nEntries can directly be written in, or selected from a calendar pad.\nNote: Dates can always be manually entered in the fix YYYYMMDD format, on top of the flexible \"locale\" format.\nIf the value is provided via data binding, using a Date.type the formatter of the Date.type is used.\nSince version 1.22 the unified.Calendar is used inside the datePicker. So applications using the DatePicker should load the unified library. Otherwise it will be loaded the first time a DatePicker is opened."
        },
        "Dialog": {
            "attributes": [{
                "name": "width",
                "documentation": "Outer width of dialog window. When not set and not constrained by one of the width parameters (minWidth/maxWidth), the window size is automatically adapted to the content."
            }, {
                "name": "height",
                "documentation": "Outer height of dialog window. When not set and not constrained by one of the height parameters (minHeight/maxHeight), the window size is automatically adapted to the content."
            }, {
                "name": "scrollLeft",
                "documentation": "Scroll position from left to right. \"0\" means leftmost position."
            }, {
                "name": "scrollTop",
                "documentation": "Scroll position from top to bottom. \"0\" means topmost position."
            }, {
                "name": "title",
                "documentation": "Dialog title displayed in the header."
            }, {
                "name": "applyContentPadding",
                "documentation": "Padding is theme-dependent. When set to \"false\", the content extends to the dialog borders."
            }, {
                "name": "showCloseButton",
                "documentation": "Displays a close button in the title bar."
            }, {
                "name": "resizable",
                "documentation": "Specifies whether the dialog window can be resized by the user. The dialog frame contains the visual symbol."
            }, {
                "name": "minWidth",
                "documentation": "Minimum outer width of the dialog window. When set, neither the user nor some layout settings can make the window smaller."
            }, {
                "name": "minHeight",
                "documentation": "Minimum outer height of the dialog window. When set, neither the user nor some layout settings can make the window smaller."
            }, {
                "name": "maxWidth",
                "documentation": "Maximum outer width of the dialog window. If set, neither the user nor some layout settings can make the window larger."
            }, {
                "name": "maxHeight",
                "documentation": "Maximum outer height of the dialog window. If set, neither the user nor some layout settings can make the window larger."
            }, {
                "name": "contentBorderDesign",
                "documentation": "Specifies the border design. Border design is theme dependent."
            }, {
                "name": "modal",
                "documentation": "Specifies whether the dialog should be modal, or not. In case of true the focus is kept inside the dialog."
            }, {
                "name": "accessibleRole",
                "documentation": "The ARIA role for the control. E.g. for alert-style Dialogs this can be set to \"AlertDialog\"."
            }, {
                "name": "keepInWindow",
                "documentation": "Specifies whether Dialog movement should be restricted to the visible area of the window. This only affects drag&drop movements by the user. This doesn't affect modal dialogs -> modal dialogs always stay in the window."
            }, {
                "name": "autoClose",
                "documentation": "If this property is set to true the Dialog will close if the Dialog loses its focus"
            }, {
                "name": "defaultButton",
                "documentation": "Defines one of the buttons that have been provided via button aggregation to be the default button. This default button is initially selected, if no control is set via the initialFocus association explicitly. The default button is activated when Enter is pressed in the context of the dialog and when the currently selected element does not handle the Enter event itself."
            }, {
                "name": "initialFocus",
                "documentation": "Defines the control that shall get the focus when the dialog is opened."
            }, {
                "name": "closed",
                "documentation": "Event is fired when the dialog has been closed (after closing-animation etc.). Event parameters provide information about last position and last size."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "An interactive window appearing on request displaying information to the user. The API supports features such as popups with fixed sizes, popups with unlimited width, scrolling bars for large windows, and control nesting (for example, a drop-down list can be included in the window)."
        },
        "DropdownBox": {
            "attributes": [{
                "name": "searchHelpEnabled",
                "documentation": "Whether the DropdownBox's search help should be enabled."
            }, {
                "name": "searchHelpText",
                "documentation": "(optional) The text to use for the search help entry."
            }, {
                "name": "searchHelpAdditionalText",
                "documentation": "(optional) The additional Text to use for the search help entry."
            }, {
                "name": "searchHelpIcon",
                "documentation": "(optional) The URI of the icon to use for the search help entry."
            }, {
                "name": "maxHistoryItems",
                "documentation": "Maximum number of history items in the list. If 0 no history is displayed or stored. The history is locally stored on the client.\nTherefore do not activate this feature when this control handles confidential data."
            }, {
                "name": "searchHelp",
                "documentation": "Event fired whenever the configured searchHelpItem is clicked or the searchHelpItem is configured and F4 key is pressed."
            }, {
                "name": "maxPopupItems",
                "documentation": "Defines the number of items that shall be displayed at once. If the overall number of items is higher than this setting, a scrollbar is provided."
            }, {
                "name": "displaySecondaryValues",
                "documentation": "Indicates whether the additionalText property that is available for sap.ui.core.ListItem shall be displayed in the list."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. If the value has no corresponding item the key is empty. If duplicate keys exists the first item matching the key is used. If the key is set to a not existing value it will not be changed."
            }, {
                "name": "selectedItemId",
                "documentation": "Id of the selected item. If the value has no corresponding item, the selectedItemId is empty. If the selectedItemId is set to a not existing item, it will not be changed."
            }, {
                "name": "listBox",
                "documentation": "Using this method, you provide a ListBox control. This allows reuse of item lists in different controls. Either a control id can be used as new target, or a control instance. Note: The ListBox must not be rendered somewhere in the UI. But if you want to bind the ListBox items to a model it must be in the control tree.\nSo we suggest to add it as dependent somewhere (e.g. to the view or the first used ComboBox). If it is not set as child or dependant to an other control it will be automatically set as dependent to the first ComboBox where it is assigned."
            }, {
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.ComboBox",
            "documentation": "The control provides a field that allows end users to an entry out of a list of pre-defined items.\nThe choosable items can be provided in the form of a complete ListBox, single ListItems."
        },
        "FileUploader": {
            "attributes": [{
                "name": "value",
                "documentation": "Value of the path for file upload."
            }, {
                "name": "enabled",
                "documentation": "Disabled controls have different colors, depending on customer settings."
            }, {
                "name": "uploadUrl",
                "documentation": "Used when URL address is on a remote server."
            }, {
                "name": "name",
                "documentation": "Unique control name for identification on the server side after sending data to the server."
            }, {
                "name": "width",
                "documentation": "Specifies the displayed control width."
            }, {
                "name": "uploadOnChange",
                "documentation": "If set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered."
            }, {
                "name": "additionalData",
                "documentation": "Additional data that is sent to the back end service. Data will be transmitted as value of a hidden input where the name is derived from the name property with suffix -data."
            }, {
                "name": "sameFilenameAllowed",
                "documentation": "If the FileUploader is configured to upload the file directly after the file is selected it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\". A typical use case would be if the files have different paths."
            }, {
                "name": "buttonText",
                "documentation": "The Button text can be overwritten using this property."
            }, {
                "name": "fileType",
                "documentation": "The chosen files will be checked against an array of file types. If at least one file does not fit the file type restriction the upload is prevented.\nExample: [\"jpg\", \"png\", \"bmp\"]."
            }, {
                "name": "multiple",
                "documentation": "Allows multiple files to be chosen and uploaded from the same folder. This property is not supported by Internet Explorer 9."
            }, {
                "name": "maximumFileSize",
                "documentation": "A file size limit in megabytes which prevents the upload if at least one file exceeds it. This property is not supported by Internet Explorer 9."
            }, {
                "name": "mimeType",
                "documentation": "The chosen files will be checked against an array of mime types. If at least one file does not fit the mime type restriction the upload is prevented. This property is not supported by Internet Explorer 9.\nExample: mimeType [\"image/png\", \"image/jpeg\"]."
            }, {
                "name": "sendXHR",
                "documentation": "If set to \"true\", the request will be sent as XHR request instead of a form submit. This property is not supported by Internet Explorer 9."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "style",
                "documentation": "Style of the button. \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" is allowed."
            }, {
                "name": "buttonOnly",
                "documentation": "If set to \"true\", the FileUploader will be rendered as Button only, without showing the InputField."
            }, {
                "name": "useMultipart",
                "documentation": "If set to \"false\", the request will be sent as file only request instead of a multipart/form-data request. Only one file could be uploaded using this type of request. Required for sending such a request is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9."
            }, {
                "name": "maximumFilenameLength",
                "documentation": "The maximum length of a filename which the FileUploader will accept. If the maximum filename length is exceeded, the corresponding Event 'filenameLengthExceed' is fired."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success, None."
            }, {
                "name": "valueStateText",
                "documentation": "Custom text for the value state message pop-up. Note: If not specified, a default text, based on the value state type, will be used instead."
            }, {
                "name": "icon",
                "documentation": "Icon to be displayed as graphical element within the button.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "iconHovered",
                "documentation": "Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconSelected",
                "documentation": "Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconFirst",
                "documentation": "If set to true (default), the display sequence is 1. icon 2. control text."
            }, {
                "name": "iconOnly",
                "documentation": "If set to true, the button is displayed without any text."
            }, {
                "name": "change",
                "documentation": "Event is fired when the value of the file path has been changed."
            }, {
                "name": "uploadComplete",
                "documentation": "Event is fired as soon as the upload request is completed (either successful or unsuccessful). To see if the upload request was successful, check the 'state' parameter for a value 2xx.\nThe uploads actual progress can be retrieved via the 'uploadProgress' Event.\nHowever this covers only the client side of the Upload process and does not give any success status from the server."
            }, {
                "name": "typeMissmatch",
                "documentation": "Event is fired when the type of a file does not match the mimeType or fileType property."
            }, {
                "name": "fileSizeExceed",
                "documentation": "Event is fired when the size of a file is above the maximumFileSize property.\nThis event is not supported by Internet Explorer 9 (same restriction as for the property maximumFileSize)."
            }, {
                "name": "fileAllowed",
                "documentation": "Event is fired when the file is allowed for upload on client side."
            }, {
                "name": "uploadProgress",
                "documentation": "Event is fired after the upload has started and before the upload is completed and contains progress information related to the running upload.\nDepending on file size, band width and used browser the event is fired once or multiple times.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9."
            }, {
                "name": "uploadAborted",
                "documentation": "Event is fired after the current upload has been aborted.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9."
            }, {
                "name": "filenameLengthExceed",
                "documentation": "Event is fired, if the filename of a chosen file is longer than the value specified with the maximumFilenameLength property."
            }, {
                "name": "uploadStart",
                "documentation": "Event is fired before an upload is started."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.unified.FileUploader",
            "documentation": "The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths."
        },
        "FileUploaderParameter": {
            "attributes": [{
                "name": "name",
                "documentation": "The name of the hidden inputfield."
            }, {
                "name": "value",
                "documentation": "The value of the hidden inputfield."
            }],
            "extendsElement": "sap.ui.unified.FileUploaderParameter",
            "documentation": "Represents a parameter for the FileUploader which is rendered as a hidden inputfield."
        },
        "FormattedTextView": {
            "attributes": [{
                "name": "accessibleRole",
                "documentation": "The ARIA role for the control."
            }, {
                "name": "htmlText",
                "documentation": "Determines text with placeholders."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The FormattedTextView control allows the usage of a limited set of HTML tags for display."
        },
        "HorizontalDivider": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the divider."
            }, {
                "name": "type",
                "documentation": "Defines the type of the divider."
            }, {
                "name": "height",
                "documentation": "Defines the height of the divider."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Divides the screen in visual areas."
        },
        "Image": {
            "attributes": [{
                "name": "src",
                "documentation": "Relative or absolute path to URL where the image file is stored."
            }, {
                "name": "width",
                "documentation": "When the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio."
            }, {
                "name": "height",
                "documentation": "When the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the overall size is maintained then, considering the aspect ratio."
            }, {
                "name": "decorative",
                "documentation": "A decorative image is included for design reasons. Accessibility tools will ignore decorative images.\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative."
            }, {
                "name": "alt",
                "documentation": "The alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored."
            }, {
                "name": "useMap",
                "documentation": "The name of the image map that defines the clickable areas"
            }, {
                "name": "press",
                "documentation": "Event is fired when the user clicks on the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A wrapper around the IMG tag. The image can be loaded from a remote or local server.\nThere are various size setting options available, and the images can be combined with actions."
        },
        "ImageMap": {
            "attributes": [{
                "name": "name",
                "documentation": "Name for the image that serves as reference"
            }, {
                "name": "press",
                "documentation": "Event for the areas that can be clicked in an ImageMap"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Combination of image areas where at runtime these areas are starting points for hyperlinks or actions"
        },
        "InPlaceEdit": {
            "attributes": [{
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the InPlaceEdit. Possible values: Warning, Error, Success.\nIf the content control has an own valueState property this will be used."
            }, {
                "name": "undoEnabled",
                "documentation": "If undo is enabled after changing the text an undo button appears."
            }, {
                "name": "design",
                "documentation": "Defines the visual appearance of the control.\nCurrently this is not supported for Labels."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the InPlaceEdit or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the InPlaceEdit and returns the currently entered value. This is not the content of the value property. The value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The InPlaceEdit is a functionality to have text in display mode that can be changed in place."
        },
        "Label": {
            "attributes": [{
                "name": "design",
                "documentation": "Defines whether the labels are in bold format."
            }, {
                "name": "textDirection",
                "documentation": "Determines the text direction - right-to-left (RTL) and left-to-right (LTR)."
            }, {
                "name": "wrapping",
                "documentation": "Specifies whether a line wrapping width shall be displayed when the text value is longer than the width is."
            }, {
                "name": "width",
                "documentation": "Determines the control width as common CSS-size (for example, px or % as unit)."
            }, {
                "name": "text",
                "documentation": "Determines the text to be displayed."
            }, {
                "name": "icon",
                "documentation": "Determines the icon to be displayed in the control.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "textAlign",
                "documentation": "Determines the alignment of the text. Available options are Begin, Center, End, Left, and Right."
            }, {
                "name": "required",
                "documentation": "Allows to enforce the required indicator even when the associated control doesn't have a getRequired method (a required property) or when the flag is not set.\nIf the associated control has a required property, the values of both required flags are combined with the OR operator, so a Label can't override a required=true value."
            }, {
                "name": "requiredAtBegin",
                "documentation": "Determines whether the required indicator is at the beginning of the label (if set) or at the end (if not set)."
            }, {
                "name": "labelFor",
                "documentation": "Defines the association to the labeled control.\nBy default, the label is set the for the attribute to the ID of the labeled control.\nThis can be changed with the implementation of function getIdForLabel on the labelled control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The control is used for labeling other controls. The API provides formatting options, for example, for bold display or alignment. A label can have an icon."
        },
        "Link": {
            "attributes": [{
                "name": "text",
                "documentation": "Link text to be displayed."
            }, {
                "name": "enabled",
                "documentation": "Whether the link can be triggered by the user."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "href",
                "documentation": "The link target URI. Supports standard hyperlink behavior. If an action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered."
            }, {
                "name": "target",
                "documentation": "Options are _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered."
            }, {
                "name": "width",
                "documentation": "Width of text link. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text defines the size."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user clicks the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Provides an absolute or relative reference to an internal or external URL. The classical target parameters are supported.\nAnother usage scenario is triggering an action, for example to open a popup window. In both cases, the link is a hypertext link."
        },
        "ListBox": {
            "attributes": [{
                "name": "editable",
                "documentation": "Determines whether the ListBox is interactive or not.\nCan be used to disable interaction with mouse or keyboard."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the ListBox is enabled or not.\nCan be used to disable interaction with mouse or keyboard.\nDisabled controls have another color display depending on custom settings."
            }, {
                "name": "allowMultiSelect",
                "documentation": "Determines whether multiple selection is allowed."
            }, {
                "name": "width",
                "documentation": "Control width as common CSS-size (px or % as unit, for example)."
            }, {
                "name": "height",
                "documentation": "Control height as common CSS-size (px or % as unit, for example).\nThe setting overrides any definitions made for the setVisibleItems() method."
            }, {
                "name": "scrollTop",
                "documentation": "Scroll bar position from the top.\nSetting the scrollTop property and calling scrollToIndex are two operations\ninfluencing the same \"physical\" property, so the last call \"wins\"."
            }, {
                "name": "displayIcons",
                "documentation": "Determines whether the icons of the list items shall also be displayed.\nEnabling icons requires some space to be reserved for them.\nDisplaying icons can also influence the width and height of a single item,\nwhich affects the overall height of the ListBox when defined in number of items.\nNote that the number of icons that can be displayed in the ListBox depends on the\nsize of the icons themselves and of the total ListBox height."
            }, {
                "name": "displaySecondaryValues",
                "documentation": "Determines whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed."
            }, {
                "name": "valueTextAlign",
                "documentation": "Determines the text alignment in the primary ListBox column."
            }, {
                "name": "secondaryValueTextAlign",
                "documentation": "Determines the text alignment in the secondary ListBox text column (if available)."
            }, {
                "name": "minWidth",
                "documentation": "Determines the minimum width of the ListBox. If not set, there is no minimum width."
            }, {
                "name": "maxWidth",
                "documentation": "Determines the maximum width of the ListBox. If not set, there is no maximum width."
            }, {
                "name": "visibleItems",
                "documentation": "The ListBox height in number of items that are initially displayed without scrolling.\nThis setting overwrites height settings in terms of CSS size that have been made.\nWhen the items have different heights, the height of the first item is used for all\nother item height calculations.\nNote that if there are one or more separators between the visible ListBox items,\nthe displayed items might not relate 1:1 to the initially specified number of items.\nWhen the value is retrieved, it equals the previously set value if it was set;\notherwise, it will be the number of items completely fitting into the ListBox without\nscrolling in the case the control was already rendered.\nNote that if the control was not rendered, the behavior will be undefined,\nit may return -1 or any other number."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Event is fired when selection is changed by user interaction."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Provides a list of items from which users can choose an item.\nFor the design of the list box, features such as defining the list box height, fixing the number of visible items,\nchoosing one item to be the item that is marked by default when the list box is shown,\nor a scroll bar for large list boxes are available."
        },
        "Menu": {
            "attributes": [{
                "name": "enabled",
                "documentation": "When a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase) has no effect when the menu of the item is disabled."
            }, {
                "name": "ariaDescription",
                "documentation": "Accessible label / description of the menu for assistive technologies like screenreaders."
            }, {
                "name": "maxVisibleItems",
                "documentation": "The maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached."
            }, {
                "name": "pageSize",
                "documentation": "The keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the Home / End keys for jumping\nto the first / last item, the Page Up / Page Down keys can be used to jump an arbitrary number of items up or down. This number can be defined via the pageSize property.\nFor values smaller than 1, paging behaves in a similar way to when using the Home / End keys. If the value equals 1, the paging behavior is similar to that of the arrow keys."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Reference to accessible labels (ids of existing DOM elements or controls) for assistive technologies like screenreaders."
            }, {
                "name": "itemSelect",
                "documentation": "Fired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus.\nNote: There is also a select event available for each single menu item. This event and the event of the menu items are redundant."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.unified.Menu",
            "documentation": "A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call."
        },
        "MenuBar": {
            "attributes": [{
                "name": "enabled",
                "documentation": "When the MenuBar is not enabled, automatically all single menu items are also displayed as 'disabled'."
            }, {
                "name": "width",
                "documentation": "Specifies the width of the MenuBar"
            }, {
                "name": "design",
                "documentation": "Available design options are Header and Standard. Note that design settings are theme-dependent."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Represents a user interface area which is the entry point for menus with their menu items. MenuBar is useful for applications which shall offer a\nset of actions that shall be provided in a structured way. The MenuBar contains the menu titles from where users navigate to the single items. The control supports\nfor example long menu item texts, automated scrolling for menu items when the browser space is not large enough to display all items, defining images for single\nor all items in a menu, automated layouting of items with or w/o image, and active/non-active items."
        },
        "MenuButton": {
            "attributes": [{
                "name": "dockButton",
                "documentation": "The position / edge (see sap.ui.core.Popup.Dock) of the button where the menu is docked. Default is 'begin bottom'."
            }, {
                "name": "dockMenu",
                "documentation": "The position / edge (see sap.ui.core.Popup.Dock) of the menu which is docked to the button. Default is 'begin top'."
            }, {
                "name": "itemSelected",
                "documentation": "Event that is fired when a menu item is selected by the user"
            }, {
                "name": "text",
                "documentation": "Button text displayed at runtime."
            }, {
                "name": "enabled",
                "documentation": "Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings."
            }, {
                "name": "width",
                "documentation": "Control width as common CSS-size (px or % as unit, for example)"
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service"
            }, {
                "name": "icon",
                "documentation": "Icon to be displayed as graphical element within the button.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "iconHovered",
                "documentation": "Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconSelected",
                "documentation": "Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconFirst",
                "documentation": "If set to true (default), the display sequence is 1. icon 2. control text ."
            }, {
                "name": "height",
                "documentation": "Specifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer."
            }, {
                "name": "styled",
                "documentation": "Indicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass."
            }, {
                "name": "lite",
                "documentation": "The button is rendered as lite button."
            }, {
                "name": "style",
                "documentation": "Style of the button.\n(e.g. emphasized)"
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user presses the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.Button",
            "documentation": "Common button control that opens a menu when clicked by the user. The control provides an API for configuring the docking position\nof the menu."
        },
        "MenuItem": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the text which should be displayed on the item."
            }, {
                "name": "icon",
                "documentation": "Defines the icon of the sap.ui.core.IconPool sap.ui.core.IconPool or an image which should be displayed on the item."
            }, {
                "name": "enabled",
                "documentation": "When an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ( sap.ui.unified.Menu Menu)."
            }, {
                "name": "visible",
                "documentation": "Invisible items do not appear in the menu."
            }, {
                "name": "startsSection",
                "documentation": "Defines whether a visual separator should be rendered before the item.\nNote: If an item is invisible also the separator of this item is not shown."
            }, {
                "name": "select",
                "documentation": "Fired when the item is selected by the user.\nNote: The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu."
            }],
            "extendsElement": "sap.ui.unified.MenuItem",
            "documentation": "Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically."
        },
        "MenuTextFieldItem": {
            "attributes": [{
                "name": "label",
                "documentation": "Defines the label of the text field of the item."
            }, {
                "name": "icon",
                "documentation": "Defines the icon of the sap.ui.core.IconPool sap.ui.core.IconPool or an image which should be displayed on the item."
            }, {
                "name": "value",
                "documentation": "Defines the value of the text field of the item."
            }, {
                "name": "valueState",
                "documentation": "Defines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors."
            }, {
                "name": "enabled",
                "documentation": "When an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ( sap.ui.unified.Menu Menu)."
            }, {
                "name": "visible",
                "documentation": "Invisible items do not appear in the menu."
            }, {
                "name": "startsSection",
                "documentation": "Defines whether a visual separator should be rendered before the item.\nNote: If an item is invisible also the separator of this item is not shown."
            }, {
                "name": "select",
                "documentation": "Fired when the item is selected by the user.\nNote: The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu."
            }],
            "extendsElement": "sap.ui.unified.MenuTextFieldItem",
            "documentation": "Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation submenu (inherited from parent class) is not supported for this type of menu item."
        },
        "Message": {
            "attributes": [{
                "name": "type",
                "documentation": "\"Success\", or \"Warning\", or \"Error\" messages. (Mandatory)"
            }, {
                "name": "text",
                "documentation": "Message short text. (Mandatory)"
            }, {
                "name": "associatedElementId",
                "documentation": "Associated UI element ID. (Optional)\nFor navigation to error field."
            }, {
                "name": "design",
                "documentation": "Internal attribute, used to force the display of the \"short\" or the \"long\" text only."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Creates the \"Message\"s to be supplied to the \"MessageBar\" Control."
        },
        "MessageBar": {
            "attributes": [{
                "name": "anchorID",
                "documentation": "Element ID upon which the MessageBar will be initially positioned."
            }, {
                "name": "maxToasted",
                "documentation": "Maximum number of simultaneous messages being toasted in a row. Value '0' means this dynamic part is switched off."
            }, {
                "name": "maxListed",
                "documentation": "Maximum number of messages being displayed in the List before a scrollbar appears. Value '0' means no limit."
            }, {
                "name": "anchorSnapPoint",
                "documentation": "Type: sap.ui.core.Popup.Dock\nSnapPoint of MessageBar over anchorId.\nNote: Use \"begin\" or \"end\" for RTL support.\nNote: \"center\" is not indicated, as positioning is only set once, either via the css \"left\" or the \"right\" attribute. Therefore a MessageBar will only be extended in one direction, as Messages come in."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Creates an instance of a MessageBar Control, for displaying messages."
        },
        "MessageList": {
            "attributes": [{
                "name": "anchorId",
                "documentation": "ID of the anchor under which the MessageList will render."
            }, {
                "name": "maxListed",
                "documentation": "Maximum number of messages being display in the List before a scrollbar appears. Value '0' means no limit."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Instantiated by the \"MessageBar\" Control if the user requests to generate the corresponding \"MessageList\"."
        },
        "MessageToast": {
            "attributes": [{
                "name": "anchorId",
                "documentation": "ID of the anchor on top of which the MessageToast is to render."
            }, {
                "name": "next",
                "documentation": "Fired once the toast() method is over, so that the MessageBar can \"toast\" another message if needed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Responsible for displaying the new incoming messages, one at the time, on top of the MessageBar."
        },
        "Paginator": {
            "attributes": [{
                "name": "currentPage",
                "documentation": "Represents the current page (first page has index 1, not 0, to match the visual number)"
            }, {
                "name": "numberOfPages",
                "documentation": "Represents the overall number of pages that are embedded into the parent control"
            }, {
                "name": "page",
                "documentation": "Event is fired when the user navigates to another page by selecting it directly, or by jumping forward/backward."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Provides navigation between pages within a list of numbered pages."
        },
        "Panel": {
            "attributes": [{
                "name": "width",
                "documentation": "Determines the width of the Panel in CSS size."
            }, {
                "name": "height",
                "documentation": "Determines the height of the Panel in CSS size.\nPer default, the height for the Panel is automatically adjusted to the content.\nDimension allows to explicitly specify the height."
            }, {
                "name": "enabled",
                "documentation": "Represents the state of the of the Panel (enabled or disabled)"
            }, {
                "name": "scrollLeft",
                "documentation": "Determines the scroll position from left to right. Value \"0\" means leftmost position."
            }, {
                "name": "scrollTop",
                "documentation": "Determines the scroll position from top to bottom. Value \"0\" means topmost position."
            }, {
                "name": "applyContentPadding",
                "documentation": "Determines whether the Panel will have padding.\nPadding is theme-dependent."
            }, {
                "name": "collapsed",
                "documentation": "Determines whether the Panel will be initially collapsed.\nWhen it is initially collapsed, the contents are not rendered.\nA collapsed Panel consumes less space than an expanded one."
            }, {
                "name": "areaDesign",
                "documentation": "Determines the background color.\nNote that color settings are theme-dependent."
            }, {
                "name": "borderDesign",
                "documentation": "Determines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent."
            }, {
                "name": "showCollapseIcon",
                "documentation": "Determines whether the Panel will have an icon for collapsing/expanding, or not."
            }, {
                "name": "text",
                "documentation": "Specifies the text that is rendered in the Panel header.\nCan be used to create a simple titles that do not require an icon in the header."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Represents a container with scroll functionality, that can be used for text and controls.\nThe Panel does not layout the embedded controls."
        },
        "PasswordField": {
            "attributes": [{
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.TextField",
            "documentation": "A text field with masked characters which borrows its properties and methods from TextField."
        },
        "ProgressIndicator": {
            "attributes": [{
                "name": "enabled",
                "documentation": "Determines whether the control is enabled or not.\nDisabled controls have different colors, and can not be focused."
            }, {
                "name": "barColor",
                "documentation": "Determines the color of the bar which visualizes the progress.\nPossible values defined in the sap.ui.core.BarColor enumeration are the following:\nCRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value)."
            }, {
                "name": "displayValue",
                "documentation": "Determines the text value that will be displayed in the bar."
            }, {
                "name": "percentValue",
                "documentation": "Determines the numerical value for the displayed length of the progress bar."
            }, {
                "name": "showValue",
                "documentation": "Determines whether the percent value shall be rendered inside the bar."
            }, {
                "name": "width",
                "documentation": "Determines the width of the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Shows the progress of a process in a graphical way.\nThe indicator can be displayed with or without numerical values.\nThe filling can be displayed in color only, or additionally with the percentage rate.\nThe indicator status can be interactive."
        },
        "RadioButton": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the text displayed next to the RadioButton."
            }, {
                "name": "enabled",
                "documentation": "Displays the disabled controls in another color, depending on the customer settings."
            }, {
                "name": "editable",
                "documentation": "Specifies whether the user can select the RadioButton."
            }, {
                "name": "selected",
                "documentation": "Specifies the select state of the RadioButton."
            }, {
                "name": "valueState",
                "documentation": "Enumeration sap.ui.core.ValueState provides state values Error, Success, Warning and None."
            }, {
                "name": "width",
                "documentation": "Determines the control width. By default, it depends on the text length. Alternatively, CSS sizes in % or px can be set."
            }, {
                "name": "textDirection",
                "documentation": "Defines the text direction - options are left-to-right (LTR) and right-to-left (RTL). Alternatively, the control can\ninherit the text direction from its parent container."
            }, {
                "name": "groupName",
                "documentation": "Defines the name of the RadioButtonGroup, in which the current RadioButton belongs to. You can define a new name for\nthe group. If no new name is specified, the default is sapUiRbDefaultGroup. By default, when one of the RadioButtons\nin a group is selected, all others are unselected."
            }, {
                "name": "key",
                "documentation": "Can be used for subsequent actions."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Triggers when the user makes a change on the RadioButton."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "RadioButton is a control similar to CheckBox, but it allows the user to choose only one of the predefined set of options. Usually, RadioButton is used in a group with other RadioButtons (with the groupName property or by using\nsap.ui.commons.RadioButtonGroup), thus providing a limited choice for the user. An event is triggered when\nthe user makes a change of the selection."
        },
        "RadioButtonGroup": {
            "attributes": [{
                "name": "width",
                "documentation": "Defines the width of the RadioButtonGroup."
            }, {
                "name": "columns",
                "documentation": "Determines the maximum number of RadioButtons displayed in one line."
            }, {
                "name": "editable",
                "documentation": "Specifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally the control is no longer interactive, but can receive focus."
            }, {
                "name": "valueState",
                "documentation": "Тhe value state to be displayed for the RadioButton. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid property for the whole RadioButtonGroup to true."
            }, {
                "name": "selectedIndex",
                "documentation": "The index of the selected/checked RadioButton."
            }, {
                "name": "enabled",
                "documentation": "Enables/disables the RadioButtonGroup. If it is disabled all RadioButtons will be displayed as disabled.\nThe enabled property of the Item will not be used in this case. If the RadioButtonGroup is enabled, the\nenabled property of the Item will define if a RadioButton is enabled or not."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "select",
                "documentation": "Fires when selection is changed by user interaction."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The RadioButtonGroup is a basic control that is used to provide area for making interactive\nchoice out of a set of options. It represents a list with items where exactly one item can\nbe selected in a session. For the representation of the single group entries, the RadioButton\nitems are created automatically. For the RadioButton choice, mouse and keyboard navigation\nusage is supported."
        },
        "RangeSlider": {
            "attributes": [{
                "name": "value2",
                "documentation": "Current second value of the slider. (Position of the second grip.) Note: If the value is not in the valid range (between min and max) it will be changed to be in the valid range.\nIf it is smaller than value it will be set to the same value."
            }, {
                "name": "width",
                "documentation": "Width of the horizontal slider."
            }, {
                "name": "min",
                "documentation": "Minimal value of the slider. Note: If min is larger than max both values will be switched"
            }, {
                "name": "max",
                "documentation": "Maximal value of the slider Note: If min is larger than max both values will be switched"
            }, {
                "name": "value",
                "documentation": "Current value of the slider. (Position of the grip.) Note: If the value is not in the valid range (between min and max) it will be changed to be in the valid range."
            }, {
                "name": "smallStepWidth",
                "documentation": "The grip can only be moved in steps of this width."
            }, {
                "name": "totalUnits",
                "documentation": "Number of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units."
            }, {
                "name": "stepLabels",
                "documentation": "Display step numbers for the ticks on the slider."
            }, {
                "name": "editable",
                "documentation": "Using the slider interactively requires value \"true\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "labels",
                "documentation": "Labels to be displayed instead of numbers. Attribute totalUnits and label count should be the same Note: To show the labels stepLabels must be activated."
            }, {
                "name": "vertical",
                "documentation": "Orientation of slider"
            }, {
                "name": "height",
                "documentation": "Height of the vertical slider."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Value was changed. This event is fired if the value has changed by a user action."
            }, {
                "name": "liveChange",
                "documentation": "Value was changed. This event is fired during the mouse move. The normal change event is only fired by mouseup."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.Slider",
            "documentation": "The interactive control is displayed either as a horizontal or a vertical line with two pointers and units of measurement.\nUsers can move the pointers along the line to change a range with graphical support."
        },
        "RatingIndicator": {
            "attributes": [{
                "name": "editable",
                "documentation": "Determines if the rating symbols can be edited."
            }, {
                "name": "maxValue",
                "documentation": "Determines the number of displayed rating symbols"
            }, {
                "name": "value",
                "documentation": "Determines the currently selected value. If value is set to sap.ui.commons.RatingIndicator.NoValue,\nthe averageValue is shown."
            }, {
                "name": "averageValue",
                "documentation": "Determines the average value. This value is shown if no value is set.\nThis can be used to display an average Value before the user votes."
            }, {
                "name": "iconSelected",
                "documentation": "The URI to the image which shall be displayed for all selected rating symbols.\nNote that when this attribute is used, also the other icon attributes need to be set."
            }, {
                "name": "iconUnselected",
                "documentation": "The URI to the image which shall be displayed for all unselected rating symbols.\nIf this attribute is used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set."
            }, {
                "name": "iconHovered",
                "documentation": "The URI to the image which is displayed when the mouse hovers onto a rating symbol.\nIf used, a requirement is that all custom icons need to have the same size.\nNote that when this attribute is used also the other icon attributes need to be set."
            }, {
                "name": "visualMode",
                "documentation": "Defines how float values are visualized: Full, Half, Continuous\n(see enumeration RatingIndicatorVisualMode)"
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "The event is fired when the user has done a rating."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "RatingIndicator is used to let the user do some rating on a given topic. The amount of\nrating symbols can be specified, as well as the URIs to the image icons which shall be\nused as rating symbols. When the user performs a rating, an event is fired."
        },
        "ResponsiveContainer": {
            "attributes": [{
                "name": "width",
                "documentation": "The width of the responsive container."
            }, {
                "name": "height",
                "documentation": "The width of the responsive container."
            }, {
                "name": "defaultContent",
                "documentation": "The default content to show, in case the range does not provide content"
            }, {
                "name": "rangeSwitch",
                "documentation": "The event is fired the width of the container reaches a new range."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Is used to provide a container, which can show different content depending on its current width. It fires an event, whenever a new range is reached. In addition the content of the new range is automatically shown, if it is set."
        },
        "ResponsiveContainerRange": {
            "attributes": [{
                "name": "width",
                "documentation": "The minimal width for this range to be displayed."
            }, {
                "name": "height",
                "documentation": "The minimal height for this range to be displayed."
            }, {
                "name": "key",
                "documentation": "A key which can be used to identify the range (optional)."
            }, {
                "name": "content",
                "documentation": "The content to show for this range (optional)."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Defines a range for the ResponsiveContainer"
        },
        "RichTooltip": {
            "attributes": [{
                "name": "title",
                "documentation": "Tool tip title to be displayed in the header."
            }, {
                "name": "imageSrc",
                "documentation": "If RichTooltip contains an image, this property is used to define the source path."
            }, {
                "name": "valueStateText",
                "documentation": "This property is an individual text that will be used instead of the default ValueState text"
            }, {
                "name": "imageAltText",
                "documentation": "This is the alt text for the image"
            }, {
                "name": "text",
                "documentation": "The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip."
            }, {
                "name": "openDuration",
                "documentation": "Optional. Open Duration in milliseconds."
            }, {
                "name": "closeDuration",
                "documentation": "Optional. Close Duration in milliseconds."
            }, {
                "name": "myPosition",
                "documentation": "Optional. My position defines which position on the extended tooltip being positioned to align with the target control."
            }, {
                "name": "atPosition",
                "documentation": "Optional. At position defines which position on the target control to align the positioned tooltip."
            }, {
                "name": "offset",
                "documentation": "Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\"."
            }, {
                "name": "collision",
                "documentation": "Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position."
            }, {
                "name": "openDelay",
                "documentation": "Opening delay of the tooltip in milliseconds"
            }, {
                "name": "closeDelay",
                "documentation": "Closing delay of the tooltip in milliseconds"
            }, {
                "name": "closed",
                "documentation": "This event is fired when the Tooltip has been closed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.TooltipBase",
            "documentation": "Is used to provide tool tips that can have long text, image and title. This tool tip extends the TooltipBase."
        },
        "RoadMap": {
            "attributes": [{
                "name": "numberOfVisibleSteps",
                "documentation": "Total number of steps to be displayed at once"
            }, {
                "name": "firstVisibleStep",
                "documentation": "ID of the first step to be displayed"
            }, {
                "name": "selectedStep",
                "documentation": "ID of the step which is currently selected"
            }, {
                "name": "width",
                "documentation": "Determines the control width in CSS size"
            }, {
                "name": "stepSelected",
                "documentation": "Event is fired when the user selects a step."
            }, {
                "name": "stepExpanded",
                "documentation": "Event is fired when a given step is expanded or collapsed by user."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "RoadMap is used to display step-by-step work flows of a clearly defined work process."
        },
        "RoadMapStep": {
            "attributes": [{
                "name": "label",
                "documentation": "Label of the step"
            }, {
                "name": "enabled",
                "documentation": "Specifies whether the user shall be allowed to click a step, or not"
            }, {
                "name": "expanded",
                "documentation": "This property is only relevant when using sub steps."
            }, {
                "name": "visible",
                "documentation": "Step is visible"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Step used within a RoadMap Control."
        },
        "RowRepeater": {
            "attributes": [{
                "name": "numberOfRows",
                "documentation": "Number of rows displayed."
            }, {
                "name": "currentPage",
                "documentation": "The index of the page currently displayed. The index starts at 1."
            }, {
                "name": "showMoreSteps",
                "documentation": "Step size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature."
            }, {
                "name": "fixedRowHeight",
                "documentation": "Row height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden."
            }, {
                "name": "design",
                "documentation": "The visual design of the control."
            }, {
                "name": "threshold",
                "documentation": "Threshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR."
            }, {
                "name": "filter",
                "documentation": "This event is triggered when a filter is set."
            }, {
                "name": "sort",
                "documentation": "This event is triggered when a sorting is applied."
            }, {
                "name": "page",
                "documentation": "This event is triggered when paging was executed."
            }, {
                "name": "resize",
                "documentation": "This event is triggered when the number of rows was changed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control displays items in a stacked list format, allowing the user to page in order to see more items or to use the offered filtering and sorting capabilities in order to manipulate the displayed data."
        },
        "RowRepeaterFilter": {
            "attributes": [{
                "name": "text",
                "documentation": "The filter title if needed for display."
            }, {
                "name": "icon",
                "documentation": "The filter icon if needed for display."
            }, {
                "name": "filters",
                "documentation": "The set of filter objects."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "This element is used by the RowRepeater and allows to define a filter in this context along with the related data such as a text and an icon."
        },
        "RowRepeaterSorter": {
            "attributes": [{
                "name": "text",
                "documentation": "The sorter title if needed for display."
            }, {
                "name": "icon",
                "documentation": "The sorter icon if needed for display."
            }, {
                "name": "sorter",
                "documentation": "The sorter object."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "This element is used by the RowRepeater and allows to define a sorter in this context along with the related data such as a text and an icon."
        },
        "SearchField": {
            "attributes": [{
                "name": "enableListSuggest",
                "documentation": "Defines whether a pop up list shall be provided for suggestions"
            }, {
                "name": "showListExpander",
                "documentation": "Defines whether the list expander shall be displayed in the case of an enabled list for suggestions. This feature is deactivated on mobile devices."
            }, {
                "name": "enableClear",
                "documentation": "Defines whether the clear functionality shall be active"
            }, {
                "name": "showExternalButton",
                "documentation": "Defines whether an additional search button shall be displayed"
            }, {
                "name": "enableCache",
                "documentation": "When list suggestion is enabled all suggestions are cached and no suggest event is fired."
            }, {
                "name": "enableFilterMode",
                "documentation": "Defines whether the search event should also be fired when the SearchField is empty (like a Filter field) and when the clear button (if activated) is pressed."
            }, {
                "name": "value",
                "documentation": "Text that shall be displayed within the search field"
            }, {
                "name": "enabled",
                "documentation": "Disabled fields have different colors, and they can not be focused."
            }, {
                "name": "editable",
                "documentation": "Non-editable controls have different colors, depending on custom settings"
            }, {
                "name": "width",
                "documentation": "Control width in CSS-size"
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the input field. Possible values: Warning, Error, Success, None."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the input field."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text"
            }, {
                "name": "visibleItemCount",
                "documentation": "Defines the number of items in the suggestion list that shall be displayed at once. If the overall number of list items is higher than the setting,\na scroll bar is provided."
            }, {
                "name": "startSuggestion",
                "documentation": "Minimum length of the entered string triggering the suggestion list."
            }, {
                "name": "maxSuggestionItems",
                "documentation": "Maximum number of suggestion items in the suggestion list."
            }, {
                "name": "maxHistoryItems",
                "documentation": "Maximum number of history items in the suggestion list.\n0 displays and stores no history. The history is locally stored on the client. Therefore do not activate this feature when this control handles confidential data."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "search",
                "documentation": "Event which is fired when the user triggers a search"
            }, {
                "name": "suggest",
                "documentation": "Event which is fired when new suggest values are required."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Allows the user to type search queries and to trigger the search. Optionally, suggestions can be added."
        },
        "SearchProvider": {
            "attributes": [{
                "name": "suggestUrl",
                "documentation": "The URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms' must be used. For cross domain requests maybe a proxy must be used."
            }, {
                "name": "suggestType",
                "documentation": "The type of data which is provided by the given suggestUrl: either 'json' or 'xml'."
            }, {
                "name": "icon",
                "documentation": "Icon of the Search Provider"
            }],
            "extendsElement": "sap.ui.core.OpenSearchProvider",
            "documentation": "A SearchProvider which can be attached to a Search Field."
        },
        "SegmentedButton": {
            "attributes": [{
                "name": "enabled",
                "documentation": "enabled"
            }, {
                "name": "selectedButton",
                "documentation": "Selected Button"
            }, {
                "name": "select",
                "documentation": "Event fired when button selected"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The SegmentedButton provides a group of multiple buttons. Only one button can be active. The behaviour is more ore less like a radio button group."
        },
        "Slider": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the horizontal slider."
            }, {
                "name": "min",
                "documentation": "Minimal value of the slider. Note: If min is larger than max both values will be switched"
            }, {
                "name": "max",
                "documentation": "Maximal value of the slider Note: If min is larger than max both values will be switched"
            }, {
                "name": "value",
                "documentation": "Current value of the slider. (Position of the grip.) Note: If the value is not in the valid range (between min and max) it will be changed to be in the valid range."
            }, {
                "name": "smallStepWidth",
                "documentation": "The grip can only be moved in steps of this width."
            }, {
                "name": "totalUnits",
                "documentation": "Number of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units."
            }, {
                "name": "stepLabels",
                "documentation": "Display step numbers for the ticks on the slider."
            }, {
                "name": "editable",
                "documentation": "Using the slider interactively requires value \"true\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "labels",
                "documentation": "Labels to be displayed instead of numbers. Attribute totalUnits and label count should be the same Note: To show the labels stepLabels must be activated."
            }, {
                "name": "vertical",
                "documentation": "Orientation of slider"
            }, {
                "name": "height",
                "documentation": "Height of the vertical slider."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Value was changed. This event is fired if the value has changed by a user action."
            }, {
                "name": "liveChange",
                "documentation": "Value was changed. This event is fired during the mouse move. The normal change event is only fired by mouseup."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The interactive control is displayed either as a horizontal or a vertical line with a pointer and units of measurement.\nUsers can move the pointer along the line to change values with graphical support."
        },
        "Splitter": {
            "attributes": [{
                "name": "splitterOrientation",
                "documentation": "The splitter can have horizontal or vertical orientation."
            }, {
                "name": "splitterPosition",
                "documentation": "Position of splitter bar in percentage.\nThe default value means that the splitter is positioned in the middle of the area that is available for the splitter."
            }, {
                "name": "minSizeFirstPane",
                "documentation": "The minimum size (width for vertical splitter or height for horizontal splitter) of the first Pane"
            }, {
                "name": "minSizeSecondPane",
                "documentation": "The minimum size (width for vertical splitter or height for horizontal splitter) of the second Pane"
            }, {
                "name": "width",
                "documentation": "The width of the split area in px or in %"
            }, {
                "name": "height",
                "documentation": "The height of the split area in px or in %"
            }, {
                "name": "showScrollBars",
                "documentation": "Specifies if the browser should display scroll bars or simply cut the content of a splitter pane when the content does not fit into its pane."
            }, {
                "name": "splitterBarVisible",
                "documentation": "set the splitter bar to be visible or not."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Allows to split the screen into two areas. Make sure that the container for the splitter has an absolute height or set an absolute height for the splitter using the height property. Otherwise the height of the splitter is calculated by the height of its contents."
        },
        "Tab": {
            "attributes": [{
                "name": "verticalScrolling",
                "documentation": "Specifies the vertical scrolling."
            }, {
                "name": "horizontalScrolling",
                "documentation": "Specifies the horizontal scrolling."
            }, {
                "name": "closable",
                "documentation": "Specifies whether the tab contains a close button."
            }, {
                "name": "selected",
                "documentation": "Defines whether the tab is the active one."
            }, {
                "name": "width",
                "documentation": "Determines the width of the Panel in CSS size."
            }, {
                "name": "height",
                "documentation": "Determines the height of the Panel in CSS size.\nPer default, the height for the Panel is automatically adjusted to the content.\nDimension allows to explicitly specify the height."
            }, {
                "name": "enabled",
                "documentation": "Represents the state of the of the Panel (enabled or disabled)"
            }, {
                "name": "scrollLeft",
                "documentation": "Determines the scroll position from left to right. Value \"0\" means leftmost position."
            }, {
                "name": "scrollTop",
                "documentation": "Determines the scroll position from top to bottom. Value \"0\" means topmost position."
            }, {
                "name": "applyContentPadding",
                "documentation": "Determines whether the Panel will have padding.\nPadding is theme-dependent."
            }, {
                "name": "collapsed",
                "documentation": "Determines whether the Panel will be initially collapsed.\nWhen it is initially collapsed, the contents are not rendered.\nA collapsed Panel consumes less space than an expanded one."
            }, {
                "name": "areaDesign",
                "documentation": "Determines the background color.\nNote that color settings are theme-dependent."
            }, {
                "name": "borderDesign",
                "documentation": "Determines if the Panel can have a box as border.\nNote that displaying borders is theme-dependent."
            }, {
                "name": "showCollapseIcon",
                "documentation": "Determines whether the Panel will have an icon for collapsing/expanding, or not."
            }, {
                "name": "text",
                "documentation": "Specifies the text that is rendered in the Panel header.\nCan be used to create a simple titles that do not require an icon in the header."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.Panel",
            "documentation": "Represents a single tab in a TabStrip control."
        },
        "TabStrip": {
            "attributes": [{
                "name": "height",
                "documentation": "Specifies the height of the tab bar and content area."
            }, {
                "name": "width",
                "documentation": "Specifies the width of the bar and content area."
            }, {
                "name": "selectedIndex",
                "documentation": "Specifies the index of the currently selected tab."
            }, {
                "name": "enableTabReordering",
                "documentation": "Specifies whether tab reordering is enabled."
            }, {
                "name": "select",
                "documentation": "Fires when the user selects a tab."
            }, {
                "name": "close",
                "documentation": "Fires when the user closes a tab."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "TabStrip represents a container for tab controls, which contain the content and generally other controls.\nThe user switches between the tabs to display the content."
        },
        "TextArea": {
            "attributes": [{
                "name": "height",
                "documentation": "Height of text field. When it is set (CSS-size such as % or px), this is the exact size."
            }, {
                "name": "cols",
                "documentation": "Number of Columns. Cols means number of characters per row. This proprty is only used if Width is not used."
            }, {
                "name": "rows",
                "documentation": "Number of Rows. This proprty is only used if Height is not used."
            }, {
                "name": "wrapping",
                "documentation": "Text wrapping. Possible values are: Soft, Hard, Off."
            }, {
                "name": "cursorPos",
                "documentation": "Position of cursor, e.g., to let the user re-start typing at the same position as before the server roundtrip"
            }, {
                "name": "explanation",
                "documentation": "text which appears, in case quick-help is switched on"
            }, {
                "name": "labeledBy",
                "documentation": "ID of label control"
            }, {
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.TextField",
            "documentation": "Control to enter or display multible row text."
        },
        "TextField": {
            "attributes": [{
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Renders an input field for text input."
        },
        "TextView": {
            "attributes": [{
                "name": "text",
                "documentation": "Text to be displayed."
            }, {
                "name": "textDirection",
                "documentation": "Determines the text directionality. Available options are LTR and RTL. Alternatively, the control can inherit the text direction from its parent control."
            }, {
                "name": "enabled",
                "documentation": "Switches the enabled state of the control. When the control is disabled, it is greyed out and no longer focusable."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help services."
            }, {
                "name": "accessibleRole",
                "documentation": "The ARIA role for the control."
            }, {
                "name": "design",
                "documentation": "Defines the visual appearance of the control."
            }, {
                "name": "wrapping",
                "documentation": "Disabled automatic wrapping of the text."
            }, {
                "name": "semanticColor",
                "documentation": "Semantic color of the text View"
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "width",
                "documentation": "Width of the TextView"
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Is used to display some continous text. The control can inherit the text direction from its parent control."
        },
        "Title": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the title text"
            }, {
                "name": "icon",
                "documentation": "Defines the URL for icon display"
            }, {
                "name": "level",
                "documentation": "Defines the level of the title. If set to auto the level of the title is chosen by the control rendering the title. Currently not all controls using the Title.control supporting this property."
            }, {
                "name": "emphasized",
                "documentation": "If set the title is displayed emphasized.\nThis feature is nor supported by all controls using the Title.control."
            }],
            "extendsElement": "sap.ui.core.Title",
            "documentation": "Represents a title element that can be used for aggregation with other controls"
        },
        "ToggleButton": {
            "attributes": [{
                "name": "pressed",
                "documentation": "The property is “true” when the control is toggled. The default state of this property is \"false\"."
            }, {
                "name": "text",
                "documentation": "Button text displayed at runtime."
            }, {
                "name": "enabled",
                "documentation": "Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings."
            }, {
                "name": "width",
                "documentation": "Control width as common CSS-size (px or % as unit, for example)"
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service"
            }, {
                "name": "icon",
                "documentation": "Icon to be displayed as graphical element within the button.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "iconHovered",
                "documentation": "Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconSelected",
                "documentation": "Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconFirst",
                "documentation": "If set to true (default), the display sequence is 1. icon 2. control text ."
            }, {
                "name": "height",
                "documentation": "Specifies the button height. If this property is set, the height which is specified by the underlying theme is not used any longer."
            }, {
                "name": "styled",
                "documentation": "Indicates if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass."
            }, {
                "name": "lite",
                "documentation": "The button is rendered as lite button."
            }, {
                "name": "style",
                "documentation": "Style of the button.\n(e.g. emphasized)"
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user presses the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.Button",
            "documentation": "The ToggleButton Control is a Button that can be toggled between pressed and normal state"
        },
        "Toolbar": {
            "attributes": [{
                "name": "width",
                "documentation": "When there is not enough space for the toolbar to display all items, the rightmost items are overflowing into a drop-down menu."
            }, {
                "name": "design",
                "documentation": "Design settings are theme-dependent."
            }, {
                "name": "standalone",
                "documentation": "Per default, tool bars have the stand alone status.\nAlternatively, they can be nested in other controls and then inherit the design from their parent control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A horizontal row of items where in many cases the single toolbar items are buttons containing icons. Note that all controls with the\nsap.ui.commons.ToolbarItem interface can be used as item: Button, ComboBox, TextField."
        },
        "ToolbarSeparator": {
            "attributes": [{
                "name": "displayVisualSeparator",
                "documentation": "When set to false, there is no visual indication of separation by a vertical line but by a wider space."
            }, {
                "name": "design",
                "documentation": "Design of the Separator."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "A small vertical line that is generally added to the tool bar between the items to visually separate them."
        },
        "Tree": {
            "attributes": [{
                "name": "title",
                "documentation": "Tree title"
            }, {
                "name": "width",
                "documentation": "Tree width"
            }, {
                "name": "height",
                "documentation": "Tree height"
            }, {
                "name": "showHeader",
                "documentation": "Tree Header is display. If false, the tree will be in a transparent mode"
            }, {
                "name": "showHeaderIcons",
                "documentation": "Show Header icons (e.g. Expand/Collapse all). Only consider if showHeader is true"
            }, {
                "name": "showHorizontalScrollbar",
                "documentation": "Display horizontal scrollbar. If false, the overflow content will be hidden"
            }, {
                "name": "minWidth",
                "documentation": "Minimal width for the Tree. Can be useful when, for example, the width is specified in percentage, to avoid the tree to become too narrow when container is resize"
            }, {
                "name": "selectionMode",
                "documentation": "Selection mode of the Tree."
            }, {
                "name": "select",
                "documentation": "Event is fired when a tree node is selected."
            }, {
                "name": "selectionChange",
                "documentation": "fired when the selection of the tree has been changed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Simple tree to display item in a hierarchical way"
        },
        "TreeNode": {
            "attributes": [{
                "name": "text",
                "documentation": "Node text"
            }, {
                "name": "expanded",
                "documentation": "Node is expanded"
            }, {
                "name": "hasExpander",
                "documentation": "Should the node has an expander."
            }, {
                "name": "icon",
                "documentation": "Icon to display in front of the node"
            }, {
                "name": "isSelected",
                "documentation": "Node is selected"
            }, {
                "name": "selectable",
                "documentation": "The node is selectable. If true, clicking on the node text triggers \"selected\" event"
            }, {
                "name": "selectedForNodes",
                "documentation": "When this node is collapsed and it has selected children, it looks as if it were\nselected itself.\nThis association holds the references of the selected children."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "toggleOpenState",
                "documentation": "Node state has changed."
            }, {
                "name": "selected",
                "documentation": "Node is selected"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Tree node element"
        },
        "TriStateCheckBox": {
            "attributes": [{
                "name": "selectionState",
                "documentation": "Defines the states of the checkbox"
            }, {
                "name": "text",
                "documentation": "Defines the text displayed next to the check box"
            }, {
                "name": "enabled",
                "documentation": "Using this property, the control could be disabled, if required."
            }, {
                "name": "editable",
                "documentation": "Specifies whether the user shall be allowed to flag the check box"
            }, {
                "name": "valueState",
                "documentation": "Accepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'."
            }, {
                "name": "width",
                "documentation": "The width can be set to an absolute value. If no value is set, the control width results from the text length."
            }, {
                "name": "textDirection",
                "documentation": "The value can be set to LTR or RTL. Otherwise, the control inherits the text direction from its parent control."
            }, {
                "name": "change",
                "documentation": "Event is triggered when the control status is changed by the user by flagging or unflagging the checkbox."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "TriStateCheckBox to reflect mixed state for checkboxes. The control can display three states, namely checked, unchecked and mixed. However, mixed state cannot be directly reached by user interaction on the particular control.\nIt can be only set by the control's public toggle function, to make a behaviour possible which is e.g. required in checkbox trees."
        },
        "ValueHelpField": {
            "attributes": [{
                "name": "iconURL",
                "documentation": "URL of the standard icon for the value help. If no parameter is supplied the default icon image will be shown.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "iconHoverURL",
                "documentation": "URL of the icon for the value help when hovered. If no parameter is supplied the standard icon image will be shown.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconDisabledURL",
                "documentation": "URL of the icon for the value help when disabled. If no parameter is supplied the default icon image will be shown.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "valueHelpRequest",
                "documentation": "Event which is fired when the ValueHelp is requested."
            }, {
                "name": "value",
                "documentation": "Text inside the TextField"
            }, {
                "name": "textDirection",
                "documentation": "Direction of the text. Possible values: \"rtl\", \"ltr\"."
            }, {
                "name": "enabled",
                "documentation": "Switches enabled state of the control. Disabled fields have different colors, and can not be focused."
            }, {
                "name": "editable",
                "documentation": "Switches edit state of the control. Read-only fields have different colors, depending on theme setting."
            }, {
                "name": "required",
                "documentation": "Depending on theme the TextField is shown as required.\nIf a Label is assigned to the TextField it will visualize the requires state too."
            }, {
                "name": "width",
                "documentation": "Width of text field. When it is set (CSS-size such as % or px), this is the exact size. When left blank, the text field length defines the width."
            }, {
                "name": "maxLength",
                "documentation": "Maximum number of characters. Value '0' means the feature is switched off."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text."
            }, {
                "name": "imeMode",
                "documentation": "State of the Input Method Editor (IME)."
            }, {
                "name": "design",
                "documentation": "Font type. valid values are Standard and Monospace."
            }, {
                "name": "helpId",
                "documentation": "Unique identifier used for help service."
            }, {
                "name": "accessibleRole",
                "documentation": "Accessibility role for the text field."
            }, {
                "name": "name",
                "documentation": "The name property to be used in the HTML code (e.g. for HTML forms that send data to the server via 'submit')."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "Event is fired when the text in the field has changed AND the focus leaves the TextField or the Enter key is pressed."
            }, {
                "name": "liveChange",
                "documentation": "This event if fired during typing into the TextField and returns the currently entered value.\nNote: This is not the content of the value property.\nThe value property is only updated by ENTER and by leaving the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.TextField",
            "documentation": "A TextField with an attached icon which triggeres an event."
        },
        "Form": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the Form."
            }, {
                "name": "editable",
                "documentation": "Applies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content.\nIf set, all (not only the editable) rows of the form will get the line height of editable fields. Note: The setting of the property has no influence on the editable functionality of the form's content."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.Form",
            "documentation": "Form control.\nHolder for form control to be rendered in a specific form layout.\nA Form supports VariantLayoutData for it's conent to allow a simple switching of Layouts."
        },
        "FormContainer": {
            "attributes": [{
                "name": "expanded",
                "documentation": "Container is expanded. Note: This property only works if expandable is set to true."
            }, {
                "name": "expandable",
                "documentation": "Defines if the FormContainer is expandable. Note: The expander icon will only be shown if a title is set for the FormContainer."
            }, {
                "name": "visible",
                "documentation": "If set to false, the FormContainer is not rendered."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby). Note: This attribute is only rendered if the FormContainer has it's own\nDOM representation in the used FormLayout."
            }],
            "extendsElement": "sap.ui.layout.FormContainer",
            "documentation": "Used to group form elements."
        },
        "FormElement": {
            "attributes": [{
                "name": "visible",
                "documentation": "If set to false, the FormElement is not rendered."
            }],
            "extendsElement": "sap.ui.layout.FormElement",
            "documentation": "A form element is a combination of one label and different controls associated to this label."
        },
        "FormLayout": {
            "attributes": [{
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the Form content. Note: The visualization of the different options depends on the theme used."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.FormLayout",
            "documentation": "Base layout for Forms.\nOther Layouts must inherit from this one."
        },
        "GridContainerData": {
            "attributes": [{
                "name": "halfGrid",
                "documentation": "If set, the container takes half the width of the Form (8 cells), if not it takes the full width (16 cells).\nIf the GridLayout is set to singleColumn, the full width of the grid is only 8 cells. So containers are rendered only once per row."
            }],
            "extendsElement": "sap.ui.layout.GridContainerData",
            "documentation": "Grid layout specific properties for FormContainers.\nThe width and height properties of the elements are ignored since the witdh and heights are defined by the grid cells."
        },
        "GridElementData": {
            "attributes": [{
                "name": "hCells",
                "documentation": "Number of cells in horizontal direction. If set to auto, the size is determined by the number of fields and the available cells. For labels the auto size is 3 cells. If set to full, only one field is allowed within the FormElement. It gets the full width of the row and the label is displayed above. Note: For labels, the full size setting has no effect."
            }, {
                "name": "vCells",
                "documentation": "Number of cells in vertical direction. Note: This property has no effect on labels."
            }],
            "extendsElement": "sap.ui.layout.GridElementData",
            "documentation": "The grid specific layout data for FormElement fields.\nThe width property of the elements is ignored since the width is defined by grid cells."
        },
        "GridLayout": {
            "attributes": [{
                "name": "singleColumn",
                "documentation": "If set, the grid renders only one FormContainer per column. That means one FormContainer is below the other. The whole grid has 8 cells per row. If not set, FormContainer can use the full width of the grid or two FormContainers can be placed beside each other. In this case the whole grid has 16 cells per row."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the Form content. Note: The visualization of the different options depends on the theme used."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.GridLayout",
            "documentation": "This Layout implements a guideline 2.0 grid. This can be a 16 column grid or an 8 column grid. To adjust the content inside the GridLayout GridContainerData and GridElementData could be used."
        },
        "ResponsiveLayout": {
            "attributes": [{
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the Form content. Note: The visualization of the different options depends on the theme used."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.ResponsiveLayout",
            "documentation": "Renders a form with responsive layout. Internally the ResponsiveFlowLayout is used."
        },
        "SimpleForm": {
            "attributes": [{
                "name": "maxContainerCols",
                "documentation": "The maximum amount of groups (FormContainers) per row that is used before a new row is started. Note: If a ResponsiveGridLayout is used as a layout, this property is not used.\nPlease use the properties ColumnsL and ColumnsM in this case."
            }, {
                "name": "minWidth",
                "documentation": "The overall minimum width in pixels that is used for the SimpleForm. If the available width is below the given minWidth the SimpleForm will create a new row for the next group (FormContainer).\nThe default value is -1, meaning that inner groups (FormContainers) will be stacked until maxContainerCols is reached,\nirrespective of whether a width is reached or the available parents width is reached. Note: This property is only used if a ResponsiveLayout is used as a layout."
            }, {
                "name": "width",
                "documentation": "Width of the form."
            }, {
                "name": "editable",
                "documentation": "Applies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content.\nIf set, all (not only the editable) rows of the form will get the line height of editable fields. Note: The setting of the property has no influence on the editable functionality of the form's content."
            }, {
                "name": "labelMinWidth",
                "documentation": "Specifies the min-width in pixels of the label in all form rows. Note: This property is only used if a ResponsiveLayout is used as a layout."
            }, {
                "name": "layout",
                "documentation": "The FormLayout that is used to render the SimpleForm. We recommend using the ResponsiveGridLayout for rendering a SimpleForm,\nas its responsiveness uses the space available in the best way possible. Note If possible, set the layout before adding content to prevent calculations for the default layout."
            }, {
                "name": "labelSpanXL",
                "documentation": "Default span for labels in extra large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout.\nIf the default value -1 is not overwritten with the meaningful one then the labelSpanL value is used (from the backward compatibility reasons)."
            }, {
                "name": "labelSpanL",
                "documentation": "Default span for labels in large size. Note: If adjustLabelSpanThis is set, this property is only used if more than 1 FormContainer is in one line.\nIf only 1 FormContainer is in the line, then the labelSpanM value is used. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "labelSpanM",
                "documentation": "Default span for labels in medium size. Note: If adjustLabelSpanThis is set, this property is used for full-size FormContainers.\nIf more than one FormContainer is in one line, labelSpanL is used. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "labelSpanS",
                "documentation": "Default span for labels in small size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "adjustLabelSpan",
                "documentation": "If set, the usage of labelSpanL and labelSpanM are dependent on the number of FormContainers in one row.\nIf only one FormContainer is displayed in one row, labelSpanM is used to define the size of the label.\nThis is the same for medium and large Forms.\nThis is done to align the labels on forms where full-size FormContainers and multiple-column rows are used in the same Form\n(because every FormContainer has its own grid inside). If not set, the usage of labelSpanL and labelSpanM are dependent on the Form size.\nThe number of FormContainers doesn't matter in this case. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "emptySpanXL",
                "documentation": "Number of grid cells that are empty at the end of each line on extra large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout.\nIf the default value -1 is not overwritten with the meaningful one then the emptySpanL value is used (from the backward compatibility reasons)."
            }, {
                "name": "emptySpanL",
                "documentation": "Number of grid cells that are empty at the end of each line on large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "emptySpanM",
                "documentation": "Number of grid cells that are empty at the end of each line on medium size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "emptySpanS",
                "documentation": "Number of grid cells that are empty at the end of each line on small size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "columnsXL",
                "documentation": "Form columns for extra large size.\nThe number of columns for extra large size must not be smaller than the number of columns for large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout.\nIf the default value -1 is not overwritten with the meaningful one then the columnsL value is used (from the backward compatibility reasons)."
            }, {
                "name": "columnsL",
                "documentation": "Form columns for large size.\nThe number of columns for large size must not be smaller than the number of columns for medium size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "columnsM",
                "documentation": "Form columns for medium size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "singleContainerFullSize",
                "documentation": "If the Form contains only one single FormContainer and this property is set,\nthe FormContainer is displayed using the full size of the Form.\nIn this case the properties columnsL and columnsM are ignored. In all other cases the FormContainer is displayed in the size of one column. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "breakpointXL",
                "documentation": "Breakpoint between Medium size and Large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "breakpointL",
                "documentation": "Breakpoint between Medium size and Large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "breakpointM",
                "documentation": "Breakpoint between Small size and Medium size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the SimpleForm content. The visualization of the different options depends on the used theme."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.SimpleForm",
            "documentation": "Use the SimpleForm to create a form based on title, label and fields that are stacked in the content aggregation. Add Title to start a new FormContainer(Group). Add Label to start a new row in the container. Add Input/Display controls as needed. Use LayoutData to influence the layout for special cases in the Input/Display controls."
        },
        "AbsoluteLayout": {
            "attributes": [{
                "name": "width",
                "documentation": "The overall width of the control. When not set, 100% is automatically set."
            }, {
                "name": "height",
                "documentation": "The overall height of the control. When not set, 100% is automatically set."
            }, {
                "name": "verticalScrolling",
                "documentation": "'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode."
            }, {
                "name": "horizontalScrolling",
                "documentation": "'Auto', 'Scroll', 'Hidden', and 'None' are the available values for setting the vertical scrolling mode."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The Absolute Layout positions its child controls absolutely"
        },
        "BorderLayout": {
            "attributes": [{
                "name": "rtl",
                "documentation": "The RTL setting swaps the areas Begin and End."
            }, {
                "name": "width",
                "documentation": "Defines the overall width of the layout"
            }, {
                "name": "height",
                "documentation": "Defines the overall height of the layout"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Based upon the border layout as it comes with the Java standard. Using this layout, you are able to divide your available UI space into five areas whose sizes can be defined. These areas are: Top: Header; Bottom: Footer; Begin: Left/right-hand side panel; Center: Content area\nin the middle; End: Right/left-hand side panel."
        },
        "BorderLayoutArea": {
            "attributes": [{
                "name": "areaId",
                "documentation": "Defines which area the element represents: top, begin, center, end, bottom"
            }, {
                "name": "overflowX",
                "documentation": "The overflow mode of the area in horizontal direction as CSS value"
            }, {
                "name": "overflowY",
                "documentation": "The overflow mode of the area in vertical direction as CSS value"
            }, {
                "name": "contentAlign",
                "documentation": "The content alignment as CSS value"
            }, {
                "name": "size",
                "documentation": "Defines the height or the width. Is not used when the area element is in Center."
            }, {
                "name": "visible",
                "documentation": "Invisible controls are not rendered"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "The BorderLayoutArea represents one area of a BorderLayout"
        },
        "HorizontalLayout": {
            "attributes": [{
                "name": "allowWrapping",
                "documentation": "Specifies whether the content inside the Layout shall be line-wrapped in the case that there is less horizontal space available than required."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.HorizontalLayout",
            "documentation": "A layout that provides support for horizontal alignment of controls"
        },
        "MatrixLayout": {
            "attributes": [{
                "name": "width",
                "documentation": "CSS width of the matrix layout.\nIf the LayoutFixed = true an adequate width should be provided."
            }, {
                "name": "height",
                "documentation": "CSS height of the matrix layout."
            }, {
                "name": "layoutFixed",
                "documentation": "Sets the table layout. If fixed the width parameter of a column has priority, if not the width of the content of the colums has priority.\nThe default is \"fixed\".\nIf the fixed layout is used an adequate width of the MatrixLayout should be provided. Otherwise the column width displayed could be different than the given ones because of browser dependend optimazations."
            }, {
                "name": "columns",
                "documentation": "Number of columns. If not specified, the number of columns will be determined from the given cells."
            }, {
                "name": "widths",
                "documentation": "Widths of the columns. Use an array to define the widths of the columns.\nIf a column shall have an automatical sizing enter \"auto\" for this column width."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "\nA matrix layout arranges controls in a grid structure, using rows which\nneed not have the same number of cells.\n \nIt uses predefined cell classes that guarantee appropriate distances\nbetween cells in the grid. The cell's vGutter property lets\nyou specify additional horizontal distances easily. You can set these\nadditional distances (known as gutters) with or without separators.\nThe distance for each cell is specified by assigning a specific\nenumeration value of the class LayoutCellSeparator of the\nmatrix data object.\n \nYou should avoid nesting matrix layouts. You should only use a\nmatrix layout if you need to align controls horizontally across rows.\n"
        },
        "MatrixLayoutCell": {
            "attributes": [{
                "name": "backgroundDesign",
                "documentation": "Determines the matrix layout cell's background design."
            }, {
                "name": "colSpan",
                "documentation": "Determines how many columns of the underlying grid structure are occupied\nby this matrix layout cell."
            }, {
                "name": "hAlign",
                "documentation": "Determines the horizontal alignment of the matrix layout cell's content\nwith the cell's borders."
            }, {
                "name": "padding",
                "documentation": "Determines the padding of the matrix layout cell's content within the\ncell's borders. The default value is appropriate for all cells in a\nform-like layout. Consider to remove the padding on the outer layout in\ncase of nesting."
            }, {
                "name": "rowSpan",
                "documentation": "Determines how many rows of the underlying grid structure are occupied by this matrix layout cell.\nIn case a row-height is used, all rows affected by the RowSpan must have the same unit."
            }, {
                "name": "separation",
                "documentation": "Determines how a matrix layout cell is separated from its predecessor,\nvia a vertical gutter of variable width, with or without a vertical line."
            }, {
                "name": "vAlign",
                "documentation": "Determines the vertical alignment of the matrix layout cell's content\nwith the cell's borders."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Non-control element used as part of a matrix layout's inner structure."
        },
        "MatrixLayoutRow": {
            "attributes": [{
                "name": "height",
                "documentation": "Height of the row."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Non-control element used as part of a matrix layout's inner structure."
        },
        "PositionContainer": {
            "attributes": [{
                "name": "top",
                "documentation": "Defines the distance to the top of the layout (as specified in HTML)"
            }, {
                "name": "bottom",
                "documentation": "Defines the distance to the bottom of the layout (as specified in HTML)"
            }, {
                "name": "left",
                "documentation": "Defines the distance to the left of the layout (as specified in HTML)"
            }, {
                "name": "right",
                "documentation": "Defines the distance to the right of the layout (as specified in HTML)"
            }, {
                "name": "centerHorizontally",
                "documentation": "Indicates whether this container shall be centered horizontally within the AbsoluteLayout area.\nThe values of the attributes left and right are ignored when this feature is activated."
            }, {
                "name": "centerVertically",
                "documentation": "Indicates whether this container should be centered vertically within the AbsoluteLayout area.\nThe values of the attributes top and bottom are ignored when this feature is activated."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Is used to specify the position of a control in the AbsoluteLayout"
        },
        "ResponsiveFlowLayout": {
            "attributes": [{
                "name": "responsive",
                "documentation": "If set to false, all added controls will keep their width, or otherwise, the controls will be stretched to the possible width of a row."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.ResponsiveFlowLayout",
            "documentation": "This is a layout where several controls can be added. These controls are blown up to fit a whole line. If the window resizes the controls are moved between the lines and resized again."
        },
        "ResponsiveFlowLayoutData": {
            "attributes": [{
                "name": "minWidth",
                "documentation": "Defines the minimal size in px of a ResponsiveFlowLayout element. The element will be shrunk down to this value."
            }, {
                "name": "weight",
                "documentation": "Defines the weight of the element, that influences the resulting width. If there are several elements within a row of the ResponsiveFlowLayout, each element could have another weight. The bigger the weight of a single element, the wider it will be stretched, i.e. a bigger weight results in a larger width."
            }, {
                "name": "linebreak",
                "documentation": "If this property is set, the control in which the LayoutData is added, will always cause a line break within the ResponsiveFlowLayout."
            }, {
                "name": "margin",
                "documentation": "Prevents any margin of the element if set to false."
            }, {
                "name": "linebreakable",
                "documentation": "Shows if an element can be wrapped into a new row. If this value is set to false, the min-width will be set to 0 and the wrapping is up to the previous element."
            }],
            "extendsElement": "sap.ui.layout.ResponsiveFlowLayoutData",
            "documentation": "This is a LayoutData Element that can be added to a control if this control is used within a ResponsiveFlowLayout"
        },
        "VerticalLayout": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the VerticalLayout. If no width is set, the width of the content is used.\nIf the content of the layout has a larger width than the layout, it is cut off.\nThere is no scrolling inside the layout."
            }, {
                "name": "enabled",
                "documentation": "If not enabled, all controls inside are not enabled automatically."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.VerticalLayout",
            "documentation": "In this layout the elemnts are orderd one below the other"
        }
    },
    "sap.ui.core": {
        "ComponentContainer": {
            "attributes": [{
                "name": "name",
                "documentation": "Component name, the package where the component is contained. This property can only be applied initially."
            }, {
                "name": "url",
                "documentation": "The URL of the component. This property can only be applied initially."
            }, {
                "name": "async",
                "documentation": "Flag whether the component should be created sync (default) or async. The default\nwill be async when initially the property manifest is set to a truthy\nvalue and for the property async no value has been specified.\nThis property can only be applied initially."
            }, {
                "name": "handleValidation",
                "documentation": "Enable/disable validation handling by MessageManager for this component.\nThe resulting Messages will be propagated to the controls.\nThis property can only be applied initially."
            }, {
                "name": "settings",
                "documentation": "The settings object passed to the component when created. This property can only be applied initially."
            }, {
                "name": "propagateModel",
                "documentation": "Defines whether binding information is propagated to the component."
            }, {
                "name": "width",
                "documentation": "Container width in CSS size"
            }, {
                "name": "height",
                "documentation": "Container height in CSS size"
            }, {
                "name": "lifecycle",
                "documentation": "Lifecycle behavior for the Component associated by the ComponentContainer.\nThe default behavior is Legacy. This means that the ComponentContainer\ntakes care that the Component is destroyed when the ComponentContainer is destroyed,\nbut it is not destroyed when a new Component is associated.\nIf you use the usage property to create the Component,\nthe default behavior is Container. This means that\nthe Component is destroyed when the ComponentContainer is destroyed or a new\nComponent is associated.\nThis property must only be applied before a component instance is created."
            }, {
                "name": "autoPrefixId",
                "documentation": "Flag, whether to auto-prefix the ID of the nested Component or not. If\nthis property is set to true the ID of the Component will be prefixed\nwith the ID of the ComponentContainer followed by a single dash.\nThis property can only be applied initially."
            }, {
                "name": "usage",
                "documentation": "The component usage. If the ComponentContainer is used inside a\nComponent, this Component can define a usage which will be used for creating\nthe Component.\nThis property can only be applied initially."
            }, {
                "name": "manifest",
                "documentation": "Controls when and from where to load the manifest for the Component.\nWhen set to any truthy value, the manifest will be loaded asynchronously by default\nand evaluated before the Component controller, if it is set to a falsy value\nother than undefined, the manifest will be loaded after the controller.\nA non-empty string value will be interpreted as the URL location from where to load the manifest.\nA non-null object value will be interpreted as manifest content.\nThis property can only be applied initially."
            }, {
                "name": "component",
                "documentation": "The component displayed in this ComponentContainer."
            }, {
                "name": "componentCreated",
                "documentation": "Fired when the component instance has been created by the\nComponentContainer."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Container that embeds a UIComponent in a control tree."
        },
        "Control": {
            "attributes": [{
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Base Class for Controls. Controls provide the following features:\n\nRendering: the RenderManager only expects instances of class Control in its sap.ui.core.RenderManager renderControl method. By convention, each control class has an associated static class that takes care of rendering the control (its 'Renderer').\nshow / hide: a control can be hidden, although it is still part of the control tree, see property visible\nlocal busy indicator: marks a control visually as 'busy', see properties busy and busyIndicatorDelay\nfield groups: by assigning the same group ID to a set of editable controls, they form a group which can be validated together. See property fieldGroupIds and event :validateFieldGroup validateFieldGroup. The term field was chosen as most often this feature will be used to group editable fields in a form.\ncustom style classes: all controls allow to add custom CSS classes to their rendered DOM without modifying their renderer code. See methods addStyleClass, removeStyleClass, toggleStyleClass and hasStyleClass. The necessary implementation is encapsulated in sap.ui.core.CustomStyleClassSupport CustomStyleClassSupport and can be applied to selected element classes as well.\nbrowser events: by calling the methods attachBrowserEvent and detachBrowserEvent, consumers can let the control class take care of registering / de-registering a given set of event listeners to the control's root DOM node. The framework will adapt the registration whenever the DOM node changes (e.g. before or after rendering or when the control is destroyed).\n See section \" topic:91f1703b6f4d1014b6dd926db0e91070 Developing OpenUI5/SAPUI5 Controls\"\nin the documentation for an introduction to control development."
        },
        "CustomData": {
            "attributes": [{
                "name": "key",
                "documentation": "The key of the data in this CustomData object.\nWhen the data is just stored, it can be any string, but when it is to be written to HTML (writeToDom == true) then it must also be a valid HTML attribute name (it must conform to the sap.ui.core.ID type and may contain no colon) to avoid collisions, it also may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\nIf any restriction is violated, a warning will be logged and nothing will be written to the DOM."
            }, {
                "name": "value",
                "documentation": "The data stored in this CustomData object.\nWhen the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string.\nIf this restriction is violated, a warning will be logged and nothing will be written to the DOM."
            }, {
                "name": "writeToDom",
                "documentation": "If set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute.\nIf the key is \"abc\" and the value is \"cde\", the HTML will look as follows:\n&lt;SomeTag ... data-abc=\"cde\" ... &gt;\nThus the application can provide stable attributes by data binding which can be used for styling or identification purposes.\nATTENTION: use carefully to not create huge attributes or a large number of them."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Contains a single key/value pair of custom data attached to an Element. See method data()."
        },
        "Element": {
            "attributes": [],
            "extendsElement": "",
            "documentation": "Base Class for Elements."
        },
        "HTML": {
            "attributes": [{
                "name": "content",
                "documentation": "HTML content to be displayed, defined as a string. The content is converted to DOM nodes with a call to new jQuery(content), so any\nrestrictions for the jQuery constructor apply to the content of the HTML control as well. Some of these restrictions (there might be others!) are:\n\nthe content must be enclosed in tags, pure text is not supported. \nif the content contains script tags, they will be executed but they will not appear in the resulting DOM tree. When the contained code tries to find the corresponding script tag, it will fail.\n Please consider to consult the jQuery documentation as well. The HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content\n(e.g. setContent(\"&lt;div/>&lt;div/>\")), but this is not a guaranteed feature.\nThe accepted content might be restricted to single root nodes in future versions.\nTo notify applications about this fact, a warning is written in the log when multiple root nodes are used. When changing the content dynamically, ensure that the ID of the root node remains the same as the HTML\ncontrol's ID. Otherwise it cannot be guaranteed that certain lifecycle events take place."
            }, {
                "name": "preferDOM",
                "documentation": "Whether existing DOM content is preferred over the given content string. There are two scenarios where this flag is relevant (when set to true):\n\nfor the initial rendering: when an HTML control is added to a UIArea for the first time and if the root node of that UIArea contained DOM content with the same id as the HTML control, then that content will be used for rendering instead of any specified string content\nany follow-up rendering: when an HTML control is rendered for the second or any later time and the preferDOM flag is set, then the DOM from the first rendering is preserved and not replaced by the string content\n As preserving the existing DOM is the most common use case of the HTML control, the default value is true."
            }, {
                "name": "sanitizeContent",
                "documentation": "Whether to run the HTML sanitizer once the content (HTML markup) is applied or not. To configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist."
            }, {
                "name": "afterRendering",
                "documentation": "Fired after the HTML control has been rendered. Allows to manipulate the resulting DOM. When the control doesn't have string content and no preserved DOM existed for this control,\nthen this event will fire, but there won't be a DOM node for this control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Embeds standard HTML in an SAPUI5 control tree. Security Hint: By default, the HTML content (property 'content') is not sanitized and therefore\nopen to XSS attacks. Applications that want to show user defined input in an HTML control, should\neither sanitize the content on their own or activate automatic sanitizing through the sanitizeContent property. Although this control inherits the tooltip aggregation/property and the\nhasStyleClass, addStyleClass, removeStyleClass and\ntoggleStyleClass methods from its base class, it doesn't support them.\nInstead, the defined HTML content can contain a tooltip (title attribute) or custom CSS classes. For further hints about usage restrictions for this control, see also the documentation of the\ncontent property."
        },
        "Icon": {
            "attributes": [{
                "name": "src",
                "documentation": "This property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with an Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here."
            }, {
                "name": "size",
                "documentation": "Since Icon uses font, this property will be applied to the css font-size property on the rendered DOM element."
            }, {
                "name": "color",
                "documentation": "The color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent."
            }, {
                "name": "hoverColor",
                "documentation": "This color is shown when icon is hovered. This property has no visual effect when run on mobile device."
            }, {
                "name": "activeColor",
                "documentation": "This color is shown when icon is pressed/activated by the user."
            }, {
                "name": "width",
                "documentation": "This is the width of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property."
            }, {
                "name": "height",
                "documentation": "This is the height of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property."
            }, {
                "name": "backgroundColor",
                "documentation": "Background color of the Icon in normal state."
            }, {
                "name": "hoverBackgroundColor",
                "documentation": "Background color for Icon in hover state. This property has no visual effect when run on mobile device."
            }, {
                "name": "activeBackgroundColor",
                "documentation": "Background color for Icon in active state."
            }, {
                "name": "decorative",
                "documentation": "A decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property."
            }, {
                "name": "useIconTooltip",
                "documentation": "Decides whether a default Icon tooltip should be used if no tooltip is set."
            }, {
                "name": "alt",
                "documentation": "This defines the alternative text which is used for outputting the aria-label attribute on the DOM."
            }, {
                "name": "noTabStop",
                "documentation": "Defines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached.\nIf it's set to true, Icon control never has tab stop no matter whether press event handler exists or not."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "This event is fired when icon is pressed/activated by the user. When a handler is attached to this event, the Icon gets tab stop. If you want to disable this behavior, set the noTabStop property to true."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Icon uses embedded font instead of pixel image. Comparing to image, Icon is easily scalable, color can be altered live and various effects can be added using css. A set of built in Icons is available and they can be fetched by calling sap.ui.core.IconPool.getIconURI and set this value to the src property on the Icon."
        },
        "InvisibleText": {
            "attributes": [{
                "name": "text",
                "documentation": "The text of the InvisibleText."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "An InvisibleText is used to bring hidden texts to the UI for screen reader support. The hidden text can e.g. be referenced\nin the ariaLabelledBy or ariaDescribedBy associations of other controls. The inherited properties busy, busyIndicatorDelay and visible and the aggregation tooltip is not supported by this control."
        },
        "Item": {
            "attributes": [{
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "A control base type."
        },
        "LayoutData": {
            "attributes": [],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "A layout data base type."
        },
        "ListItem": {
            "attributes": [{
                "name": "icon",
                "documentation": "The icon belonging to this list item instance.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "additionalText",
                "documentation": "Some additional text of type string, optionally to be displayed along with this item."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "An item that is used in lists or list-similar controls such as DropdownBox, for example.\nThe element foresees the usage of additional texts displayed in a second column."
        },
        "LocalBusyIndicator": {
            "attributes": [{
                "name": "width",
                "documentation": "This property is the width of the control that has to\nbe covered. With this width the position of the animation can be\nproperly set."
            }, {
                "name": "height",
                "documentation": "This property is the height of the control that has to\nbe covered. With this height the position of the animation can be\nproperly set."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The LocalBusyIndicator is a special version of the\nBusyIndicator. This one doesn't block the whole screen - it just\nblocks the corresponding control and puts a local animation over the\ncontrol. To use the functionality of this control the corresponding\ncontrol needs to be enabled via the 'LocalBusyIndicatorSupport'\naccordingly to the ListBox control (see the init-function of the\nListBox)."
        },
        "Message": {
            "attributes": [{
                "name": "text",
                "documentation": "Message text"
            }, {
                "name": "timestamp",
                "documentation": "Message's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs."
            }, {
                "name": "icon",
                "documentation": "A possible icon URI of the message"
            }, {
                "name": "level",
                "documentation": "Setting the message's level."
            }, {
                "name": "readOnly",
                "documentation": "Determines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "This element used to provide messages. Rendering must be done within the control that uses this kind of element. Its default level is none."
        },
        "ScrollBar": {
            "attributes": [{
                "name": "vertical",
                "documentation": "Orientation. Defines if the Scrollbar is vertical or horizontal."
            }, {
                "name": "scrollPosition",
                "documentation": "Scroll position in steps or pixels."
            }, {
                "name": "size",
                "documentation": "Size of the Scrollbar (in pixels)."
            }, {
                "name": "contentSize",
                "documentation": "Size of the scrollable content (in pixels)."
            }, {
                "name": "steps",
                "documentation": "Number of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically."
            }, {
                "name": "scroll",
                "documentation": "Scroll event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The ScrollBar control can be used for virtual scrolling of a certain area.\nThis means: to simulate a very large scrollable area when technically the area is small and the control takes care of displaying the respective part only. E.g. a Table control can take care of only rendering the currently visible rows and use this ScrollBar control to make the user think he actually scrolls through a long list."
        },
        "SeparatorItem": {
            "attributes": [{
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "An item that provides a visual separation. It borrows all its methods from the classes sap.ui.core.Item, sap.ui.core.Element,\nsap.ui.base.EventProvider, and sap.ui.base.Object."
        },
        "Title": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the title text"
            }, {
                "name": "icon",
                "documentation": "Defines the URL for icon display"
            }, {
                "name": "level",
                "documentation": "Defines the level of the title. If set to auto the level of the title is chosen by the control rendering the title. Currently not all controls using the Title.control supporting this property."
            }, {
                "name": "emphasized",
                "documentation": "If set the title is displayed emphasized.\nThis feature is nor supported by all controls using the Title.control."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Represents a title element that can be used for aggregation with other controls"
        },
        "TooltipBase": {
            "attributes": [{
                "name": "text",
                "documentation": "The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip."
            }, {
                "name": "openDuration",
                "documentation": "Optional. Open Duration in milliseconds."
            }, {
                "name": "closeDuration",
                "documentation": "Optional. Close Duration in milliseconds."
            }, {
                "name": "myPosition",
                "documentation": "Optional. My position defines which position on the extended tooltip being positioned to align with the target control."
            }, {
                "name": "atPosition",
                "documentation": "Optional. At position defines which position on the target control to align the positioned tooltip."
            }, {
                "name": "offset",
                "documentation": "Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\"."
            }, {
                "name": "collision",
                "documentation": "Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position."
            }, {
                "name": "openDelay",
                "documentation": "Opening delay of the tooltip in milliseconds"
            }, {
                "name": "closeDelay",
                "documentation": "Closing delay of the tooltip in milliseconds"
            }, {
                "name": "closed",
                "documentation": "This event is fired when the Tooltip has been closed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Abstract class that can be extended in order to implement any extended tooltip. For example, RichTooltip Control is based on it. It provides the opening/closing behavior and the main \"text\" property."
        },
        "UIComponent": {
            "attributes": [{
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Base Class for UIComponent. If you are extending a UIComponent make sure you read the #.extend documentation since the metadata is special."
        },
        "VariantLayoutData": {
            "attributes": [],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "Allows to add multiple LayoutData to one control in case that an easy switch of layouts (e.g. in a Form) is needed."
        },
        "DragDropBase": {
            "attributes": [],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Provides the base class for all drag-and-drop configurations.\nThis feature enables a native HTML5 drag-and-drop API for the controls, therefore it is limited to browser support.\nLimitations\n There is no mobile device that supports drag and drop. There is no accessible alternative for drag and drop. Applications which use the drag-and-drop functionality must provide an accessible alternative UI (for example, action buttons or menus) to perform the same operations. A custom dragging ghost element is not possible in Internet Explorer. Transparency of the drag ghost element depends on the browser implementation. Internet Explorer does only support plain text MIME type for the DataTransfer Object. Constraining a drag position is not possible, therefore there is no snap-to-grid or snap-to-element feature possible. For controls which do not provide an aggregation dragDropConfig drag and drop might not work correctly if they are configured as target via sap.ui.core.dnd.DragDropInfo.\n"
        },
        "DragDropInfo": {
            "attributes": [{
                "name": "sourceAggregation",
                "documentation": "The name of the aggregation from which all children can be dragged. If undefined, the control itself can be dragged."
            }, {
                "name": "targetAggregation",
                "documentation": "The aggregation name in the targetElement which is the target of this drag and drop action. If undefined, the entire\ntargetElement is the target. This can be handy if the target control does not have any aggregations or if the drop\nposition within the target does not matter."
            }, {
                "name": "dropEffect",
                "documentation": "Defines the visual drop effect."
            }, {
                "name": "dropPosition",
                "documentation": "Defines the position for the drop action, visualized by a rectangle."
            }, {
                "name": "dropLayout",
                "documentation": "Defines the layout of the droppable controls if dropPosition is set to Between or OnOrBetween."
            }, {
                "name": "targetElement",
                "documentation": "The target element for this drag and drop action. If undefined, the control with this drag and drop configuration itself is the target.\nLeaving this empty, but defining source and target aggregation, allows you to reorder the children within a control, for example."
            }, {
                "name": "dragStart",
                "documentation": "This event is fired when the user starts dragging an element."
            }, {
                "name": "dragEnter",
                "documentation": "This event is fired when a dragged element enters a drop target."
            }, {
                "name": "drop",
                "documentation": "This event is fired when an element is dropped on a valid drop target, as specified by the drag and drop info."
            }],
            "extendsElement": "sap.ui.core.DragDropBase",
            "documentation": "Provides the configuration for drag-and-drop operations."
        },
        "HTMLView": {
            "attributes": [{
                "name": "width",
                "documentation": "The width"
            }, {
                "name": "height",
                "documentation": "The height"
            }, {
                "name": "viewName",
                "documentation": "Name of the View"
            }, {
                "name": "displayBlock",
                "documentation": "Whether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line)."
            }, {
                "name": "afterInit",
                "documentation": "Fired when the View has parsed the UI description and instantiated the contained controls (/control tree)."
            }, {
                "name": "beforeExit",
                "documentation": "Fired when the view has received the request to destroy itself, but before it has destroyed anything."
            }, {
                "name": "afterRendering",
                "documentation": "Fired when the View has been (re-)rendered and its HTML is present in the DOM."
            }, {
                "name": "beforeRendering",
                "documentation": "Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc."
            }, {
                "name": "controllerName",
                "documentation": "Name of the controller class to use for this view."
            }, {
                "name": "resourceBundleName",
                "documentation": "Name of a resource bundle that should be loaded for this view"
            }, {
                "name": "resourceBundleAlias",
                "documentation": "Model name under which the resource bundle should be stored."
            }, {
                "name": "resourceBundleLocale",
                "documentation": "Locale that should be used to load a resourcebundle for this view"
            }, {
                "name": "type",
                "documentation": "Type of the view"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.View",
            "documentation": "A view defined/constructed by declarative HTML."
        },
        "JSONView": {
            "attributes": [{
                "name": "width",
                "documentation": "The width"
            }, {
                "name": "height",
                "documentation": "The height"
            }, {
                "name": "viewName",
                "documentation": "Name of the View"
            }, {
                "name": "displayBlock",
                "documentation": "Whether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line)."
            }, {
                "name": "afterInit",
                "documentation": "Fired when the View has parsed the UI description and instantiated the contained controls (/control tree)."
            }, {
                "name": "beforeExit",
                "documentation": "Fired when the view has received the request to destroy itself, but before it has destroyed anything."
            }, {
                "name": "afterRendering",
                "documentation": "Fired when the View has been (re-)rendered and its HTML is present in the DOM."
            }, {
                "name": "beforeRendering",
                "documentation": "Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc."
            }, {
                "name": "controllerName",
                "documentation": "Name of the controller class to use for this view."
            }, {
                "name": "resourceBundleName",
                "documentation": "Name of a resource bundle that should be loaded for this view"
            }, {
                "name": "resourceBundleAlias",
                "documentation": "Model name under which the resource bundle should be stored."
            }, {
                "name": "resourceBundleLocale",
                "documentation": "Locale that should be used to load a resourcebundle for this view"
            }, {
                "name": "type",
                "documentation": "Type of the view"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.View",
            "documentation": "A View defined using JSON."
        },
        "JSView": {
            "attributes": [{
                "name": "width",
                "documentation": "The width"
            }, {
                "name": "height",
                "documentation": "The height"
            }, {
                "name": "viewName",
                "documentation": "Name of the View"
            }, {
                "name": "displayBlock",
                "documentation": "Whether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line)."
            }, {
                "name": "afterInit",
                "documentation": "Fired when the View has parsed the UI description and instantiated the contained controls (/control tree)."
            }, {
                "name": "beforeExit",
                "documentation": "Fired when the view has received the request to destroy itself, but before it has destroyed anything."
            }, {
                "name": "afterRendering",
                "documentation": "Fired when the View has been (re-)rendered and its HTML is present in the DOM."
            }, {
                "name": "beforeRendering",
                "documentation": "Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc."
            }, {
                "name": "controllerName",
                "documentation": "Name of the controller class to use for this view."
            }, {
                "name": "resourceBundleName",
                "documentation": "Name of a resource bundle that should be loaded for this view"
            }, {
                "name": "resourceBundleAlias",
                "documentation": "Model name under which the resource bundle should be stored."
            }, {
                "name": "resourceBundleLocale",
                "documentation": "Locale that should be used to load a resourcebundle for this view"
            }, {
                "name": "type",
                "documentation": "Type of the view"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.View",
            "documentation": "A View defined/constructed by JavaScript code."
        },
        "TemplateView": {
            "attributes": [{
                "name": "width",
                "documentation": "The width"
            }, {
                "name": "height",
                "documentation": "The height"
            }, {
                "name": "viewName",
                "documentation": "Name of the View"
            }, {
                "name": "displayBlock",
                "documentation": "Whether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line)."
            }, {
                "name": "afterInit",
                "documentation": "Fired when the View has parsed the UI description and instantiated the contained controls (/control tree)."
            }, {
                "name": "beforeExit",
                "documentation": "Fired when the view has received the request to destroy itself, but before it has destroyed anything."
            }, {
                "name": "afterRendering",
                "documentation": "Fired when the View has been (re-)rendered and its HTML is present in the DOM."
            }, {
                "name": "beforeRendering",
                "documentation": "Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc."
            }, {
                "name": "controllerName",
                "documentation": "Name of the controller class to use for this view."
            }, {
                "name": "resourceBundleName",
                "documentation": "Name of a resource bundle that should be loaded for this view"
            }, {
                "name": "resourceBundleAlias",
                "documentation": "Model name under which the resource bundle should be stored."
            }, {
                "name": "resourceBundleLocale",
                "documentation": "Locale that should be used to load a resourcebundle for this view"
            }, {
                "name": "type",
                "documentation": "Type of the view"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.View",
            "documentation": "A view defined in a template."
        },
        "View": {
            "attributes": [{
                "name": "width",
                "documentation": "The width"
            }, {
                "name": "height",
                "documentation": "The height"
            }, {
                "name": "viewName",
                "documentation": "Name of the View"
            }, {
                "name": "displayBlock",
                "documentation": "Whether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line)."
            }, {
                "name": "afterInit",
                "documentation": "Fired when the View has parsed the UI description and instantiated the contained controls (/control tree)."
            }, {
                "name": "beforeExit",
                "documentation": "Fired when the view has received the request to destroy itself, but before it has destroyed anything."
            }, {
                "name": "afterRendering",
                "documentation": "Fired when the View has been (re-)rendered and its HTML is present in the DOM."
            }, {
                "name": "beforeRendering",
                "documentation": "Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc."
            }, {
                "name": "controllerName",
                "documentation": "Name of the controller class to use for this view."
            }, {
                "name": "resourceBundleName",
                "documentation": "Name of a resource bundle that should be loaded for this view"
            }, {
                "name": "resourceBundleAlias",
                "documentation": "Model name under which the resource bundle should be stored."
            }, {
                "name": "resourceBundleLocale",
                "documentation": "Locale that should be used to load a resourcebundle for this view"
            }, {
                "name": "type",
                "documentation": "Type of the view"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A base class for Views. Introduces the relationship to a Controller, some basic visual appearance settings like width and height,\nand provides lifecycle events."
        },
        "XMLView": {
            "attributes": [{
                "name": "width",
                "documentation": "The width"
            }, {
                "name": "height",
                "documentation": "The height"
            }, {
                "name": "viewName",
                "documentation": "Name of the View"
            }, {
                "name": "displayBlock",
                "documentation": "Whether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line)."
            }, {
                "name": "afterInit",
                "documentation": "Fired when the View has parsed the UI description and instantiated the contained controls (/control tree)."
            }, {
                "name": "beforeExit",
                "documentation": "Fired when the view has received the request to destroy itself, but before it has destroyed anything."
            }, {
                "name": "afterRendering",
                "documentation": "Fired when the View has been (re-)rendered and its HTML is present in the DOM."
            }, {
                "name": "beforeRendering",
                "documentation": "Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc."
            }, {
                "name": "controllerName",
                "documentation": "Name of the controller class to use for this view."
            }, {
                "name": "resourceBundleName",
                "documentation": "Name of a resource bundle that should be loaded for this view"
            }, {
                "name": "resourceBundleAlias",
                "documentation": "Model name under which the resource bundle should be stored."
            }, {
                "name": "resourceBundleLocale",
                "documentation": "Locale that should be used to load a resourcebundle for this view"
            }, {
                "name": "type",
                "documentation": "Type of the view"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.View",
            "documentation": "A View defined using (P)XML and HTML markup. Note:\nBe aware that modifications of the content aggregation of this control are not supported due to technical reasons.\nThis includes calls to all content modifying methods like addContent> etc., but also the implicit\nremoval of controls contained by the content aggregation. For example the destruction of a Control via the \ndestroy method. All functions can be called but may not work properly or lead to unexpected side effects. Note:\nOn root level, you can only define content for the default aggregation, e.g. without adding the &lt;content&gt; tag. If\nyou want to specify content for another aggregation of a view like dependents, place it in a child\ncontrol's dependents aggregation or add it by using sap.ui.core.mvc.XMLView."
        },
        "OpenSearchProvider": {
            "attributes": [{
                "name": "suggestUrl",
                "documentation": "The URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms' must be used. For cross domain requests maybe a proxy must be used."
            }, {
                "name": "suggestType",
                "documentation": "The type of data which is provided by the given suggestUrl: either 'json' or 'xml'."
            }, {
                "name": "icon",
                "documentation": "Icon of the Search Provider"
            }],
            "extendsElement": "sap.ui.core.SearchProvider",
            "documentation": "A SearchProvider which uses the OpenSearch protocol (either JSON or XML)."
        },
        "SearchProvider": {
            "attributes": [{
                "name": "icon",
                "documentation": "Icon of the Search Provider"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Abstract base class for all SearchProviders which can be e.g. attached to a SearchField. Do not create instances of this class, but use a concrete sub class instead."
        },
        "DOMAttribute": {
            "attributes": [{
                "name": "name",
                "documentation": "Name of the DOM attribute"
            }, {
                "name": "value",
                "documentation": "Value of the DOM attribute"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Represents a DOM attribute of a DOM element."
        },
        "DOMElement": {
            "attributes": [{
                "name": "text",
                "documentation": "The text content of the DOM element"
            }, {
                "name": "tag",
                "documentation": "The HTML-tag of the DOM element which contains the text"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Represents a DOM element. It allows to use databinding for the properties and nested DOM attributes."
        },
        "Template": {
            "attributes": [{
                "name": "content",
                "documentation": "The Template definition as a String."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Base Class for Template."
        },
        "TemplateControl": {
            "attributes": [{
                "name": "context",
                "documentation": "The context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object."
            }, {
                "name": "template",
                "documentation": "The template on which the template control is based on."
            }, {
                "name": "afterRendering",
                "documentation": "Fired when the Template Control has been (re-)rendered and its HTML is present in the DOM."
            }, {
                "name": "beforeRendering",
                "documentation": "Fired before this Template Control is re-rendered. Use to unbind event handlers from HTML elements etc."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This is the base class for all template controls. Template controls are declared based on templates."
        },
        "Fragment": {
            "attributes": [{
                "name": "id",
                "documentation": ""
            }, {
                "name": "fragmentName",
                "documentation": ""
            }, {
                "name": "type",
                "documentation": ""
            }],
            "extendsElement": "",
            "documentation": ""
        },
        "FragmentDefinition": {
            "attributes": [],
            "extendsElement": "",
            "documentation": ""
        }
    },
    "sap.ui.fl": {
        "TransportDialog": {
            "attributes": [{
                "name": "pkg",
                "documentation": "An ABAP package that can be used as default for the ABAP package selection."
            }, {
                "name": "transports",
                "documentation": "The set of ABAP transport requests that can be selected by a user."
            }, {
                "name": "lrepObject",
                "documentation": "The LREP object for which as transport request has to be selected"
            }, {
                "name": "hidePackage",
                "documentation": "Flag indicating whether the selection of an ABAP package is to be hidden or not."
            }, {
                "name": "ok",
                "documentation": "This event will be fired when the user clicks the OK button on the dialog."
            }, {
                "name": "cancel",
                "documentation": "This event will be fired when the user clicks the Cancel button on the dialog."
            }, {
                "name": "icon",
                "documentation": "Icon displayed in the dialog's header. This icon is invisible on the iOS platform and it's density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen."
            }, {
                "name": "title",
                "documentation": "Title text appears in the dialog header."
            }, {
                "name": "showHeader",
                "documentation": "Determines whether the header is shown inside the dialog. If this property is set to true, the text and icon property are ignored. This property has a default value true."
            }, {
                "name": "type",
                "documentation": "The type of the dialog. In some themes, the type \"message\" will limit the dialog's width within 480px on tablet and desktop."
            }, {
                "name": "state",
                "documentation": "The state affects the icon and the title color. If other than \"None\" is set, a predefined icon will be added to the dialog. Setting icon property will overwrite the predefined icon. The default value is \"None\" which doesn't add any icon to the Dialog control. This property is by now only supported by blue crystal theme."
            }, {
                "name": "stretchOnPhone",
                "documentation": "Determines whether the dialog will displayed on full screen on a phone."
            }, {
                "name": "stretch",
                "documentation": "Determines if the dialog will be stretched to full screen. This property is only applicable to standard dialog and message type dialog ignores this property."
            }, {
                "name": "contentWidth",
                "documentation": "Preferred width of content in Dialog. This property affects the width of dialog on phone in landscape mode, tablet or desktop, because the dialog has a fixed width on phone in portrait mode. If the preferred width is less than the minimum width of the dialog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of dialog width on tablet is 400px."
            }, {
                "name": "contentHeight",
                "documentation": "Preferred height of content in Dialog. If the preferred height is bigger than the available space on screen, it will be overwritten by the maximum available height on screen in order to make sure that dialog isn't cut off."
            }, {
                "name": "horizontalScrolling",
                "documentation": "Indicates if user can scroll horizontally inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property."
            }, {
                "name": "verticalScrolling",
                "documentation": "Indicates if user can scroll vertically inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property."
            }, {
                "name": "resizable",
                "documentation": "Indicates whether the dialog is resizable. the dialog is resizable. If this property is set to true, the dialog will have a resize handler in it's bottom right corner. This property has a default value false. The Dialog can be resizable only in desktop mode."
            }, {
                "name": "draggable",
                "documentation": "Indicates whether the dialog is draggable. If this property is set to true, the dialog will be draggable by it's header. This property has a default value false. The Dialog can be draggable only in desktop mode."
            }, {
                "name": "escapeHandler",
                "documentation": "This property expects a function with one parameter of type Promise. In the function you should call either resolve() or reject() on the Promise object.\nThe function allows you to define custom behaviour which will be executed when the ESCAPE key is pressed. By default when the ESCAPE key is pressed the Dialog is immediately closed."
            }, {
                "name": "leftButton",
                "documentation": "LeftButton is shown at the left edge of the bar in iOS, and at the right side of the bar for the other platforms. Please set this to null if you want to remove the left button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored. Setting leftButton will also set the beginButton internally."
            }, {
                "name": "rightButton",
                "documentation": "RightButton is always shown at the right edge of the bar. Please set this to null if you want to remove the right button from the bar. And the button is only removed from the bar, not destroyed. When showHeader is set to false, this property will be ignored. Setting rightButton will also set the endButton internally."
            }, {
                "name": "initialFocus",
                "documentation": "Focus is set to the dialog in the sequence of leftButton and rightButton when available. But if some other control needs to get the focus other than one of those two buttons, set the initialFocus with the control which should be focused on. Setting initialFocus to input controls doesn't open the on screen keyboard on mobile device, this is due to the browser limitation that the on screen keyboard can't be opened with javascript code. The opening of on screen keyboard must be triggered by real user action."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "beforeOpen",
                "documentation": "This event will be fired before the dialog is opened."
            }, {
                "name": "afterOpen",
                "documentation": "This event will be fired after the dialog is opened."
            }, {
                "name": "beforeClose",
                "documentation": "This event will be fired before the dialog is closed."
            }, {
                "name": "afterClose",
                "documentation": "This event will be fired after the dialog is closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Dialog",
            "documentation": "The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application."
        },
        "VariantManagement": {
            "attributes": [{
                "name": "showExecuteOnSelection",
                "documentation": "Indicates that Execute on Selection is visible in the Save Variant and the Manage Variants dialogs."
            }, {
                "name": "showSetAsDefault",
                "documentation": "Indicates that set as default is visible in the Save Variant and the Manage Variants dialogs."
            }, {
                "name": "manualVariantKey",
                "documentation": "If set totrue, the key for a vendor variant will be added manually.\nNode:This flag is only used internally in the app variant scenarios."
            }, {
                "name": "inErrorState",
                "documentation": "Indicates that the control is in error state. If set to true error message will be displayed whenever the variant is\nopened."
            }, {
                "name": "editable",
                "documentation": "Indicates that the control is in edit state. If set to false the footer of the views list will be hidden."
            }, {
                "name": "modelName",
                "documentation": "Determines the name of the model. The binding context will be defined by the current ID.\n\nNote: In a UI adaptation scenario, this property is not used at all because the model name is $FlexVariants"
            }, {
                "name": "updateVariantInURL",
                "documentation": "Determines the intention of setting the current variant based on passed information.\n\nNote: The VariantManagement control does not react in any way to this property."
            }, {
                "name": "for",
                "documentation": "Contains the controls, for which the variant management is responsible."
            }, {
                "name": "save",
                "documentation": "This event is fired when the Save Variant dialog is closed with OK for a variant."
            }, {
                "name": "manage",
                "documentation": "This event is fired when users apply changes to variants in the Manage Variants dialog."
            }, {
                "name": "initialized",
                "documentation": "This event is fired when the model and context are set."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The VariantManagement control can be used to manage variants, such as filter bar variants or table variants."
        }
    },
    "sap.ui.layout": {
        "BlockLayoutCell": {
            "attributes": [{
                "name": "title",
                "documentation": "Defines the title of the cell"
            }, {
                "name": "titleAlignment",
                "documentation": "Defines the alignment of the cell title"
            }, {
                "name": "titleLevel",
                "documentation": "Defines the aria level of the title\nThis information is e.g. used by assistive technologies like screenreaders to create a hierarchical site map for faster navigation."
            }, {
                "name": "width",
                "documentation": "Defines the width of the cell. Depending on the context of the cell - whether it's in scrollable,\nor non scrollable row, this property is interpreted in two different ways.\nIf the cell is placed inside a scrollable row - this property defines the width of the cell in\npercentages. If no value is provided - the default is 40%.\nIf the cell is placed inside a non scrollable row - this property defines the grow factor of the cell\ncompared to the whole row.\nFor example: If you have 2 cells, each with width of 1, this means that they should be of equal size,\nand they need to fill the whole row. This results in 50% width for each cell. If you have 2 cells,\none with width of 1, the other with width of 3, this means that the whole row width is 4, so the first\ncell will have a width of 25%, the second - 75%.\nAccording to the visual guidelines, it is suggested that you only use 25%, 50%, 75% or 100% cells in\nyou applications. For example, 12,5% width is not desirable (1 cell with width 1, and another with width 7)"
            }, {
                "name": "backgroundColorSet",
                "documentation": "The Background color set from which the background color will be selected.\nBy using background colors from the predefined sets your colors could later be customized from the Theme Designer.\nNote: backgroundColorSet should be used only in combination with backgroundColorShade."
            }, {
                "name": "backgroundColorShade",
                "documentation": "The index of the background color in the color set from which the color will be selected.\nBy using background colors from the predefined sets your colors could later be customized from the Theme Designer.\nNote: backgroundColorShade should be used only in combination with backgroundColorSet."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The BlockLayoutCell is used as an aggregation of the BlockLayoutRow. It contains Controls.\nThe BlockLayoutCell should be used only as aggregation of the BlockLayoutRow."
        },
        "BlockLayoutCellData": {
            "attributes": [{
                "name": "sSize",
                "documentation": "Sets the width of the cell for S size of the BlockLayout."
            }, {
                "name": "mSize",
                "documentation": "Sets the width of the cell for M size of the BlockLayout."
            }, {
                "name": "lSize",
                "documentation": "Sets the width of the cell for L size of the BlockLayout."
            }, {
                "name": "xlSize",
                "documentation": "Sets the width of the cell for XL size of the BlockLayout."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "Holds layout data for the BlockLayoutCells contents."
        },
        "BlockLayoutRow": {
            "attributes": [{
                "name": "scrollable",
                "documentation": "Sets the rendering mode of the BlockLayoutRow to scrollable. In scrollable mode, the cells get\naligned side by side, with horizontal scroll bar for the row."
            }, {
                "name": "rowColorSet",
                "documentation": "Defines background type for that row.\nThere might be several rows with the same type"
            }, {
                "name": "accentCells",
                "documentation": "Cells that would be accented.\n*Note:* This association has visual impact only for BlockLayouts with background types \"Mixed\" and \"Accent\". Mixed: In this type, areas of 25% (on desktop) can have a dark background color. Per section one area can be dark.\nAccent: Every section can contain multiple gray blocks, which are used alternately, beginning with the bright one"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The BlockLayoutRow is used as an aggregation to the BlockLayout. It aggregates Block Layout cells.\nThe BlockLayoutRow has 2 rendering modes - scrollable and non scrollable."
        },
        "FixFlex": {
            "attributes": [{
                "name": "vertical",
                "documentation": "Determines the direction of the layout of child elements. True for vertical and false for horizontal layout."
            }, {
                "name": "fixFirst",
                "documentation": "Determines whether the fixed-size area should be on the beginning/top ( if the value is \"true\") or end/bottom ( if the value is \"false\")."
            }, {
                "name": "fixContentSize",
                "documentation": "Determines the height (if the vertical property is \"true\") or the width (if the vertical property is \"false\") of the fixed area. If left at the default value \"auto\", the fixed-size area will be as large as its content. In this case the content cannot use percentage sizes."
            }, {
                "name": "minFlexSize",
                "documentation": "Enables scrolling inside the flexible part. The given size is calculated in \"px\". If the child control in the flexible part is larger than the available flexible size on the screen and if the available size for the flexible part is smaller or equal to the minFlexSize value, the scroll will be for the entire FixFlex control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A layout container with a fixed and a flexible part.\nOverview\nThe FixFlex control builds the container for a layout with a fixed and a flexible part. The flexible container adapts its size to the fix container.\nGuidelines:\n\nThe fix container can hold any number of controls, while the flexible container can hold only one\nIn order for the FixFlex to stretch properly, the parent element, in which the control is placed, needs to have a specified height or needs to have an absolute position.\nAvoid nesting FixFlex in other flexbox-based layout controls ( sap.ui.layout.FixFlex FixFlex, sap.m.FlexBox FlexBox, Hbox, Vbox). Otherwise, contents may be not accessible or multiple scrollbars can appear.\n\nStructure\nThe behavior of the FixFlex is controlled by the following properties:\n\nfixContentSize - The width/height of the fix part of the control\nfixFirst - The ordering of the fix and flex part\nminFlexSize - Scrolling inside the flex part, if its contents are large\nvertical - Alignment of the FixFlex control\n\nResponsive Behavior\n\nIf the child control of the flex or the fix container has width/height bigger than the container itself, the child control will be cropped in the view.\nIf minFlexSize is set, then a scrollbar is shown in the flexible part, depending on the vertical property.\n"
        },
        "Grid": {
            "attributes": [{
                "name": "width",
                "documentation": "Optional. Width of the Grid. If not specified, then 100%."
            }, {
                "name": "vSpacing",
                "documentation": "Optional. Vertical spacing between the rows in the Grid. In rem, allowed values are 0, 0.5, 1 and 2."
            }, {
                "name": "hSpacing",
                "documentation": "Optional. Horizontal spacing between the content in the Grid. In rem, allowed values are 0, 0.5 , 1 or 2."
            }, {
                "name": "position",
                "documentation": "Optional. Position of the Grid in the window or surrounding container. Possible values are \"Center\", \"Left\" and \"Right\"."
            }, {
                "name": "defaultSpan",
                "documentation": "Optional. A string type that represents Grid's default span values for large, medium and small screens for the whole Grid. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small."
            }, {
                "name": "defaultIndent",
                "documentation": "Optional. Defines default for the whole Grid numbers of empty columns before the current span begins. It can be defined for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 0 to 11 that the container has to take, for example: \"L2 M4 S6\", \"M11\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small."
            }, {
                "name": "containerQuery",
                "documentation": "If true then not the media Query ( device screen size), but the size of the container surrounding the grid defines the current range (large, medium or small)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The Grid control is a layout which positions its child controls in a 12 column flow layout. Its children can be specified to take on a variable amount of columns depending on available screen size. With this control it is possible to achieve flexible layouts and line-breaks for extra large-, large-, medium- and small-sized screens, such as large desktop, desktop, tablet, and mobile. The Grid control's width can be percentage- or pixel-based and the spacing between its columns can be set to various pre-defined values."
        },
        "GridData": {
            "attributes": [{
                "name": "span",
                "documentation": "A string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small."
            }, {
                "name": "spanXL",
                "documentation": "Optional. Defines a span value for extra large screens. This value overwrites the value for extra large screens defined in the parameter \"span\"."
            }, {
                "name": "spanL",
                "documentation": "Optional. Defines a span value for large screens. This value overwrites the value for large screens defined in the parameter \"span\"."
            }, {
                "name": "spanM",
                "documentation": "Optional. Defines a span value for medium size screens. This value overwrites the value for medium screens defined in the parameter \"span\"."
            }, {
                "name": "spanS",
                "documentation": "Optional. Defines a span value for small screens. This value overwrites the value for small screens defined in the parameter \"span\"."
            }, {
                "name": "indent",
                "documentation": "A string type that represents Grid's span values for large, medium and small screens. Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\". Note that the parameters has to be provided in the order large medium small."
            }, {
                "name": "indentXL",
                "documentation": "Optional. Defines a span value for extra large screens. This value overwrites the value for extra large screens defined in the parameter \"indent\"."
            }, {
                "name": "indentL",
                "documentation": "Optional. Defines a span value for large screens. This value overwrites the value for large screens defined in the parameter \"indent\"."
            }, {
                "name": "indentM",
                "documentation": "Optional. Defines a span value for medium size screens. This value overwrites the value for medium screens defined in the parameter \"indent\"."
            }, {
                "name": "indentS",
                "documentation": "Optional. Defines a span value for small screens. This value overwrites the value for small screens defined in the parameter \"indent\"."
            }, {
                "name": "visibleXL",
                "documentation": "Defines if this Control is visible on XL - extra Large screens."
            }, {
                "name": "visibleL",
                "documentation": "Defines if this Control is visible on Large screens."
            }, {
                "name": "visibleM",
                "documentation": "Defines if this Control is visible on Medium size screens."
            }, {
                "name": "visibleS",
                "documentation": "Defines if this Control is visible on small screens."
            }, {
                "name": "moveBackwards",
                "documentation": "Optional. Moves a cell backwards so many columns as specified."
            }, {
                "name": "moveForward",
                "documentation": "Optional. Moves a cell forwards so many columns as specified."
            }, {
                "name": "linebreak",
                "documentation": "Optional. If this property is set to true, the control on all-size screens causes a line break within the Grid and becomes the first within the next line."
            }, {
                "name": "linebreakXL",
                "documentation": "Optional. If this property is set to true, the control on extra large screens causes a line break within the Grid and becomes the first within the next line."
            }, {
                "name": "linebreakL",
                "documentation": "Optional. If this property is set to true, the control on large screens causes a line break within the Grid and becomes the first within the next line."
            }, {
                "name": "linebreakM",
                "documentation": "Optional. If this property is set to true, the control on medium sized screens causes a line break within the Grid and becomes the first within the next line."
            }, {
                "name": "linebreakS",
                "documentation": "Optional. If this property is set to true, the control on small screens causes a line break within the Grid and becomes the first within the next line."
            }, {
                "name": "spanLarge",
                "documentation": "Deprecated. Defines a span value for large screens. This value overwrites the value for large screens defined in the parameter \"span\"."
            }, {
                "name": "spanMedium",
                "documentation": "Deprecated. Defines a span value for medium size screens. This value overwrites the value for medium screens defined in the parameter \"span\"."
            }, {
                "name": "spanSmall",
                "documentation": "Deprecated. Defines a span value for small screens. This value overwrites the value for small screens defined in the parameter \"span\"."
            }, {
                "name": "indentLarge",
                "documentation": "Deprecated. Defines a span value for large screens. This value overwrites the value for large screens defined in the parameter \"indent\"."
            }, {
                "name": "indentMedium",
                "documentation": "Deprecated. Defines a span value for medium size screens. This value overwrites the value for medium screens defined in the parameter \"indent\"."
            }, {
                "name": "indentSmall",
                "documentation": "Deprecated. Defines a span value for small screens. This value overwrites the value for small screens defined in the parameter \"indent\"."
            }, {
                "name": "visibleOnLarge",
                "documentation": "Deprecated. Defines if this Control is visible on Large screens."
            }, {
                "name": "visibleOnMedium",
                "documentation": "Deprecated. Defines if this Control is visible on Medium size screens."
            }, {
                "name": "visibleOnSmall",
                "documentation": "Deprecated. Defines if this Control is visible on small screens."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "Grid layout data"
        },
        "HorizontalLayout": {
            "attributes": [{
                "name": "allowWrapping",
                "documentation": "Specifies whether the content inside the Layout shall be line-wrapped in the case that there is less horizontal space available than required."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A layout that provides support for horizontal alignment of controls"
        },
        "ResponsiveFlowLayout": {
            "attributes": [{
                "name": "responsive",
                "documentation": "If set to false, all added controls will keep their width, or otherwise, the controls will be stretched to the possible width of a row."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This is a layout where several controls can be added. These controls are blown up to fit in an entire row. If the window resizes, the controls are moved between the rows and resized again."
        },
        "ResponsiveFlowLayoutData": {
            "attributes": [{
                "name": "minWidth",
                "documentation": "Defines the minimal size in px of a ResponsiveFlowLayout element. The element will be shrunk down to this value."
            }, {
                "name": "weight",
                "documentation": "Defines the weight of the element, that influences the resulting width. If there are several elements within a row of the ResponsiveFlowLayout, each element could have another weight. The bigger the weight of a single element, the wider it will be stretched, i.e. a bigger weight results in a larger width."
            }, {
                "name": "linebreak",
                "documentation": "If this property is set, the control in which the LayoutData is added, will always cause a line break within the ResponsiveFlowLayout."
            }, {
                "name": "margin",
                "documentation": "Prevents any margin of the element if set to false."
            }, {
                "name": "linebreakable",
                "documentation": "Shows if an element can be wrapped into a new row. If this value is set to false, the min-width will be set to 0 and the wrapping is up to the previous element."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "This is a LayoutData element that can be added to a control if this control is used within a ResponsiveFlowLayout."
        },
        "Splitter": {
            "attributes": [{
                "name": "orientation",
                "documentation": "Whether to split the contents horizontally (default) or vertically."
            }, {
                "name": "width",
                "documentation": "The width of the control"
            }, {
                "name": "height",
                "documentation": "The height of the control"
            }, {
                "name": "resize",
                "documentation": "Event is fired when contents are resized."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A layout that contains several content areas. The content that is added to the splitter should contain LayoutData of the type SplitterLayoutData that defines its size and size contraints. By adding or changing SplitterLayoutData to the controls that make up the content areas, the size can be changed programatically. Additionally the contents can be made non-resizable individually and a minimal size (in px) can be set. The orientation of the splitter can be set to horizontal (default) or vertical. All content areas of the splitter will be arranged in that way. In order to split vertically and horizontally at the same time, Splitters need to be nested. The splitter bars can be focused to enable resizing of the content areas via keyboard. The contents size can be manipulated when the splitter bar is focused and Shift-Left/Down/Right/Up are pressed. When Shift-Home/End are pressed, the contents are set their minimum or maximum size (keep in mind though, that resizing an auto-size content-area next to another auto-size one might lead to the effect that the former does not take its maximum size but only the maximum size before recalculating auto sizes). The splitter bars used for resizing the contents by the user can be set to different widths (or heights in vertical mode) and the splitter will automatically resize the other contents accordingly. In case the splitter bar is resized after the splitter has rendered, a manual resize has to be triggered by invoking triggerResize() on the Splitter."
        },
        "SplitterLayoutData": {
            "attributes": [{
                "name": "resizable",
                "documentation": "Determines whether the control in the splitter can be resized or not."
            }, {
                "name": "size",
                "documentation": "Sets the size of the splitter content."
            }, {
                "name": "minSize",
                "documentation": "Sets the minimum size of the splitter content in px."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "Holds layout data for the splitter contents.\nAllowed size values are numeric values ending in \"px\" and \"%\" and the\nspecial case \"auto\".\n(The CSS value \"auto\" is used internally to recalculate the size of the content\ndynamically and is not directly set as style property.)"
        },
        "VerticalLayout": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the VerticalLayout. If no width is set, the width of the content is used.\nIf the content of the layout has a larger width than the layout, it is cut off.\nThere is no scrolling inside the layout."
            }, {
                "name": "enabled",
                "documentation": "If not enabled, all controls inside are not enabled automatically."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "In this layout the content controls are rendered one below the other."
        }
    },
    "sap.ui.suite": {
        "TaskCircle": {
            "attributes": [{
                "name": "value",
                "documentation": "Current value of the task circle to be displayed. In dependency of the parameters maxValue and minValue it controls the size of the circle."
            }, {
                "name": "maxValue",
                "documentation": "Upper limit of the displayed values. Default is 100."
            }, {
                "name": "minValue",
                "documentation": "Lower limit of the displayed values. Default is 0."
            }, {
                "name": "color",
                "documentation": "Color of the circle. The default color is red."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user clicks the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control shows a circle which radius and color depends on the given parameters"
        },
        "VerticalProgressIndicator": {
            "attributes": [{
                "name": "percentage",
                "documentation": "The numerical value between 0 and 100 which determines the height of the vertical bar. Values higher than 100 will be displayed as 100%, values lower than zero will be displayed as 0%."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user clicks the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This control shows a vertical progress bar in dependency of the given percentage. Only values between 0 and 100 are valid."
        }
    },
    "sap.ui.table": {
        "AnalyticalColumn": {
            "attributes": [{
                "name": "leadingProperty",
                "documentation": "Defines the primary model property which is used inside the Column. In case of the analytical extension this means the property which is grouped by for dimensions or the property which is summed for measures."
            }, {
                "name": "summed",
                "documentation": "If defined a sum for this column is calculated"
            }, {
                "name": "inResult",
                "documentation": "Specifies that the dimension referred to by the column shall be included in the granularity of the data result. It allows a finer distinction between a visible/grouped/(included)inResult column."
            }, {
                "name": "showIfGrouped",
                "documentation": "Specifies whether the column is displayed within the table even if it is grouped or not. A grouped column has the same value for every rows within the group."
            }, {
                "name": "groupHeaderFormatter",
                "documentation": "If the column is grouped, this formatter is used to format the value in the group header"
            }, {
                "name": "width",
                "documentation": "Width of the column in CSS units.\nDefault value is auto, see \nMinimal column width is device-dependent, for example on desktop devices the column will not be smaller than 48px.\nThis property can be changed by the user or by the application configuration/personalization.\nIf a user adjusts the column width manually, the resulting value is always set in pixels.\nIn addition, other columns with width auto get a fixed minimum width and do not shrink after the resizing."
            }, {
                "name": "minWidth",
                "documentation": "Defines the minimum width of a column in pixels.\nThis property only has an effect if the given column width is flexible, for example with width auto.\nThis property only influences the automatic behavior. If a user adjusts the column width manually, the column width can become\nsmaller.\nMinimal column width is device-dependent, for example on desktop devices the column will not be smaller than 48px."
            }, {
                "name": "flexible",
                "documentation": "If the table is wider than the sum of widths of the visible columns, the columns will be\nresized proportionally to their widths that were set originally. If set to false, the column will be displayed in the\noriginal width. If all columns are set to not be flexible, an extra \"dummy\" column will be\ncreated at the end of the table."
            }, {
                "name": "resizable",
                "documentation": "If set to true, the column can be resized either using the resize bar (by mouse) or using\nthe keyboard (SHIFT + Left/Right Arrow keys)"
            }, {
                "name": "hAlign",
                "documentation": "Horizontal alignment of the column content. Controls with a text align do not inherit\nthe horizontal alignment. You have to set the text align directly on the template."
            }, {
                "name": "sorted",
                "documentation": "Indicates if the column is sorted. This property only controls if a sort indicator is displayed in the\ncolumn header - it does not trigger the sort function. The column has to be sorted by calling Column.sort()"
            }, {
                "name": "sortOrder",
                "documentation": "This property indicates the sort direction (Ascending or Descending). The corresponding icon will be\nrendered if the property sorted is true"
            }, {
                "name": "sortProperty",
                "documentation": "Specifies the binding property on which the column will sort.\nSince the column template may have composite bindings, it's not possible to figure out on which binding\nproperty the sort shall be applied. Therefore the binding property for sorting must be specified.\nFor example, if the first name and last name are displayed in the same column, only one of the two can be defined as\nsortProperty. A column menu entry for sorting can only be generated if the sortProperty is set."
            }, {
                "name": "filtered",
                "documentation": "Indicates if the column is filtered. This property only controls if a filter indicator is displayed in the\ncolumn header - it does not trigger the filter function. The column has to be filtered by calling Column.sort()"
            }, {
                "name": "filterProperty",
                "documentation": "Specifies the binding property on which the column shall be filtered.\nSince the column template may have composite bindings, it's not possible to figure out on which binding\nproperty the filter shall be applied. Therefore the binding property for filtering must be specified.\nFor example, if the first name and last name are displayed in the same column, only one of the two can be defined as\nfilterProperty. A column menu entry for filtering can only be generated if the filterProperty is set. The\ndefault menu entry is a text input field."
            }, {
                "name": "filterValue",
                "documentation": "Specifies the value of the filter as string (will be converted into the proper data type). It is possible\nto provide a filterOperator as string, as shown here:\n\n&gt; 50\n&lt; 100\n&gt;= 150\n&lt;= 200\n= 250\n!= 300\n*something ends with\nsomething* starts with\n*something* contains\nsome..thing between\n50..100 between\n"
            }, {
                "name": "filterOperator",
                "documentation": "Filter operator to use when filtering this column."
            }, {
                "name": "defaultFilterOperator",
                "documentation": "If this property is set, the default filter operator of the column is overridden.\nBy default Contains is used for string and EQ for other types. A valid\nsap.ui.model.FilterOperator needs to be passed."
            }, {
                "name": "filterType",
                "documentation": "Type of Filter. This is used to transform the search term to the specified type,\nto make sure that the right columns are displayed. This should be the same as defined\nin binding for this column. As an alternative you can pass a function which does the conversion.\nThe function receives the entered filter value as parameter and returns the proper\nvalue for the filter expression. Another option is to pass the class name of the type,\ne.g.: sap.ui.model.type.Date or an expression similar to the binding syntax,\ne.g.: \"\\{type: 'sap.ui.model.type.Date', formatOptions: \\{UTC: true\\, constraints: \\{\\ \\\".\nHere the escaping is mandatory to avoid handling by the binding parser.\nBy default the filter type is sap.ui.model.type.String."
            }, {
                "name": "grouped",
                "documentation": "Indicates if the column is grouped."
            }, {
                "name": "visible",
                "documentation": "Invisible controls are not rendered."
            }, {
                "name": "name",
                "documentation": "The name of the column which is used in the column visibility menu item as text.\nIf not set as a fallback the column menu tries to get the text from the nested Label."
            }, {
                "name": "showFilterMenuEntry",
                "documentation": "Defines if the filter menu entry is displayed"
            }, {
                "name": "showSortMenuEntry",
                "documentation": "Defines if the sort menu entries are displayed"
            }, {
                "name": "headerSpan",
                "documentation": "If this property is set, a span is applied for the header. When moving columns, all columns\nwhich are part of the header will be moved. The headerSpan can be either an integer or an array of\nintegers (if you use the multi header feature of the table). If you only specify an integer, this span is\napplied for all header rows, with multiple integers you can specify a separate span for each header row."
            }, {
                "name": "autoResizable",
                "documentation": "Enables auto-resizing of the column on double clicking the resize bar. The width is determined on the widest\ncurrently displayed content. It does not consider rows which are currently not scrolled into view.\nCurrently only implemented to work with the following controls:\nsap.m.Text, sap.m.Label, sap.m.Link, sap.m.Input,\nsap.ui.commons.TextView, sap.ui.commons.Label, sap.ui.commons.Link and sap.ui.commons.TextField,\nsap.ui.commons.Checkbox, sap.m.Checkbox"
            }, {
                "name": "columnMenuOpen",
                "documentation": "Fires before the column menu is opened."
            }],
            "extendsElement": "sap.ui.table.Column",
            "documentation": "This column adds additional properties to the table column which are needed for the analytical binding and table"
        },
        "AnalyticalColumnMenu": {
            "attributes": [{
                "name": "enabled",
                "documentation": "When a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase) has no effect when the menu of the item is disabled."
            }, {
                "name": "ariaDescription",
                "documentation": "Accessible label / description of the menu for assistive technologies like screenreaders."
            }, {
                "name": "maxVisibleItems",
                "documentation": "The maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached."
            }, {
                "name": "pageSize",
                "documentation": "The keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the Home / End keys for jumping\nto the first / last item, the Page Up / Page Down keys can be used to jump an arbitrary number of items up or down. This number can be defined via the pageSize property.\nFor values smaller than 1, paging behaves in a similar way to when using the Home / End keys. If the value equals 1, the paging behavior is similar to that of the arrow keys."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Reference to accessible labels (ids of existing DOM elements or controls) for assistive technologies like screenreaders."
            }, {
                "name": "itemSelect",
                "documentation": "Fired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus.\nNote: There is also a select event available for each single menu item. This event and the event of the menu items are redundant."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.table.ColumnMenu",
            "documentation": "A column menu which is used by the analytical column"
        },
        "AnalyticalTable": {
            "attributes": [{
                "name": "sumOnTop",
                "documentation": "Specifies if the total values should be displayed in the group headers or on bottom of the row. Does not affect the total sum."
            }, {
                "name": "numberOfExpandedLevels",
                "documentation": "Number of levels, which should be opened initially (on first load of data)."
            }, {
                "name": "autoExpandMode",
                "documentation": "The kind of auto expansion algorithm, e.g. optimized filter conditions, per level requests, ...\nMust be a value of sap.ui.table.TreeAutoExpandMode."
            }, {
                "name": "columnVisibilityMenuSorter",
                "documentation": "Functions which is used to sort the column visibility menu entries e.g.: function(ColumnA, ColumnB) { return 0 = equals, 0 greater ; Other values than functions will be ignored."
            }, {
                "name": "collapseRecursive",
                "documentation": "Setting collapseRecursive to true means, that when collapsing a node all subsequent child nodes will also be collapsed. Calling the setter of this property only has an effect when the tables rows aggregation is already bound and\nthe binding supports this feature."
            }, {
                "name": "dirty",
                "documentation": "If dirty the content of the Table will be overlayed."
            }, {
                "name": "width",
                "documentation": "Width of the Table."
            }, {
                "name": "rowHeight",
                "documentation": "The height of the row content in pixel. The actual row height is also influenced by other factors, such as the border width.\nIf no value is set, a default height is applied based on the content density configuration."
            }, {
                "name": "columnHeaderHeight",
                "documentation": "Height of the column header of the Table in pixel."
            }, {
                "name": "columnHeaderVisible",
                "documentation": "Flag whether the column header is visible or not."
            }, {
                "name": "visibleRowCount",
                "documentation": "Number of visible rows of the table."
            }, {
                "name": "firstVisibleRow",
                "documentation": "First visible row."
            }, {
                "name": "selectionMode",
                "documentation": "Selection mode of the Table. This property controls whether single or multiple rows can be selected and\nhow the selection can be extended. It may also influence the visual appearance.\nWhen the selection mode is changed, the current selection is removed.\nNote: Since the group header visualization relies on the row selectors, the row selectors are always shown if the grouping\nfunctionality (depends on table type) is enabled, even if sap.ui.table.SelectionMode.None is set."
            }, {
                "name": "selectionBehavior",
                "documentation": "Selection behavior of the Table. This property defines whether the row selector is displayed and whether the row, the row selector or\nboth can be clicked to select a row.\nNote: Since the group header visualization relies on the row selectors, the row selectors are always shown if the grouping\nfunctionality (depends on table type) is enabled, even if sap.ui.table.SelectionBehavior.RowOnly is set."
            }, {
                "name": "selectedIndex",
                "documentation": "Zero-based index of selected item. Index value for no selection is -1.\nWhen multi-selection is enabled and multiple items are selected, the method returns\nthe lead selected item. Sets the zero-based index of the currently selected item. This method\nremoves any previous selections. When the given index is invalid, the call is ignored."
            }, {
                "name": "editable",
                "documentation": "Flag whether the controls of the Table are editable or not (currently this only controls the background color in certain themes!)"
            }, {
                "name": "navigationMode",
                "documentation": "This property has been deprecated and must not be used anymore, since Scrollbar is the only supported option."
            }, {
                "name": "threshold",
                "documentation": "The threshold defines how many additional (not yet visible records) shall be pre-fetched to enable smooth\nscrolling. The threshold is always added to the visibleRowCount. If the visibleRowCount is 10 and the\nthreshold is 100, there will be 110 records fetched with the initial load.\nIf the threshold is lower than the visibleRowCount, the visibleRowCount will be used as\nthe threshold. If the value is 0 then the thresholding is disabled."
            }, {
                "name": "enableColumnReordering",
                "documentation": "Flag to enable or disable column reordering"
            }, {
                "name": "enableGrouping",
                "documentation": "Enables or disables grouping. If grouping is enabled, the table is grouped by the column which is defined\nin the groupBy association. The following restrictions apply:\n Only client models are supported (e.g. sap.ui.model.json.JSONModel). Grouping does not work with OData models. The table can only be grouped by one column at a time. Grouping by another column will remove the current grouping. If grouping has been done, sorting and filtering is not possible. Any existing sorting and filtering rules do no longer apply. The UI is not updated accordingly (e.g. menu items, sort and filter icons). The column, by which the table is grouped, is not visible. It will become visible again only if the table is grouped by another column or grouping is disabled.\n"
            }, {
                "name": "showColumnVisibilityMenu",
                "documentation": "Flag to show or hide the column visibility menu. This menu will get displayed in each\ngenerated column header menu. It allows to show or hide columns"
            }, {
                "name": "showNoData",
                "documentation": "Flag whether to show the no data overlay or not once the table is empty. If set to false\nthe table will just show a grid of empty cells"
            }, {
                "name": "visibleRowCountMode",
                "documentation": "This defines how the table handles the visible rows in the table. The default behavior is,\nthat a fixed row count is defined. If you change it to auto the visibleRowCount property is\nchanged by the table automatically. It will then adjust its maximum row count to the space it is\nallowed to cover (limited by the surrounding container) and its minimum row count to the value of\nthe property minAutoRowCount (default value : 5) In manual mode the user can change\nthe visibleRowCount interactively."
            }, {
                "name": "minAutoRowCount",
                "documentation": "This property is used to set the minimum count of visible rows when the property visibleRowCountMode is set to Auto or Interactive.\nFor any other visibleRowCountMode, it is ignored."
            }, {
                "name": "fixedColumnCount",
                "documentation": "Number of columns that are fix on the left. When you use a horizontal scrollbar, only\nthe columns which are not fixed, will scroll. Fixed columns need a defined width for the feature to work.\nPlease note that the aggregated width of all fixed columns must not exceed the table width since there\nwill be no scrollbar for fixed columns."
            }, {
                "name": "fixedRowCount",
                "documentation": "Number of rows that are fix on the top. When you use a vertical scrollbar, only the rows which are not fixed, will scroll."
            }, {
                "name": "fixedBottomRowCount",
                "documentation": "Number of rows that are fix on the bottom. When you use a vertical scrollbar, only the rows which are not fixed, will scroll."
            }, {
                "name": "enableColumnFreeze",
                "documentation": "Flag whether to show or hide the column menu item to freeze or unfreeze a column."
            }, {
                "name": "enableCellFilter",
                "documentation": "Flag whether to enable or disable the context menu on cells to trigger a filtering with the cell value."
            }, {
                "name": "showOverlay",
                "documentation": "Setting this property to true will show an overlay on top of the Table content and users cannot click anymore on the Table content."
            }, {
                "name": "enableSelectAll",
                "documentation": "Specifies if a select all button should be displayed in the top left corner. This button is only displayed\nif the row selector is visible and the selection mode is set to any kind of multi selection."
            }, {
                "name": "enableCustomFilter",
                "documentation": "Set this parameter to true to implement your own filter behaviour. Instead of the filter input box a button\nwill be rendered for which' press event (customFilter) you can register an event handler."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "If set to true, the table changes its busy state, resulting in showing or hiding the busy indicator.\nThe table will switch to busy as soon as data is retrieved to be displayed in the currently visible rows. This happens,\nfor example, during scrolling, filtering, or sorting. As soon as the data has been retrieved, the table switches back to not busy.\nThe busy state of the table can still be set manually by calling sap.ui.core.Control."
            }, {
                "name": "rowActionCount",
                "documentation": "Number of row actions made visible which determines the width of the row action column.\nThe values 0, 1 and 2 are possible."
            }, {
                "name": "alternateRowColors",
                "documentation": "Enables alternating table row colors.\nAlternate row coloring is not available for the tree mode."
            }, {
                "name": "groupBy",
                "documentation": "The column by which the table is grouped. Grouping will only be performed if enableGrouping is set to true."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "rowSelectionChange",
                "documentation": "fired when the row selection of the table has been changed (the event parameters can be used to determine\nselection changes - to find out the selected rows you should better use the table selection API)"
            }, {
                "name": "columnSelect",
                "documentation": "fired when a column of the table has been selected"
            }, {
                "name": "columnResize",
                "documentation": "fired when a table column is resized."
            }, {
                "name": "columnMove",
                "documentation": "fired when a table column is moved."
            }, {
                "name": "sort",
                "documentation": "fired when the table is sorted."
            }, {
                "name": "filter",
                "documentation": "fired when the table is filtered."
            }, {
                "name": "group",
                "documentation": "fired when the table is grouped (experimental!)."
            }, {
                "name": "columnVisibility",
                "documentation": "fired when the visibility of a table column is changed."
            }, {
                "name": "cellClick",
                "documentation": "fired when the user clicks a cell of the table (experimental!)."
            }, {
                "name": "cellContextmenu",
                "documentation": "fired when the user clicks a cell of the table."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the user requests the context menu for a table cell."
            }, {
                "name": "columnFreeze",
                "documentation": "fired when a column of the table should be freezed"
            }, {
                "name": "customFilter",
                "documentation": "This event is triggered when the custom filter item of the column menu is pressed. The column on which the event was triggered is\npassed as parameter."
            }, {
                "name": "firstVisibleRowChanged",
                "documentation": "This event gets fired when the first visible row is changed. It should only be used by composite controls.\nThe event even is fired when setFirstVisibleRow is called programmatically."
            }, {
                "name": "busyStateChanged",
                "documentation": "This event gets fired when the busy state of the table changes. It should only be used by composite controls."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.table.Table",
            "documentation": "Table which handles analytical OData backends. The AnalyticalTable only works with an AnalyticalBinding and\ncorrectly annotated OData services. Please check on the SAP Annotations for OData Version 2.0 documentation for further details."
        },
        "Column": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the column in CSS units.\nDefault value is auto, see \nMinimal column width is device-dependent, for example on desktop devices the column will not be smaller than 48px.\nThis property can be changed by the user or by the application configuration/personalization.\nIf a user adjusts the column width manually, the resulting value is always set in pixels.\nIn addition, other columns with width auto get a fixed minimum width and do not shrink after the resizing."
            }, {
                "name": "minWidth",
                "documentation": "Defines the minimum width of a column in pixels.\nThis property only has an effect if the given column width is flexible, for example with width auto.\nThis property only influences the automatic behavior. If a user adjusts the column width manually, the column width can become\nsmaller.\nMinimal column width is device-dependent, for example on desktop devices the column will not be smaller than 48px."
            }, {
                "name": "flexible",
                "documentation": "If the table is wider than the sum of widths of the visible columns, the columns will be\nresized proportionally to their widths that were set originally. If set to false, the column will be displayed in the\noriginal width. If all columns are set to not be flexible, an extra \"dummy\" column will be\ncreated at the end of the table."
            }, {
                "name": "resizable",
                "documentation": "If set to true, the column can be resized either using the resize bar (by mouse) or using\nthe keyboard (SHIFT + Left/Right Arrow keys)"
            }, {
                "name": "hAlign",
                "documentation": "Horizontal alignment of the column content. Controls with a text align do not inherit\nthe horizontal alignment. You have to set the text align directly on the template."
            }, {
                "name": "sorted",
                "documentation": "Indicates if the column is sorted. This property only controls if a sort indicator is displayed in the\ncolumn header - it does not trigger the sort function. The column has to be sorted by calling Column.sort()"
            }, {
                "name": "sortOrder",
                "documentation": "This property indicates the sort direction (Ascending or Descending). The corresponding icon will be\nrendered if the property sorted is true"
            }, {
                "name": "sortProperty",
                "documentation": "Specifies the binding property on which the column will sort.\nSince the column template may have composite bindings, it's not possible to figure out on which binding\nproperty the sort shall be applied. Therefore the binding property for sorting must be specified.\nFor example, if the first name and last name are displayed in the same column, only one of the two can be defined as\nsortProperty. A column menu entry for sorting can only be generated if the sortProperty is set."
            }, {
                "name": "filtered",
                "documentation": "Indicates if the column is filtered. This property only controls if a filter indicator is displayed in the\ncolumn header - it does not trigger the filter function. The column has to be filtered by calling Column.sort()"
            }, {
                "name": "filterProperty",
                "documentation": "Specifies the binding property on which the column shall be filtered.\nSince the column template may have composite bindings, it's not possible to figure out on which binding\nproperty the filter shall be applied. Therefore the binding property for filtering must be specified.\nFor example, if the first name and last name are displayed in the same column, only one of the two can be defined as\nfilterProperty. A column menu entry for filtering can only be generated if the filterProperty is set. The\ndefault menu entry is a text input field."
            }, {
                "name": "filterValue",
                "documentation": "Specifies the value of the filter as string (will be converted into the proper data type). It is possible\nto provide a filterOperator as string, as shown here:\n\n&gt; 50\n&lt; 100\n&gt;= 150\n&lt;= 200\n= 250\n!= 300\n*something ends with\nsomething* starts with\n*something* contains\nsome..thing between\n50..100 between\n"
            }, {
                "name": "filterOperator",
                "documentation": "Filter operator to use when filtering this column."
            }, {
                "name": "defaultFilterOperator",
                "documentation": "If this property is set, the default filter operator of the column is overridden.\nBy default Contains is used for string and EQ for other types. A valid\nsap.ui.model.FilterOperator needs to be passed."
            }, {
                "name": "filterType",
                "documentation": "Type of Filter. This is used to transform the search term to the specified type,\nto make sure that the right columns are displayed. This should be the same as defined\nin binding for this column. As an alternative you can pass a function which does the conversion.\nThe function receives the entered filter value as parameter and returns the proper\nvalue for the filter expression. Another option is to pass the class name of the type,\ne.g.: sap.ui.model.type.Date or an expression similar to the binding syntax,\ne.g.: \"\\{type: 'sap.ui.model.type.Date', formatOptions: \\{UTC: true\\, constraints: \\{\\ \\\".\nHere the escaping is mandatory to avoid handling by the binding parser.\nBy default the filter type is sap.ui.model.type.String."
            }, {
                "name": "grouped",
                "documentation": "Indicates if the column is grouped."
            }, {
                "name": "visible",
                "documentation": "Invisible controls are not rendered."
            }, {
                "name": "name",
                "documentation": "The name of the column which is used in the column visibility menu item as text.\nIf not set as a fallback the column menu tries to get the text from the nested Label."
            }, {
                "name": "showFilterMenuEntry",
                "documentation": "Defines if the filter menu entry is displayed"
            }, {
                "name": "showSortMenuEntry",
                "documentation": "Defines if the sort menu entries are displayed"
            }, {
                "name": "headerSpan",
                "documentation": "If this property is set, a span is applied for the header. When moving columns, all columns\nwhich are part of the header will be moved. The headerSpan can be either an integer or an array of\nintegers (if you use the multi header feature of the table). If you only specify an integer, this span is\napplied for all header rows, with multiple integers you can specify a separate span for each header row."
            }, {
                "name": "autoResizable",
                "documentation": "Enables auto-resizing of the column on double clicking the resize bar. The width is determined on the widest\ncurrently displayed content. It does not consider rows which are currently not scrolled into view.\nCurrently only implemented to work with the following controls:\nsap.m.Text, sap.m.Label, sap.m.Link, sap.m.Input,\nsap.ui.commons.TextView, sap.ui.commons.Label, sap.ui.commons.Link and sap.ui.commons.TextField,\nsap.ui.commons.Checkbox, sap.m.Checkbox"
            }, {
                "name": "columnMenuOpen",
                "documentation": "Fires before the column menu is opened."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "The column allows you to define column specific properties that will be applied when rendering the table."
        },
        "ColumnMenu": {
            "attributes": [{
                "name": "enabled",
                "documentation": "When a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase) has no effect when the menu of the item is disabled."
            }, {
                "name": "ariaDescription",
                "documentation": "Accessible label / description of the menu for assistive technologies like screenreaders."
            }, {
                "name": "maxVisibleItems",
                "documentation": "The maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached."
            }, {
                "name": "pageSize",
                "documentation": "The keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the Home / End keys for jumping\nto the first / last item, the Page Up / Page Down keys can be used to jump an arbitrary number of items up or down. This number can be defined via the pageSize property.\nFor values smaller than 1, paging behaves in a similar way to when using the Home / End keys. If the value equals 1, the paging behavior is similar to that of the arrow keys."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Reference to accessible labels (ids of existing DOM elements or controls) for assistive technologies like screenreaders."
            }, {
                "name": "itemSelect",
                "documentation": "Fired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus.\nNote: There is also a select event available for each single menu item. This event and the event of the menu items are redundant."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.unified.Menu",
            "documentation": "The column menu provides all common actions that can be performed on a column."
        },
        "Row": {
            "attributes": [],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "The row."
        },
        "RowAction": {
            "attributes": [{
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The RowAction control allows to display multiple action items which can be selected by the user.\nIf more action items are available as the available space allows to display an overflow mechanism is provided.\nThis control must only be used in the context of the sap.ui.table.Table control to define row actions."
        },
        "RowActionItem": {
            "attributes": [{
                "name": "icon",
                "documentation": "The icon of the item."
            }, {
                "name": "visible",
                "documentation": "Whether the item should be visible on the screen."
            }, {
                "name": "text",
                "documentation": "The text of the item. It is used as tooltip and for accessibility purposes."
            }, {
                "name": "type",
                "documentation": "The type of the item.\nSetting the type ensures default values for the properties icon and text.\nIf an icon or text is set explicitly this setting is used."
            }, {
                "name": "press",
                "documentation": "The press is fired when the user triggers the corresponding action."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "An action items to be displayed in a RowAction control.\nThis element must only be used in the context of the sap.ui.table.Table control to define row actions."
        },
        "RowSettings": {
            "attributes": [{
                "name": "highlight",
                "documentation": "The highlight state of the rows.\nIf the highlight is set to sap.ui.core.MessageType.None (default), no highlights are visible."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "The RowSettings control allows you to configure a row.\nYou can only use this control in the context of the sap.ui.table.Table control to define row settings."
        },
        "Table": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the Table."
            }, {
                "name": "rowHeight",
                "documentation": "The height of the row content in pixel. The actual row height is also influenced by other factors, such as the border width.\nIf no value is set, a default height is applied based on the content density configuration."
            }, {
                "name": "columnHeaderHeight",
                "documentation": "Height of the column header of the Table in pixel."
            }, {
                "name": "columnHeaderVisible",
                "documentation": "Flag whether the column header is visible or not."
            }, {
                "name": "visibleRowCount",
                "documentation": "Number of visible rows of the table."
            }, {
                "name": "firstVisibleRow",
                "documentation": "First visible row."
            }, {
                "name": "selectionMode",
                "documentation": "Selection mode of the Table. This property controls whether single or multiple rows can be selected and\nhow the selection can be extended. It may also influence the visual appearance.\nWhen the selection mode is changed, the current selection is removed.\nNote: Since the group header visualization relies on the row selectors, the row selectors are always shown if the grouping\nfunctionality (depends on table type) is enabled, even if sap.ui.table.SelectionMode.None is set."
            }, {
                "name": "selectionBehavior",
                "documentation": "Selection behavior of the Table. This property defines whether the row selector is displayed and whether the row, the row selector or\nboth can be clicked to select a row.\nNote: Since the group header visualization relies on the row selectors, the row selectors are always shown if the grouping\nfunctionality (depends on table type) is enabled, even if sap.ui.table.SelectionBehavior.RowOnly is set."
            }, {
                "name": "selectedIndex",
                "documentation": "Zero-based index of selected item. Index value for no selection is -1.\nWhen multi-selection is enabled and multiple items are selected, the method returns\nthe lead selected item. Sets the zero-based index of the currently selected item. This method\nremoves any previous selections. When the given index is invalid, the call is ignored."
            }, {
                "name": "editable",
                "documentation": "Flag whether the controls of the Table are editable or not (currently this only controls the background color in certain themes!)"
            }, {
                "name": "navigationMode",
                "documentation": "This property has been deprecated and must not be used anymore, since Scrollbar is the only supported option."
            }, {
                "name": "threshold",
                "documentation": "The threshold defines how many additional (not yet visible records) shall be pre-fetched to enable smooth\nscrolling. The threshold is always added to the visibleRowCount. If the visibleRowCount is 10 and the\nthreshold is 100, there will be 110 records fetched with the initial load.\nIf the threshold is lower than the visibleRowCount, the visibleRowCount will be used as\nthe threshold. If the value is 0 then the thresholding is disabled."
            }, {
                "name": "enableColumnReordering",
                "documentation": "Flag to enable or disable column reordering"
            }, {
                "name": "enableGrouping",
                "documentation": "Enables or disables grouping. If grouping is enabled, the table is grouped by the column which is defined\nin the groupBy association. The following restrictions apply:\n Only client models are supported (e.g. sap.ui.model.json.JSONModel). Grouping does not work with OData models. The table can only be grouped by one column at a time. Grouping by another column will remove the current grouping. If grouping has been done, sorting and filtering is not possible. Any existing sorting and filtering rules do no longer apply. The UI is not updated accordingly (e.g. menu items, sort and filter icons). The column, by which the table is grouped, is not visible. It will become visible again only if the table is grouped by another column or grouping is disabled.\n"
            }, {
                "name": "showColumnVisibilityMenu",
                "documentation": "Flag to show or hide the column visibility menu. This menu will get displayed in each\ngenerated column header menu. It allows to show or hide columns"
            }, {
                "name": "showNoData",
                "documentation": "Flag whether to show the no data overlay or not once the table is empty. If set to false\nthe table will just show a grid of empty cells"
            }, {
                "name": "visibleRowCountMode",
                "documentation": "This defines how the table handles the visible rows in the table. The default behavior is,\nthat a fixed row count is defined. If you change it to auto the visibleRowCount property is\nchanged by the table automatically. It will then adjust its maximum row count to the space it is\nallowed to cover (limited by the surrounding container) and its minimum row count to the value of\nthe property minAutoRowCount (default value : 5) In manual mode the user can change\nthe visibleRowCount interactively."
            }, {
                "name": "minAutoRowCount",
                "documentation": "This property is used to set the minimum count of visible rows when the property visibleRowCountMode is set to Auto or Interactive.\nFor any other visibleRowCountMode, it is ignored."
            }, {
                "name": "fixedColumnCount",
                "documentation": "Number of columns that are fix on the left. When you use a horizontal scrollbar, only\nthe columns which are not fixed, will scroll. Fixed columns need a defined width for the feature to work.\nPlease note that the aggregated width of all fixed columns must not exceed the table width since there\nwill be no scrollbar for fixed columns."
            }, {
                "name": "fixedRowCount",
                "documentation": "Number of rows that are fix on the top. When you use a vertical scrollbar, only the rows which are not fixed, will scroll."
            }, {
                "name": "fixedBottomRowCount",
                "documentation": "Number of rows that are fix on the bottom. When you use a vertical scrollbar, only the rows which are not fixed, will scroll."
            }, {
                "name": "enableColumnFreeze",
                "documentation": "Flag whether to show or hide the column menu item to freeze or unfreeze a column."
            }, {
                "name": "enableCellFilter",
                "documentation": "Flag whether to enable or disable the context menu on cells to trigger a filtering with the cell value."
            }, {
                "name": "showOverlay",
                "documentation": "Setting this property to true will show an overlay on top of the Table content and users cannot click anymore on the Table content."
            }, {
                "name": "enableSelectAll",
                "documentation": "Specifies if a select all button should be displayed in the top left corner. This button is only displayed\nif the row selector is visible and the selection mode is set to any kind of multi selection."
            }, {
                "name": "enableCustomFilter",
                "documentation": "Set this parameter to true to implement your own filter behaviour. Instead of the filter input box a button\nwill be rendered for which' press event (customFilter) you can register an event handler."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "If set to true, the table changes its busy state, resulting in showing or hiding the busy indicator.\nThe table will switch to busy as soon as data is retrieved to be displayed in the currently visible rows. This happens,\nfor example, during scrolling, filtering, or sorting. As soon as the data has been retrieved, the table switches back to not busy.\nThe busy state of the table can still be set manually by calling sap.ui.core.Control."
            }, {
                "name": "rowActionCount",
                "documentation": "Number of row actions made visible which determines the width of the row action column.\nThe values 0, 1 and 2 are possible."
            }, {
                "name": "alternateRowColors",
                "documentation": "Enables alternating table row colors.\nAlternate row coloring is not available for the tree mode."
            }, {
                "name": "groupBy",
                "documentation": "The column by which the table is grouped. Grouping will only be performed if enableGrouping is set to true."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "rowSelectionChange",
                "documentation": "fired when the row selection of the table has been changed (the event parameters can be used to determine\nselection changes - to find out the selected rows you should better use the table selection API)"
            }, {
                "name": "columnSelect",
                "documentation": "fired when a column of the table has been selected"
            }, {
                "name": "columnResize",
                "documentation": "fired when a table column is resized."
            }, {
                "name": "columnMove",
                "documentation": "fired when a table column is moved."
            }, {
                "name": "sort",
                "documentation": "fired when the table is sorted."
            }, {
                "name": "filter",
                "documentation": "fired when the table is filtered."
            }, {
                "name": "group",
                "documentation": "fired when the table is grouped (experimental!)."
            }, {
                "name": "columnVisibility",
                "documentation": "fired when the visibility of a table column is changed."
            }, {
                "name": "cellClick",
                "documentation": "fired when the user clicks a cell of the table (experimental!)."
            }, {
                "name": "cellContextmenu",
                "documentation": "fired when the user clicks a cell of the table."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the user requests the context menu for a table cell."
            }, {
                "name": "columnFreeze",
                "documentation": "fired when a column of the table should be freezed"
            }, {
                "name": "customFilter",
                "documentation": "This event is triggered when the custom filter item of the column menu is pressed. The column on which the event was triggered is\npassed as parameter."
            }, {
                "name": "firstVisibleRowChanged",
                "documentation": "This event gets fired when the first visible row is changed. It should only be used by composite controls.\nThe event even is fired when setFirstVisibleRow is called programmatically."
            }, {
                "name": "busyStateChanged",
                "documentation": "This event gets fired when the busy state of the table changes. It should only be used by composite controls."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": " Provides a comprehensive set of features for displaying and dealing with vast amounts of data. The Table control supports desktop PCs and tablet devices. On tablets, special consideration should be given to the number of visible columns and rows due to the limited performance of some devices.\n\n In order to keep the document DOM as lean as possible, the Table control reuses its DOM elements of the rows. When the user scrolls, only the row contexts are changed but the rendered controls remain the same. This allows the Table control to handle huge amounts of data. Nevertheless, restrictions apply regarding the number of displayed columns. Keep the number as low as possible to improve performance. Due to the nature of tables, the used control for column templates also has a big influence on the performance.\n\n The Table control relies completely on data binding, and its supported feature set is tightly coupled to the data model and binding being used.\n"
        },
        "TreeTable": {
            "attributes": [{
                "name": "expandFirstLevel",
                "documentation": "Specifies whether the first level is expanded."
            }, {
                "name": "useGroupMode",
                "documentation": "If group mode is enabled nodes with subitems are rendered as if they were group headers.\nThis can be used to do the grouping for an OData service on the backend and visualize this in a table."
            }, {
                "name": "groupHeaderProperty",
                "documentation": "The property name of the rows data which will be displayed as a group header if the group mode is enabled"
            }, {
                "name": "collapseRecursive",
                "documentation": "Setting collapseRecursive to true means, that when collapsing a node all subsequent child nodes will also be collapsed.\nThis property is only supported with sap.ui.model.odata.v2.ODataModel.\nNote: collapseRecursive is currently not supported if your OData service exposes the hierarchy annotation hierarchy-descendant-count-for.\nIn this case the value of the collapseRecursive property is ignored.\nFor more information about the OData hierarchy annotations, please see the SAP Annotations for OData Version 2.0 specification."
            }, {
                "name": "rootLevel",
                "documentation": "The root level is the level of the topmost tree nodes, which will be used as an entry point for OData services.\nThis property is only supported when the TreeTable uses an underlying odata services with hierarchy annotations.\nThis property is only supported with sap.ui.model.odata.v2.ODataModel\nThe hierarchy annotations may also be provided locally as a parameter for the ODataTreeBinding."
            }, {
                "name": "toggleOpenState",
                "documentation": "Fired when a row has been expanded or collapsed by user interaction. Only available in hierarchical mode."
            }, {
                "name": "width",
                "documentation": "Width of the Table."
            }, {
                "name": "rowHeight",
                "documentation": "The height of the row content in pixel. The actual row height is also influenced by other factors, such as the border width.\nIf no value is set, a default height is applied based on the content density configuration."
            }, {
                "name": "columnHeaderHeight",
                "documentation": "Height of the column header of the Table in pixel."
            }, {
                "name": "columnHeaderVisible",
                "documentation": "Flag whether the column header is visible or not."
            }, {
                "name": "visibleRowCount",
                "documentation": "Number of visible rows of the table."
            }, {
                "name": "firstVisibleRow",
                "documentation": "First visible row."
            }, {
                "name": "selectionMode",
                "documentation": "Selection mode of the Table. This property controls whether single or multiple rows can be selected and\nhow the selection can be extended. It may also influence the visual appearance.\nWhen the selection mode is changed, the current selection is removed.\nNote: Since the group header visualization relies on the row selectors, the row selectors are always shown if the grouping\nfunctionality (depends on table type) is enabled, even if sap.ui.table.SelectionMode.None is set."
            }, {
                "name": "selectionBehavior",
                "documentation": "Selection behavior of the Table. This property defines whether the row selector is displayed and whether the row, the row selector or\nboth can be clicked to select a row.\nNote: Since the group header visualization relies on the row selectors, the row selectors are always shown if the grouping\nfunctionality (depends on table type) is enabled, even if sap.ui.table.SelectionBehavior.RowOnly is set."
            }, {
                "name": "selectedIndex",
                "documentation": "Zero-based index of selected item. Index value for no selection is -1.\nWhen multi-selection is enabled and multiple items are selected, the method returns\nthe lead selected item. Sets the zero-based index of the currently selected item. This method\nremoves any previous selections. When the given index is invalid, the call is ignored."
            }, {
                "name": "editable",
                "documentation": "Flag whether the controls of the Table are editable or not (currently this only controls the background color in certain themes!)"
            }, {
                "name": "navigationMode",
                "documentation": "This property has been deprecated and must not be used anymore, since Scrollbar is the only supported option."
            }, {
                "name": "threshold",
                "documentation": "The threshold defines how many additional (not yet visible records) shall be pre-fetched to enable smooth\nscrolling. The threshold is always added to the visibleRowCount. If the visibleRowCount is 10 and the\nthreshold is 100, there will be 110 records fetched with the initial load.\nIf the threshold is lower than the visibleRowCount, the visibleRowCount will be used as\nthe threshold. If the value is 0 then the thresholding is disabled."
            }, {
                "name": "enableColumnReordering",
                "documentation": "Flag to enable or disable column reordering"
            }, {
                "name": "enableGrouping",
                "documentation": "Enables or disables grouping. If grouping is enabled, the table is grouped by the column which is defined\nin the groupBy association. The following restrictions apply:\n Only client models are supported (e.g. sap.ui.model.json.JSONModel). Grouping does not work with OData models. The table can only be grouped by one column at a time. Grouping by another column will remove the current grouping. If grouping has been done, sorting and filtering is not possible. Any existing sorting and filtering rules do no longer apply. The UI is not updated accordingly (e.g. menu items, sort and filter icons). The column, by which the table is grouped, is not visible. It will become visible again only if the table is grouped by another column or grouping is disabled.\n"
            }, {
                "name": "showColumnVisibilityMenu",
                "documentation": "Flag to show or hide the column visibility menu. This menu will get displayed in each\ngenerated column header menu. It allows to show or hide columns"
            }, {
                "name": "showNoData",
                "documentation": "Flag whether to show the no data overlay or not once the table is empty. If set to false\nthe table will just show a grid of empty cells"
            }, {
                "name": "visibleRowCountMode",
                "documentation": "This defines how the table handles the visible rows in the table. The default behavior is,\nthat a fixed row count is defined. If you change it to auto the visibleRowCount property is\nchanged by the table automatically. It will then adjust its maximum row count to the space it is\nallowed to cover (limited by the surrounding container) and its minimum row count to the value of\nthe property minAutoRowCount (default value : 5) In manual mode the user can change\nthe visibleRowCount interactively."
            }, {
                "name": "minAutoRowCount",
                "documentation": "This property is used to set the minimum count of visible rows when the property visibleRowCountMode is set to Auto or Interactive.\nFor any other visibleRowCountMode, it is ignored."
            }, {
                "name": "fixedColumnCount",
                "documentation": "Number of columns that are fix on the left. When you use a horizontal scrollbar, only\nthe columns which are not fixed, will scroll. Fixed columns need a defined width for the feature to work.\nPlease note that the aggregated width of all fixed columns must not exceed the table width since there\nwill be no scrollbar for fixed columns."
            }, {
                "name": "fixedRowCount",
                "documentation": "Number of rows that are fix on the top. When you use a vertical scrollbar, only the rows which are not fixed, will scroll."
            }, {
                "name": "fixedBottomRowCount",
                "documentation": "Number of rows that are fix on the bottom. When you use a vertical scrollbar, only the rows which are not fixed, will scroll."
            }, {
                "name": "enableColumnFreeze",
                "documentation": "Flag whether to show or hide the column menu item to freeze or unfreeze a column."
            }, {
                "name": "enableCellFilter",
                "documentation": "Flag whether to enable or disable the context menu on cells to trigger a filtering with the cell value."
            }, {
                "name": "showOverlay",
                "documentation": "Setting this property to true will show an overlay on top of the Table content and users cannot click anymore on the Table content."
            }, {
                "name": "enableSelectAll",
                "documentation": "Specifies if a select all button should be displayed in the top left corner. This button is only displayed\nif the row selector is visible and the selection mode is set to any kind of multi selection."
            }, {
                "name": "enableCustomFilter",
                "documentation": "Set this parameter to true to implement your own filter behaviour. Instead of the filter input box a button\nwill be rendered for which' press event (customFilter) you can register an event handler."
            }, {
                "name": "enableBusyIndicator",
                "documentation": "If set to true, the table changes its busy state, resulting in showing or hiding the busy indicator.\nThe table will switch to busy as soon as data is retrieved to be displayed in the currently visible rows. This happens,\nfor example, during scrolling, filtering, or sorting. As soon as the data has been retrieved, the table switches back to not busy.\nThe busy state of the table can still be set manually by calling sap.ui.core.Control."
            }, {
                "name": "rowActionCount",
                "documentation": "Number of row actions made visible which determines the width of the row action column.\nThe values 0, 1 and 2 are possible."
            }, {
                "name": "alternateRowColors",
                "documentation": "Enables alternating table row colors.\nAlternate row coloring is not available for the tree mode."
            }, {
                "name": "groupBy",
                "documentation": "The column by which the table is grouped. Grouping will only be performed if enableGrouping is set to true."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "rowSelectionChange",
                "documentation": "fired when the row selection of the table has been changed (the event parameters can be used to determine\nselection changes - to find out the selected rows you should better use the table selection API)"
            }, {
                "name": "columnSelect",
                "documentation": "fired when a column of the table has been selected"
            }, {
                "name": "columnResize",
                "documentation": "fired when a table column is resized."
            }, {
                "name": "columnMove",
                "documentation": "fired when a table column is moved."
            }, {
                "name": "sort",
                "documentation": "fired when the table is sorted."
            }, {
                "name": "filter",
                "documentation": "fired when the table is filtered."
            }, {
                "name": "group",
                "documentation": "fired when the table is grouped (experimental!)."
            }, {
                "name": "columnVisibility",
                "documentation": "fired when the visibility of a table column is changed."
            }, {
                "name": "cellClick",
                "documentation": "fired when the user clicks a cell of the table (experimental!)."
            }, {
                "name": "cellContextmenu",
                "documentation": "fired when the user clicks a cell of the table."
            }, {
                "name": "beforeOpenContextMenu",
                "documentation": "Fired when the user requests the context menu for a table cell."
            }, {
                "name": "columnFreeze",
                "documentation": "fired when a column of the table should be freezed"
            }, {
                "name": "customFilter",
                "documentation": "This event is triggered when the custom filter item of the column menu is pressed. The column on which the event was triggered is\npassed as parameter."
            }, {
                "name": "firstVisibleRowChanged",
                "documentation": "This event gets fired when the first visible row is changed. It should only be used by composite controls.\nThe event even is fired when setFirstVisibleRow is called programmatically."
            }, {
                "name": "busyStateChanged",
                "documentation": "This event gets fired when the busy state of the table changes. It should only be used by composite controls."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.table.Table",
            "documentation": "The TreeTable control provides a comprehensive set of features to display hierarchical data."
        }
    },
    "sap.ui.unified": {
        "Calendar": {
            "attributes": [{
                "name": "intervalSelection",
                "documentation": "If set, interval selection is allowed"
            }, {
                "name": "singleSelection",
                "documentation": "If set, only a single date or interval, if intervalSelection is enabled, can be selected"
            }, {
                "name": "months",
                "documentation": "Determines the number of months displayed. As of version 1.50, the duplicated dates are not displayed if there are\nmultiple months. Note: On phones, only one month is displayed."
            }, {
                "name": "firstDayOfWeek",
                "documentation": "If set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used."
            }, {
                "name": "nonWorkingDays",
                "documentation": "If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days. Note: Keep in mind that this property sets only weekly-recurring days\nas non-working. If you need specific dates or dates ranges, such as national\nholidays, use the specialDates aggregation to set them.\nBoth the non-working days (from property) and dates (from aggregation) are\nvisualized the same."
            }, {
                "name": "primaryCalendarType",
                "documentation": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
            }, {
                "name": "secondaryCalendarType",
                "documentation": "If set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
            }, {
                "name": "width",
                "documentation": "Width of Calendar Note: There is a theme depending minimum width, so the calendar can not be set smaller."
            }, {
                "name": "minDate",
                "documentation": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object. Note: if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected. Note: If the minDate is set to be after the maxDate,\nthe maxDate is set to the end of the month of the minDate."
            }, {
                "name": "maxDate",
                "documentation": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object. Note: if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected. Note: If the maxDate is set to be before the minDate,\nthe minDate is set to the begin of the month of the maxDate."
            }, {
                "name": "showWeekNumbers",
                "documentation": "Determines whether the week numbers in the months are displayed. Note: For Islamic calendars, the week numbers are not displayed\nregardless of what is set to this property."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Date selection changed"
            }, {
                "name": "cancel",
                "documentation": "Date selection was cancelled"
            }, {
                "name": "startDateChange",
                "documentation": "startDate was changed while navigation in Calendar Use getStartDate function to determine the current start date"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Basic Calendar.\nThis calendar is used for DatePickers"
        },
        "CalendarAppointment": {
            "attributes": [{
                "name": "title",
                "documentation": "Title of the appointment."
            }, {
                "name": "text",
                "documentation": "Text of the appointment."
            }, {
                "name": "icon",
                "documentation": "Icon of the Appointment. (e.g. picture of the person) URI of an image or an icon registered in sap.ui.core.IconPool."
            }, {
                "name": "tentative",
                "documentation": "Indicates if the icon is tentative."
            }, {
                "name": "selected",
                "documentation": "Indicates if the icon is selected."
            }, {
                "name": "key",
                "documentation": "Can be used as identifier of the appointment"
            }, {
                "name": "color",
                "documentation": "Overrides the color derived from the type property.\nThis property will work only with full hex color with pound symbol, e.g.: ."
            }, {
                "name": "type",
                "documentation": "Type of the date range."
            }, {
                "name": "startDate",
                "documentation": "Start date for a date range. This must be a JavaScript date object."
            }, {
                "name": "endDate",
                "documentation": "End date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object."
            }],
            "extendsElement": "sap.ui.unified.DateTypeRange",
            "documentation": "An appointment for use in a PlanningCalendar or similar. The rendering must be done in the Row collecting the appointments.\n(Because there are different visualizations possible.) Applications could inherit from this element to add own fields."
        },
        "CalendarDateInterval": {
            "attributes": [{
                "name": "startDate",
                "documentation": "Start date of the Interval"
            }, {
                "name": "days",
                "documentation": "number of days displayed\non phones the maximum rendered number of days is 8."
            }, {
                "name": "showDayNamesLine",
                "documentation": "If set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days."
            }, {
                "name": "pickerPopup",
                "documentation": "If set, the month- and yearPicker opens on a popup"
            }, {
                "name": "intervalSelection",
                "documentation": "If set, interval selection is allowed"
            }, {
                "name": "singleSelection",
                "documentation": "If set, only a single date or interval, if intervalSelection is enabled, can be selected"
            }, {
                "name": "months",
                "documentation": "Determines the number of months displayed. As of version 1.50, the duplicated dates are not displayed if there are\nmultiple months. Note: On phones, only one month is displayed."
            }, {
                "name": "firstDayOfWeek",
                "documentation": "If set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used."
            }, {
                "name": "nonWorkingDays",
                "documentation": "If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days. Note: Keep in mind that this property sets only weekly-recurring days\nas non-working. If you need specific dates or dates ranges, such as national\nholidays, use the specialDates aggregation to set them.\nBoth the non-working days (from property) and dates (from aggregation) are\nvisualized the same."
            }, {
                "name": "primaryCalendarType",
                "documentation": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
            }, {
                "name": "secondaryCalendarType",
                "documentation": "If set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
            }, {
                "name": "width",
                "documentation": "Width of Calendar Note: There is a theme depending minimum width, so the calendar can not be set smaller."
            }, {
                "name": "minDate",
                "documentation": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object. Note: if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected. Note: If the minDate is set to be after the maxDate,\nthe maxDate is set to the end of the month of the minDate."
            }, {
                "name": "maxDate",
                "documentation": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object. Note: if the date is inside of a month the complete month is displayed,\nbut dates outside the valid range can not be selected. Note: If the maxDate is set to be before the minDate,\nthe minDate is set to the begin of the month of the maxDate."
            }, {
                "name": "showWeekNumbers",
                "documentation": "Determines whether the week numbers in the months are displayed. Note: For Islamic calendars, the week numbers are not displayed\nregardless of what is set to this property."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Date selection changed"
            }, {
                "name": "cancel",
                "documentation": "Date selection was cancelled"
            }, {
                "name": "startDateChange",
                "documentation": "startDate was changed while navigation in Calendar Use getStartDate function to determine the current start date"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.unified.Calendar",
            "documentation": "Calendar with dates displayed in one line."
        },
        "CalendarLegend": {
            "attributes": [{
                "name": "standardItems",
                "documentation": "Determines the standard items related to the calendar days, such as, today, selected, working and non-working.\nValues must be one of sap.ui.unified.StandardCalendarLegendItem.\nNote: for versions 1.50 and 1.52, this property was defined in the the subclass sap.m.PlanningCalendarLegend"
            }, {
                "name": "columnWidth",
                "documentation": "Defines the width of the created columns in which the items are arranged."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A legend for the Calendar Control. Displays special dates colors with their corresponding description. The aggregation specialDates can be set herefor."
        },
        "CalendarLegendItem": {
            "attributes": [{
                "name": "text",
                "documentation": "Text to be displayed for the item."
            }, {
                "name": "type",
                "documentation": "Type of the item.\nIf not set the type is automatically determined from the order of the items in the CalendarLegend."
            }, {
                "name": "color",
                "documentation": "Overrides the color derived from the type property."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Item to be displayed in a CalendarLegend."
        },
        "CalendarMonthInterval": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the CalendarMonthInterval. The width of the single months depends on this width."
            }, {
                "name": "startDate",
                "documentation": "Start date of the Interval as JavaScript Date object.\nThe month of this Date will be the first month in the displayed row."
            }, {
                "name": "intervalSelection",
                "documentation": "If set, interval selection is allowed"
            }, {
                "name": "singleSelection",
                "documentation": "If set, only a single date or interval, if intervalSelection is enabled, can be selected Note: Selection of multiple intervals is not supported in the current version."
            }, {
                "name": "months",
                "documentation": "Number of months displayed Note: On phones, the maximum number of months displayed in the row is always 6."
            }, {
                "name": "pickerPopup",
                "documentation": "If set, the yearPicker opens on a popup"
            }, {
                "name": "minDate",
                "documentation": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object. Note: If the minDate is set to be after the maxDate,\nthe maxDate is set to the end of the month of the minDate."
            }, {
                "name": "maxDate",
                "documentation": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object. Note: If the maxDate is set to be before the minDate,\nthe minDate is set to the begin of the month of the maxDate."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Month selection changed"
            }, {
                "name": "cancel",
                "documentation": "Month selection was cancelled"
            }, {
                "name": "startDateChange",
                "documentation": "startDate was changed while navigation in CalendarMonthInterval"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Calendar with granularity of months displayed in one line. Note: JavaScript Date objects are used to set and return the months, mark them as selected or as a special type.\nBut the date part of the Date object is not used. If a Date object is returned the date will be set to the 1st of the corresponding month."
        },
        "CalendarRow": {
            "attributes": [{
                "name": "startDate",
                "documentation": "Start date, as JavaScript Date object, of the row. As default, the current date is used."
            }, {
                "name": "intervals",
                "documentation": "Number of displayed intervals. The size of the intervals is defined with intervalType"
            }, {
                "name": "intervalType",
                "documentation": "Type of the intervals of the row. The default is one hour."
            }, {
                "name": "showSubIntervals",
                "documentation": "If set, subintervals are shown. If the interval type is Hour, quarter hours are shown. If the interval type is Day, hours are shown. If the interval type is Month, days are shown."
            }, {
                "name": "showIntervalHeaders",
                "documentation": "If set, interval headers are shown like specified in showEmptyIntervalHeaders. If not set, no interval headers are shown even if intervalHeaders are assigned."
            }, {
                "name": "showEmptyIntervalHeaders",
                "documentation": "If set, interval headers are shown even if no intervalHeaders are assigned to the visible time frame. If not set, no interval headers are shown if no intervalHeaders are assigned. Note: This property is only used if showIntervalHeaders is set to true."
            }, {
                "name": "nonWorkingDays",
                "documentation": "If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (Other values will just be ignored.) If not set, the weekend defined in the locale settings is displayed as non-working days. Note: The non working days are only visualized if intervalType is set to day."
            }, {
                "name": "nonWorkingHours",
                "documentation": "If set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (Other values will just be ignored.) Note: The non working hours are only visualized if intervalType is set to hour."
            }, {
                "name": "width",
                "documentation": "Width of the row"
            }, {
                "name": "height",
                "documentation": "Height of the row"
            }, {
                "name": "checkResize",
                "documentation": "If set, the CalendarRow checks for resize by itself. If a lot of CalendarRow controls are used in one container control (like PlanningCalendar).\nthe resize checks should be done only by this container control. Then the container control should\ncall handleResize of the CalendarRow if a resize happens."
            }, {
                "name": "updateCurrentTime",
                "documentation": "If set the CalendarRow triggers a periodic update to visualize the current time. If a lot of CalendarRow controls are used in one container control (like PlanningCalendar)\nthe periodic update should be triggered only by this container control. Then the container control should\ncall updateCurrentTimeVisualization of the CalendarRow to update the visualization."
            }, {
                "name": "groupAppointmentsMode",
                "documentation": "Defines the mode in which the overlapping appointments are displayed. Note: This property takes effect, only if the intervalType of the current calendar view\nis set to sap.ui.unified.CalendarIntervalType.Month. On phone devices this property is ignored,\nand the default value is applied."
            }, {
                "name": "appointmentsReducedHeight",
                "documentation": "If set the appointments without text (only title) are rendered with a smaller height. Note: On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching."
            }, {
                "name": "appointmentsVisualization",
                "documentation": "Defines the visualization of the CalendarAppoinment Note: The real visualization depends on the used theme."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby). Note These labels are also assigned to the appointments."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the Appointments. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Fired if an appointment was selected"
            }, {
                "name": "startDateChange",
                "documentation": "startDate was changed while navigating in CalendarRow"
            }, {
                "name": "leaveRow",
                "documentation": "The CalendarRow should be left while navigating. (Arrow up or arrow down.)\nThe caller should determine the next control to be focused"
            }, {
                "name": "intervalSelect",
                "documentation": "Fired if an interval was selected"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A calendar row with a header and appointments. The Appointments will be placed in the defined interval."
        },
        "CalendarTimeInterval": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the CalendarTimeInterval. The width of the single months depends on this width."
            }, {
                "name": "startDate",
                "documentation": "Start date of the Interval as JavaScript Date object.\nThe time interval corresponding to this Date and items and intervalMinutes\nwill be the first time in the displayed row."
            }, {
                "name": "intervalSelection",
                "documentation": "If set, interval selection is allowed"
            }, {
                "name": "singleSelection",
                "documentation": "If set, only a single date or interval, if intervalSelection is enabled, can be selected Note: Selection of multiple intervals is not supported in the current version."
            }, {
                "name": "items",
                "documentation": "Number of time items displayed. Default is 12. Note: On phones, the maximum number of items displayed in the row is always 6."
            }, {
                "name": "intervalMinutes",
                "documentation": "Size of on time interval in minutes, default is 60 minutes. Note: the start of the interval calculation is always on the corresponding date at 00:00. An interval longer than 720 minutes is not allowed. Please use the CalendarDateInterval instead. A day must be divisible by this interval size. One interval must not include more than one day."
            }, {
                "name": "pickerPopup",
                "documentation": "If set, the day-, month- and yearPicker opens on a popup"
            }, {
                "name": "minDate",
                "documentation": "Minimum date that can be shown and selected in the Calendar. This must be a JavaScript date object. Note: If the minDate is set to be after the maxDate,\nthe maxDate is set to the end of the month of the minDate."
            }, {
                "name": "maxDate",
                "documentation": "Maximum date that can be shown and selected in the Calendar. This must be a JavaScript date object. Note: If the maxDate is set to be before the minDate,\nthe minDate is set to the begin of the month of the maxDate."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Time selection changed"
            }, {
                "name": "cancel",
                "documentation": "Time selection was cancelled"
            }, {
                "name": "startDateChange",
                "documentation": "startDate was changed while navigation in CalendarTimeInterval"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Calendar with granularity of time items displayed in one line."
        },
        "ColorPicker": {
            "attributes": [{
                "name": "colorString",
                "documentation": "Determines the input parameter that can be a string of type HEX, RGB, HSV, or a CSS color name:\n\nHEX - \nRGB - rgb(255,255,255)\nHSV - hsv(360,100,100)\nCSS - red\n\nNote: The output parameter is an RGB string of the current color."
            }, {
                "name": "mode",
                "documentation": "Determines the color mode of the ColorPicker."
            }, {
                "name": "change",
                "documentation": "Fired when the value is changed by user action. Note: When the user action is mouse dragging, the\nchange event fires on the mouseup event."
            }, {
                "name": "liveChange",
                "documentation": "Fired when the value is changed during the mouse move. Note: When the user action is mouse move, the liveChange\nevent is fired during the mousedown event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Enables the user to select a color.\nThe color can be defined using HEX, RGB, or HSV values or a CSS color name. Note: Keep in mind that this control needs either sap.m\nor sap.ui.commons library to be loaded in order to work as\nit depends on controls available in one or the other library."
        },
        "ContentSwitcher": {
            "attributes": [{
                "name": "animation",
                "documentation": "Set the used animation when changing content. This just sets a CSS-class named \"sapUiUnifiedACSwitcherAnimation\" + this value on the root element of the control. The animation has to be implemented in CSS. This also enables applications to implement their own animations via CSS by reacting to the parent class.\nSee the types sap.ui.unified.ContentSwitcherAnimation for default implementations."
            }, {
                "name": "activeContent",
                "documentation": "The number of the currently active content (1 or 2)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Switches between two control areas and animates it via CSS transitions"
        },
        "Currency": {
            "attributes": [{
                "name": "value",
                "documentation": "Determines the currency value."
            }, {
                "name": "stringValue",
                "documentation": "Determines the currency value as a string. String value is useful if you want to store really big values. If there are more than 21 digits\nbefore the decimal point or if the number starts with “0.” followed by more than five zeros, it is\nrepresented in exponential form. In these cases use the stringValue property to keep the number in\ndecimal format. Note: If set, it will take precedence over the value property."
            }, {
                "name": "currency",
                "documentation": "Determines the displayed currency code (ISO 4217). Note: If a * character is set instead of currency code,\nonly the character itself will be rendered, ignoring the value property."
            }, {
                "name": "maxPrecision",
                "documentation": "Defines the space that is available for the precision of the various currencies."
            }, {
                "name": "useSymbol",
                "documentation": "Displays the currency symbol instead of the ISO currency code."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A text view which displays currency values and aligns them at the decimal point. Overview The currency control consists of an amount, which is formatted automatically according\nto the user’s locale (using delimiter symbols for the decimal point and thousand separators)\nand to the currency set for this specific number (number of decimal places). The currency is expressed as a three-letter code. Usage When to use\n\nTo display amounts with different currencies in a vertical layout, such as in a table,\nlist, or form, and it is important that the user is able to compare the amounts.\n When not to use\n\nTo display amounts with the same currency in a table. Use the sap.m.ObjectNumber instead.\nto display a number with a unit of measurement that is not a currency. Use the sap.m.ObjectNumber instead.\nTo display an amount in a structure other than a list, table, or form.\n Responsive behavior The control supports amounts smaller than 100 trillion, which still fit on a phone screen in portrait mode.\nFor larger amounts, the unit of measurement wraps to the next line, which makes it difficult to compare the amounts."
        },
        "DateRange": {
            "attributes": [{
                "name": "startDate",
                "documentation": "Start date for a date range. This must be a JavaScript date object."
            }, {
                "name": "endDate",
                "documentation": "End date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Date range for use in DatePicker"
        },
        "DateTypeRange": {
            "attributes": [{
                "name": "type",
                "documentation": "Type of the date range."
            }, {
                "name": "startDate",
                "documentation": "Start date for a date range. This must be a JavaScript date object."
            }, {
                "name": "endDate",
                "documentation": "End date for a date range. If empty only a single date is presented by this DateRange element. This must be a JavaScript date object."
            }],
            "extendsElement": "sap.ui.unified.DateRange",
            "documentation": "Date range with calendar day type information. Used to visualize special days in the Calendar."
        },
        "FileUploader": {
            "attributes": [{
                "name": "value",
                "documentation": "Value of the path for file upload."
            }, {
                "name": "enabled",
                "documentation": "Disabled controls have different colors, depending on customer settings."
            }, {
                "name": "uploadUrl",
                "documentation": "Used when URL address is on a remote server."
            }, {
                "name": "name",
                "documentation": "Unique control name for identification on the server side after sending data to the server."
            }, {
                "name": "width",
                "documentation": "Specifies the displayed control width."
            }, {
                "name": "uploadOnChange",
                "documentation": "If set to \"true\", the upload immediately starts after file selection. With the default setting, the upload needs to be explicitly triggered."
            }, {
                "name": "additionalData",
                "documentation": "Additional data that is sent to the back end service. Data will be transmitted as value of a hidden input where the name is derived from the name property with suffix -data."
            }, {
                "name": "sameFilenameAllowed",
                "documentation": "If the FileUploader is configured to upload the file directly after the file is selected it is not allowed to upload a file with the same name again. If a user should be allowed to upload a file with the same name again this parameter has to be \"true\". A typical use case would be if the files have different paths."
            }, {
                "name": "buttonText",
                "documentation": "The Button text can be overwritten using this property."
            }, {
                "name": "fileType",
                "documentation": "The chosen files will be checked against an array of file types. If at least one file does not fit the file type restriction the upload is prevented.\nExample: [\"jpg\", \"png\", \"bmp\"]."
            }, {
                "name": "multiple",
                "documentation": "Allows multiple files to be chosen and uploaded from the same folder. This property is not supported by Internet Explorer 9."
            }, {
                "name": "maximumFileSize",
                "documentation": "A file size limit in megabytes which prevents the upload if at least one file exceeds it. This property is not supported by Internet Explorer 9."
            }, {
                "name": "mimeType",
                "documentation": "The chosen files will be checked against an array of mime types. If at least one file does not fit the mime type restriction the upload is prevented. This property is not supported by Internet Explorer 9.\nExample: mimeType [\"image/png\", \"image/jpeg\"]."
            }, {
                "name": "sendXHR",
                "documentation": "If set to \"true\", the request will be sent as XHR request instead of a form submit. This property is not supported by Internet Explorer 9."
            }, {
                "name": "placeholder",
                "documentation": "Placeholder for the text field."
            }, {
                "name": "style",
                "documentation": "Style of the button. \"Transparent, \"Accept\", \"Reject\", or \"Emphasized\" is allowed."
            }, {
                "name": "buttonOnly",
                "documentation": "If set to \"true\", the FileUploader will be rendered as Button only, without showing the InputField."
            }, {
                "name": "useMultipart",
                "documentation": "If set to \"false\", the request will be sent as file only request instead of a multipart/form-data request. Only one file could be uploaded using this type of request. Required for sending such a request is to set the property \"sendXHR\" to \"true\". This property is not supported by Internet Explorer 9."
            }, {
                "name": "maximumFilenameLength",
                "documentation": "The maximum length of a filename which the FileUploader will accept. If the maximum filename length is exceeded, the corresponding Event 'filenameLengthExceed' is fired."
            }, {
                "name": "valueState",
                "documentation": "Visualizes warnings or errors related to the text field. Possible values: Warning, Error, Success, None."
            }, {
                "name": "valueStateText",
                "documentation": "Custom text for the value state message pop-up. Note: If not specified, a default text, based on the value state type, will be used instead."
            }, {
                "name": "icon",
                "documentation": "Icon to be displayed as graphical element within the button.\nThis can be a URI to an image or an icon font URI."
            }, {
                "name": "iconHovered",
                "documentation": "Icon to be displayed as graphical element within the button when it is hovered (only if also a base icon was specified). If not specified the base icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconSelected",
                "documentation": "Icon to be displayed as graphical element within the button when it is selected (only if also a base icon was specified). If not specified the base or hovered icon is used.\nIf an icon font icon is used, this property is ignored."
            }, {
                "name": "iconFirst",
                "documentation": "If set to true (default), the display sequence is 1. icon 2. control text."
            }, {
                "name": "iconOnly",
                "documentation": "If set to true, the button is displayed without any text."
            }, {
                "name": "change",
                "documentation": "Event is fired when the value of the file path has been changed."
            }, {
                "name": "uploadComplete",
                "documentation": "Event is fired as soon as the upload request is completed (either successful or unsuccessful). To see if the upload request was successful, check the 'state' parameter for a value 2xx.\nThe uploads actual progress can be retrieved via the 'uploadProgress' Event.\nHowever this covers only the client side of the Upload process and does not give any success status from the server."
            }, {
                "name": "typeMissmatch",
                "documentation": "Event is fired when the type of a file does not match the mimeType or fileType property."
            }, {
                "name": "fileSizeExceed",
                "documentation": "Event is fired when the size of a file is above the maximumFileSize property.\nThis event is not supported by Internet Explorer 9 (same restriction as for the property maximumFileSize)."
            }, {
                "name": "fileAllowed",
                "documentation": "Event is fired when the file is allowed for upload on client side."
            }, {
                "name": "uploadProgress",
                "documentation": "Event is fired after the upload has started and before the upload is completed and contains progress information related to the running upload.\nDepending on file size, band width and used browser the event is fired once or multiple times.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9."
            }, {
                "name": "uploadAborted",
                "documentation": "Event is fired after the current upload has been aborted.\nThis is event is only supported with property sendXHR set to true, i.e. the event is not supported in Internet Explorer 9."
            }, {
                "name": "filenameLengthExceed",
                "documentation": "Event is fired, if the filename of a chosen file is longer than the value specified with the maximumFilenameLength property."
            }, {
                "name": "uploadStart",
                "documentation": "Event is fired before an upload is started."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The framework generates an input field and a button with text \"Browse ...\". The API supports features such as on change uploads (the upload starts immediately after a file has been selected), file uploads with explicit calls, adjustable control sizes, text display after uploads, or tooltips containing complete file paths."
        },
        "FileUploaderParameter": {
            "attributes": [{
                "name": "name",
                "documentation": "The name of the hidden inputfield."
            }, {
                "name": "value",
                "documentation": "The value of the hidden inputfield."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Represents a parameter for the FileUploader which is rendered as a hidden inputfield."
        },
        "FileUploaderXHRSettings": {
            "attributes": [{
                "name": "withCredentials",
                "documentation": "Determines the value of the XMLHttpRequest.withCredentials property"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Properties for the XMLHttpRequest object used for file uploads."
        },
        "Menu": {
            "attributes": [{
                "name": "enabled",
                "documentation": "When a menu is disabled none of its items can be selected by the user.\nThe enabled property of an item (@link sap.ui.unified.MenuItemBase) has no effect when the menu of the item is disabled."
            }, {
                "name": "ariaDescription",
                "documentation": "Accessible label / description of the menu for assistive technologies like screenreaders."
            }, {
                "name": "maxVisibleItems",
                "documentation": "The maximum number of items which are displayed before an overflow mechanism takes effect.\nA value smaller than 1 means an infinite number of visible items.\nThe overall height of the menu is limited by the height of the screen. If the maximum possible height is reached, an\noverflow takes effect, even if the maximum number of visible items is not yet reached."
            }, {
                "name": "pageSize",
                "documentation": "The keyboard can be used to navigate through the items of a menu. Beside the arrow keys for single steps and the Home / End keys for jumping\nto the first / last item, the Page Up / Page Down keys can be used to jump an arbitrary number of items up or down. This number can be defined via the pageSize property.\nFor values smaller than 1, paging behaves in a similar way to when using the Home / End keys. If the value equals 1, the paging behavior is similar to that of the arrow keys."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Reference to accessible labels (ids of existing DOM elements or controls) for assistive technologies like screenreaders."
            }, {
                "name": "itemSelect",
                "documentation": "Fired on the root menu of a menu hierarchy whenever a user selects an item within the menu or within one of its direct or indirect submenus.\nNote: There is also a select event available for each single menu item. This event and the event of the menu items are redundant."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A menu is an interactive element which provides a choice of different actions to the user. These actions (items) can also be organized in submenus.\nLike other dialog-like controls, the menu is not rendered within the control hierarchy. Instead it can be opened at a specified position via a function call."
        },
        "MenuItem": {
            "attributes": [{
                "name": "text",
                "documentation": "Defines the text which should be displayed on the item."
            }, {
                "name": "icon",
                "documentation": "Defines the icon of the sap.ui.core.IconPool sap.ui.core.IconPool or an image which should be displayed on the item."
            }, {
                "name": "enabled",
                "documentation": "When an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ( sap.ui.unified.Menu Menu)."
            }, {
                "name": "visible",
                "documentation": "Invisible items do not appear in the menu."
            }, {
                "name": "startsSection",
                "documentation": "Defines whether a visual separator should be rendered before the item.\nNote: If an item is invisible also the separator of this item is not shown."
            }, {
                "name": "select",
                "documentation": "Fired when the item is selected by the user.\nNote: The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu."
            }],
            "extendsElement": "sap.ui.unified.MenuItemBase",
            "documentation": "Standard item to be used inside a menu. A menu item represents an action which can be selected by the user in the menu or\nit can provide a submenu to organize the actions hierarchically."
        },
        "MenuItemBase": {
            "attributes": [{
                "name": "enabled",
                "documentation": "When an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ( sap.ui.unified.Menu Menu)."
            }, {
                "name": "visible",
                "documentation": "Invisible items do not appear in the menu."
            }, {
                "name": "startsSection",
                "documentation": "Defines whether a visual separator should be rendered before the item.\nNote: If an item is invisible also the separator of this item is not shown."
            }, {
                "name": "select",
                "documentation": "Fired when the item is selected by the user.\nNote: The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Abstract base class for menu item which provides common properties and events for all concrete item implementations."
        },
        "MenuTextFieldItem": {
            "attributes": [{
                "name": "label",
                "documentation": "Defines the label of the text field of the item."
            }, {
                "name": "icon",
                "documentation": "Defines the icon of the sap.ui.core.IconPool sap.ui.core.IconPool or an image which should be displayed on the item."
            }, {
                "name": "value",
                "documentation": "Defines the value of the text field of the item."
            }, {
                "name": "valueState",
                "documentation": "Defines the value state of the text field of the item. This allows you to visualize e.g. warnings or errors."
            }, {
                "name": "enabled",
                "documentation": "When an item is disabled the item can not be selected by the user.\nThe enabled property of the item has no effect when the menu of the item is disabled ( sap.ui.unified.Menu Menu)."
            }, {
                "name": "visible",
                "documentation": "Invisible items do not appear in the menu."
            }, {
                "name": "startsSection",
                "documentation": "Defines whether a visual separator should be rendered before the item.\nNote: If an item is invisible also the separator of this item is not shown."
            }, {
                "name": "select",
                "documentation": "Fired when the item is selected by the user.\nNote: The event is also available for items which have a submenu.\nIn general, applications must not handle event in this case because the user selection opens the sub menu."
            }],
            "extendsElement": "sap.ui.unified.MenuItemBase",
            "documentation": "Special menu item which contains a label and a text field. This menu item is e.g. helpful for filter implementations.\nThe aggregation submenu (inherited from parent class) is not supported for this type of menu item."
        },
        "Shell": {
            "attributes": [{
                "name": "icon",
                "documentation": "The application icon. If a custom header is set this property has no effect."
            }, {
                "name": "showCurtain",
                "documentation": "Shows / Hides the curtain."
            }, {
                "name": "showCurtainPane",
                "documentation": "Shows / Hides the side pane on the curtain."
            }, {
                "name": "searchVisible",
                "documentation": "If set to false, the search area (aggregation 'search') is hidden. If a custom header is set this property has no effect."
            }, {
                "name": "showPane",
                "documentation": "Shows / Hides the side pane."
            }, {
                "name": "headerHiding",
                "documentation": "Whether the header can be hidden (manually or automatically). This feature is only available when touch events are supported."
            }, {
                "name": "headerVisible",
                "documentation": "If set to false, no header (and no items, search, ...) is shown."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.unified.ShellLayout",
            "documentation": "The shell control is meant as root control (full-screen) of an application.\nIt was build as root control of the Fiori Launchpad application and provides the basic capabilities\nfor this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and\ndo not use it for other scenarios than the root control usecase."
        },
        "ShellHeadItem": {
            "attributes": [{
                "name": "startsSection",
                "documentation": "If set to true, a divider is displayed before the item."
            }, {
                "name": "showSeparator",
                "documentation": "If set to true, a separator is displayed after the item."
            }, {
                "name": "selected",
                "documentation": "Defines the toggle state in case the item represents a toggle button (see also property toggleEnabled)."
            }, {
                "name": "toggleEnabled",
                "documentation": "If set to true, the item represents a toggle button. The selected property can the be used to\ndefine the toggle state. Otherwise the item is displayed as action button. In this case the selected property\nis ignored."
            }, {
                "name": "showMarker",
                "documentation": "If set to true, a theme dependent marker is shown on the item."
            }, {
                "name": "icon",
                "documentation": "The icon of the item, either defined in the sap.ui.core.IconPool or a URI to a custom image. An icon must be set."
            }, {
                "name": "visible",
                "documentation": "Invisible items are not shown on the UI."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user presses the item."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Header Action item of the Shell."
        },
        "ShellHeadUserItem": {
            "attributes": [{
                "name": "username",
                "documentation": "The name of the user."
            }, {
                "name": "showPopupIndicator",
                "documentation": "The user item is intended to be used for user settings. Normally these settings are done via a Menu or Dialog.\nIf this property is set to true an indicator for such a popup mechanismn is shown in the item."
            }, {
                "name": "image",
                "documentation": "An image of the user, normally a URI to an image but also an icon from the sap.ui.core.IconPool is possible."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Event is fired when the user presses the button."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "User Header Action Item of the Shell."
        },
        "ShellLayout": {
            "attributes": [{
                "name": "showPane",
                "documentation": "Shows / Hides the side pane."
            }, {
                "name": "headerHiding",
                "documentation": "Whether the header can be hidden (manually or automatically). This feature is only available when touch events are supported."
            }, {
                "name": "headerVisible",
                "documentation": "If set to false, no header (and no items, search, ...) is shown."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The shell layout is the base for the shell control which is meant as root control (full-screen) of an application.\nIt was build as root control of the Fiori Launchpad application and provides the basic capabilities\nfor this purpose. Do not use this control within applications which run inside the Fiori Lauchpad and\ndo not use it for other scenarios than the root control usecase."
        },
        "ShellOverlay": {
            "attributes": [{
                "name": "shell",
                "documentation": "Reference to the sap.ui.unified.Shell or sap.ui.unified.ShellLayout control."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "closed",
                "documentation": "Fired when the overlay was closed."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "ShellOverlay to be opened in front of an sap.ui.unified.Shell"
        },
        "SplitContainer": {
            "attributes": [{
                "name": "showSecondaryContent",
                "documentation": "Shows / Hides the secondary area."
            }, {
                "name": "secondaryContentSize",
                "documentation": "The width if the secondary content. The height is always 100%."
            }, {
                "name": "secondaryContentWidth",
                "documentation": "Do not use. Use secondaryContentSize instead."
            }, {
                "name": "orientation",
                "documentation": "Whether to show the secondary content on the left (\"Horizontal\", default) or on the top (\"Vertical\")."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Provides a main content and a secondary content area"
        },
        "DatesRow": {
            "attributes": [{
                "name": "startDate",
                "documentation": "Start date of the row\nIf in rendering phase the date property is not in the range startDate + days,\nit is set to the start date\nSo after setting the start date the date should be set to be in the range of the start date"
            }, {
                "name": "days",
                "documentation": "number of days displayed"
            }, {
                "name": "showDayNamesLine",
                "documentation": "If set the day names are shown in a separate line.\nIf not set the day names are shown inside the single days."
            }, {
                "name": "date",
                "documentation": "A date as JavaScript Date object.\nThe month including this date is rendered and this date is focused initially (if no other focus is set)."
            }, {
                "name": "intervalSelection",
                "documentation": "If set, interval selection is allowed"
            }, {
                "name": "singleSelection",
                "documentation": "If set, only a single date or interval, if intervalSelection is enabled, can be selected"
            }, {
                "name": "showHeader",
                "documentation": "If set, a header with the month name is shown"
            }, {
                "name": "firstDayOfWeek",
                "documentation": "If set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used."
            }, {
                "name": "nonWorkingDays",
                "documentation": "If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days."
            }, {
                "name": "primaryCalendarType",
                "documentation": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
            }, {
                "name": "secondaryCalendarType",
                "documentation": "If set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
            }, {
                "name": "width",
                "documentation": "Width of Month"
            }, {
                "name": "showWeekNumbers",
                "documentation": "Determines whether the week numbers in the months are displayed. Note: For Islamic calendars, the week numbers are not displayed\nregardless of what is set to this property."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Date selection changed"
            }, {
                "name": "focus",
                "documentation": "Date focus changed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.unified.Month",
            "documentation": "renders a row of days with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage\nIf used inside the calendar the properties and aggregation are directly taken from the parent\n(To not duplicate and sync DateRanges and so on...)"
        },
        "Header": {
            "attributes": [{
                "name": "textButton0",
                "documentation": "Text of the first button (normally day)"
            }, {
                "name": "additionalTextButton0",
                "documentation": "Additional text of the first button (normally day)"
            }, {
                "name": "ariaLabelButton0",
                "documentation": "aria-label of the first button (normally day)"
            }, {
                "name": "visibleButton0",
                "documentation": "If set, the first button will be displayed Note: The default is set to false to be compatible to older versions"
            }, {
                "name": "textButton1",
                "documentation": "Text of the second button (normally month)"
            }, {
                "name": "additionalTextButton1",
                "documentation": "Additional text of the second button (normally month)"
            }, {
                "name": "ariaLabelButton1",
                "documentation": "aria-label of the second button (normally month)"
            }, {
                "name": "visibleButton1",
                "documentation": "If set, the second button will be displayed"
            }, {
                "name": "textButton2",
                "documentation": "Text of the third button (normally year)"
            }, {
                "name": "additionalTextButton2",
                "documentation": "Additional text of the third button (normally year)"
            }, {
                "name": "ariaLabelButton2",
                "documentation": "aria-label of the third button (normally year)"
            }, {
                "name": "visibleButton2",
                "documentation": "If set, the third button will be displayed"
            }, {
                "name": "enabledPrevious",
                "documentation": "Enables the previous button"
            }, {
                "name": "enabledNext",
                "documentation": "Enables the Next button"
            }, {
                "name": "pressPrevious",
                "documentation": "Previous button pressed"
            }, {
                "name": "pressNext",
                "documentation": "Next button pressed"
            }, {
                "name": "pressButton0",
                "documentation": "First button pressed (normally day)"
            }, {
                "name": "pressButton1",
                "documentation": "Second button pressed (normally month)"
            }, {
                "name": "pressButton2",
                "documentation": "Third button pressed (normally year)"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "renders a calendar header The calendar header consists of 3 buttons where the text can be set and a previous and a next button.\nIn the normal calendar the first button contains the displayed day, the second button the displayed month and the third button the displayed year. Note: This is used inside the calendar. Not for standalone usage"
        },
        "Month": {
            "attributes": [{
                "name": "date",
                "documentation": "A date as JavaScript Date object.\nThe month including this date is rendered and this date is focused initially (if no other focus is set)."
            }, {
                "name": "intervalSelection",
                "documentation": "If set, interval selection is allowed"
            }, {
                "name": "singleSelection",
                "documentation": "If set, only a single date or interval, if intervalSelection is enabled, can be selected"
            }, {
                "name": "showHeader",
                "documentation": "If set, a header with the month name is shown"
            }, {
                "name": "firstDayOfWeek",
                "documentation": "If set, the first day of the displayed week is this day. Valid values are 0 to 6.\nIf not a valid value is set, the default of the used locale is used."
            }, {
                "name": "nonWorkingDays",
                "documentation": "If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6.\nIf not set, the weekend defined in the locale settings is displayed as non-working days."
            }, {
                "name": "primaryCalendarType",
                "documentation": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
            }, {
                "name": "secondaryCalendarType",
                "documentation": "If set, the days are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type"
            }, {
                "name": "width",
                "documentation": "Width of Month"
            }, {
                "name": "showWeekNumbers",
                "documentation": "Determines whether the week numbers in the months are displayed. Note: For Islamic calendars, the week numbers are not displayed\nregardless of what is set to this property."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Date selection changed"
            }, {
                "name": "focus",
                "documentation": "Date focus changed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "renders a month with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage\nIf used inside the calendar the properties and aggregation are directly taken from the parent\n(To not duplicate and sync DateRanges and so on...)"
        },
        "MonthPicker": {
            "attributes": [{
                "name": "month",
                "documentation": "The month is initial focused and selected\nThe value must be between 0 and 11"
            }, {
                "name": "months",
                "documentation": "number of displayed months\nThe value must be between 1 and 12"
            }, {
                "name": "columns",
                "documentation": "number of months in each row\nThe value must be between 0 and 12 (0 means just to have all months in one row, independent of the number)"
            }, {
                "name": "primaryCalendarType",
                "documentation": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
            }, {
                "name": "select",
                "documentation": "Month selection changed"
            }, {
                "name": "pageChange",
                "documentation": "If less than 12 months are displayed the pageChange event is fired\nif the displayed months are changed by user navigation."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "renders a MonthPicker with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage"
        },
        "MonthsRow": {
            "attributes": [{
                "name": "date",
                "documentation": "A date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range startDate + months in the rendering phase,\nit is set to the startDate.\nSo after setting the startDate the date should be set to be in the visible range."
            }, {
                "name": "startDate",
                "documentation": "Start date, as JavaScript Date object, of the row. The month of this date is the first month of the displayed row."
            }, {
                "name": "months",
                "documentation": "Number of months displayed"
            }, {
                "name": "intervalSelection",
                "documentation": "If set, interval selection is allowed"
            }, {
                "name": "singleSelection",
                "documentation": "If set, only a single month or interval, if intervalSelection is enabled, can be selected Note: Selection of multiple intervals is not supported in the current version."
            }, {
                "name": "showHeader",
                "documentation": "If set, a header with the years is shown to visualize what month belongs to what year."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Month selection changed"
            }, {
                "name": "focus",
                "documentation": "Month focus changed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Renders a row of months using ItemNavigation. There is no paging or navigation outside the rendered area implemented.\nThis is done inside the CalendarMonthInterval.\nIf used inside the CalendarMonthInterval the properties and aggregation are directly taken from the parent\n(to not duplicate and synchronize DateRanges and so on...). The MontsRow works with JavaScript Date objects, but only the month and the year are used to display and interact.\nAs representation for a month, the 1st of the month will always be returned in the API."
        },
        "TimesRow": {
            "attributes": [{
                "name": "date",
                "documentation": "A date as JavaScript Date object. The month including this date is rendered and this date is focused initially (if no other focus is set).\nIf the date property is not in the range startDate + items in the rendering phase,\nit is set to the startDate.\nSo after setting the startDate the date should be set to be in the visible range."
            }, {
                "name": "startDate",
                "documentation": "Start date, as JavaScript Date object, of the row."
            }, {
                "name": "items",
                "documentation": "Number of time items displayed"
            }, {
                "name": "intervalMinutes",
                "documentation": "Size of on time interval in minutes, default is 60 minutes. Note: the start of the interval calculation is always startDat at 00:00. An interval longer than 720 minutes is not allowed. Please use the DatesRow instead. A day must be divisible by this interval size. One interval must not include more than one day."
            }, {
                "name": "intervalSelection",
                "documentation": "If set, interval selection is allowed"
            }, {
                "name": "singleSelection",
                "documentation": "If set, only a single month or interval, if intervalSelection is enabled, can be selected Note: Selection of multiple intervals is not supported in the current version."
            }, {
                "name": "showHeader",
                "documentation": "If set, a header with the years is shown to visualize what month belongs to what year."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "legend",
                "documentation": "Association to the CalendarLegend explaining the colors of the specialDates. Note The legend does not have to be rendered but must exist, and all required types must be assigned."
            }, {
                "name": "select",
                "documentation": "Time selection changed"
            }, {
                "name": "focus",
                "documentation": "Time focus changed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Renders a row of time items using ItemNavigation. There is no paging or navigation outside the rendered area implemented.\nThis is done inside the CalendarTimeInterval.\nIf used inside the CalendarTimeInterval the properties and aggregation are directly taken from the parent\n(to not duplicate and synchronize DateRanges and so on...). The TimesRow works with JavaScript Date objects."
        },
        "YearPicker": {
            "attributes": [{
                "name": "year",
                "documentation": "The year is initial focused and selected\nThe value must be between 0 and 9999"
            }, {
                "name": "years",
                "documentation": "number of displayed years"
            }, {
                "name": "columns",
                "documentation": "number of years in each row\n0 means just to have all years in one row, independent of the number"
            }, {
                "name": "date",
                "documentation": "Date as JavaScript Date object. For this date a YearPicker is rendered. If a Year is selected the\ndate is updated with the start date of the selected year (depending on the calendar type)."
            }, {
                "name": "primaryCalendarType",
                "documentation": "If set, the calendar type is used for display.\nIf not set, the calendar type of the global configuration is used."
            }, {
                "name": "select",
                "documentation": "Month selection changed"
            }, {
                "name": "pageChange",
                "documentation": "The pageChange event is fired if the displayed years are changed by user navigation."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "renders a YearPicker with ItemNavigation\nThis is used inside the calendar. Not for stand alone usage"
        }
    },
    "sap.ui.ux3": {
        "ActionBar": {
            "attributes": [{
                "name": "followState",
                "documentation": "Keeps track of the actionBars Follow/Unfollow button’s state. Its value is one of\n- FollowActionState.Default\n- FollowActionState.Follow\n- FollowActionState.Hold"
            }, {
                "name": "flagState",
                "documentation": "Indicates whether “Mark for Follow Up” is active"
            }, {
                "name": "favoriteState",
                "documentation": "Indicates whether “Favorite” is active"
            }, {
                "name": "updateState",
                "documentation": "Indicates whether “Update” is active"
            }, {
                "name": "thingIconURI",
                "documentation": "The thing icon uri. Icon will be displayed in Feeder"
            }, {
                "name": "alwaysShowMoreMenu",
                "documentation": "If true, business actions are rendered as menu items of the 'More' menu button. Otherwise, 'More' menu button is only displayed for overflow and business actions are rendered as inidividual buttons."
            }, {
                "name": "showUpdate",
                "documentation": "Indicates whether social action “Update” is shown, default is ‘true’"
            }, {
                "name": "showFollow",
                "documentation": "Indicates whether social action “Follow” is shown, default is ‘true’"
            }, {
                "name": "showFlag",
                "documentation": "Indicates whether social action “Mark for Follow Up” is shown, default is ‘true’"
            }, {
                "name": "showFavorite",
                "documentation": "Indicates whether social action “Favorite” is shown, default is ‘true’"
            }, {
                "name": "showOpen",
                "documentation": "Indicates whether social action “Open” is shown, default is ‘true’"
            }, {
                "name": "dividerWidth",
                "documentation": "The minimum width of ActionBar's the social actions part: business action controls have to be rendered outside this area"
            }, {
                "name": "actionSelected",
                "documentation": "Fired when any of the social action’s toolbar buttons except ‘Update’ or any of the business action’s menu items resp. buttons is pressed. The selected action can be identified by its id and newState (the latter if applicable only)\n‘Follow’ button + menu: id: follow, newState: Follow/Hold/Default\n‘Mark for follow up’ button: id: flag, newState: true/false\n‘Favorite’ button: id: favorite, newState: true/false\n‘Open Thing Inspector’ button id: open\nBusiness Actions: id: the ThingAction id For ‘Update’, please refer to event ‘feedSubmit’"
            }, {
                "name": "feedSubmit",
                "documentation": "Fired when a new feed entry is submitted."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A special toolbar with predefined social actions which can be shown as needed. These are: Create an update (Feed), Follow, Mark for Follow Up, Mark as Favorite and Open Thing. In addition business actions (ThingAction instances) can be added which are either displayed as MenuItems of the 'More' menu button or as individual tool bar buttons. When using this control, please be aware that it fulfills rather specific requirements: it has been designed for and is used within composite controls QuickView and ThingInspector."
        },
        "Collection": {
            "attributes": [{
                "name": "title",
                "documentation": "Name for the collection"
            }, {
                "name": "editable",
                "documentation": "If a collection is editable an edit button will be displayed below the list of items"
            }, {
                "name": "multiSelection",
                "documentation": "Allow multi selection of items in collection"
            }, {
                "name": "selectedItems",
                "documentation": "Contains all items that are currently selected"
            }, {
                "name": "selectionChanged",
                "documentation": "Fired when ever the selected items changer"
            }, {
                "name": "propertyChanged",
                "documentation": "Fires if a property has changed, and the collection inspector needs to do something after that"
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Collection"
        },
        "CollectionInspector": {
            "attributes": [{
                "name": "sidebarVisible",
                "documentation": "Defines if the list of collection items is visible on the left"
            }, {
                "name": "fitParent",
                "documentation": "If set to true, control will fit parents content area"
            }, {
                "name": "selectedCollection",
                "documentation": "Collection which is currently selected"
            }, {
                "name": "collectionSelected",
                "documentation": "Event is fired if user selects a collection"
            }, {
                "name": "itemSelectionChanged",
                "documentation": "Fires when an item in a collection is selected"
            }, {
                "name": "editCollection",
                "documentation": "Fires when the edit button is clicked"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "CollectionInspector"
        },
        "DataSet": {
            "attributes": [{
                "name": "showToolbar",
                "documentation": "show Toolbar"
            }, {
                "name": "showFilter",
                "documentation": "show filter"
            }, {
                "name": "showSearchField",
                "documentation": "Show/hide SearchField in Toolbar"
            }, {
                "name": "multiSelect",
                "documentation": "Selection mode of the DataSet"
            }, {
                "name": "selectedView",
                "documentation": "Selected view of the Dataset"
            }, {
                "name": "selectionChanged",
                "documentation": "selection Changed"
            }, {
                "name": "search",
                "documentation": "Event which is fired when the user triggers a search"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "DataSet"
        },
        "DataSetItem": {
            "attributes": [{
                "name": "iconSrc",
                "documentation": "image"
            }, {
                "name": "title",
                "documentation": "title"
            }, {
                "name": "checkable",
                "documentation": "checkable"
            }, {
                "name": "subtitle",
                "documentation": "subtitle"
            }, {
                "name": "selected",
                "documentation": "Event Fired when Datset item is selected."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "DataSet Item"
        },
        "DataSetSimpleView": {
            "attributes": [{
                "name": "floating",
                "documentation": "When true the DatSet items are floating containers. When set to false The Items are rendered in a 1 column Layout."
            }, {
                "name": "name",
                "documentation": "Name of the View"
            }, {
                "name": "icon",
                "documentation": "Icon source for this view"
            }, {
                "name": "iconHovered",
                "documentation": "icon: hovered state"
            }, {
                "name": "iconSelected",
                "documentation": "icon: selected state"
            }, {
                "name": "responsive",
                "documentation": "When true and the property floating is true the DatSet items are floating containers filling the whole space of a row."
            }, {
                "name": "itemMinWidth",
                "documentation": "When itemMinWidth>0 and the property floating is true the given minimum width in pixels is set to DatSet items. A minimum width must be given when the property responsive is set."
            }, {
                "name": "initialItemCount",
                "documentation": "If this value is greater zero only this amount of items is loaded in the first place. New items are loaded automatically when the user scrolls down. The number of items which are reloaded can be defined with the property \"reloadItemCount\""
            }, {
                "name": "reloadItemCount",
                "documentation": "This number defines the item count which is reloaded on scroll if initialItemCount is enabled."
            }, {
                "name": "scrollArea",
                "documentation": "ID of the DOM Element or jQuery reference to the dom which holds the scrollbar for the dataset"
            }, {
                "name": "height",
                "documentation": "If the pagination feature is used without specifying a scroll area, a height for the dataset must be defined."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "DataSetSimpleView provides a simple view example for DataSet usage."
        },
        "Exact": {
            "attributes": [{
                "name": "resultText",
                "documentation": "A title text which is displayed above the result section"
            }, {
                "name": "search",
                "documentation": "Event is fired when the search button is clicked"
            }, {
                "name": "refineSearch",
                "documentation": "Event which is fired when an attribute is selected or unselected."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A comprehensive UI design approach with graphical and functional elements for searching data, exploring data, and acting on the data\n(\"Explore and Act (Exact) Pattern\")."
        },
        "ExactArea": {
            "attributes": [{
                "name": "toolbarVisible",
                "documentation": "Specifies whether the tool bar shall be visible"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Consists of two sections: A tool bar and a content area where arbitrary controls can be added.\nThe ExactArea is intended to be used for the Exact design approach but alternatively also in a stand alone version."
        },
        "ExactAttribute": {
            "attributes": [{
                "name": "text",
                "documentation": "The attribute name"
            }, {
                "name": "selected",
                "documentation": "Specifies whether the attribute shall be selected"
            }, {
                "name": "width",
                "documentation": "Specifies the width of the corresponding list in pixels. The value must be between 70 and 500."
            }, {
                "name": "listOrder",
                "documentation": "The order how the sublists of this attribute should be displayed."
            }, {
                "name": "showSubAttributesIndicator",
                "documentation": "Specifies whether the attribute shall have sub values for visual purposes.\nThe indicator which is a little arrow beside an attribute in the list is computed automatically\n(getShowSubAttributesIndicator_Computed() of sap.ui.ux3.ExactAttribute).\nIn the case that a supply function is attached, and the supplyActive attribute has value 'true',\nthen the Exact pattern needs a hint if sub attributes are available. The showSubAttributesIndicator attribute is\nconsidered then and has to be maintained. If the back-end does not support count-calls, for example,\nshowSubAttributesIndicator should be set to true."
            }, {
                "name": "additionalData",
                "documentation": "An example for additional data are database keys"
            }, {
                "name": "supplyActive",
                "documentation": "The supplyAttributes event is only fired if supplyActive has value true which is the default. After firing the event, the attribute is automatically set to false.\nThe idea is that a supply function is called only once when the data is requested. To enable the event again it is possible to manually set the attribute back to true."
            }, {
                "name": "autoActivateSupply",
                "documentation": "If you want the supply function to be called on every select, you can set the autoActivateSupply attribute to true. In this case, supplyActive is automatically\nset to true on every unselect."
            }, {
                "name": "supplyAttributes",
                "documentation": "A supply function is a handler which is attached to the supplyAttributes event. The event is fired when the corresponding ExactAttribute is selected, it was already selected when a handler is attached or function getAttributes() is called."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "An element for defining attributes and sub-attributes used within the Exact pattern."
        },
        "ExactBrowser": {
            "attributes": [{
                "name": "title",
                "documentation": "Title text in the list area of the Exact Browser. The title is not shown when the property showTopList is set to false."
            }, {
                "name": "headerTitle",
                "documentation": "Title text in the header of the Exact Browser."
            }, {
                "name": "topListOrder",
                "documentation": "The order how the sublists of the top level list should be displayed."
            }, {
                "name": "enableListClose",
                "documentation": "Enables the close icons of the displayed lists."
            }, {
                "name": "listHeight",
                "documentation": "The height of the list area in px."
            }, {
                "name": "showHeader",
                "documentation": "Whether the header area of the ExactBrowser should be shown."
            }, {
                "name": "showTopList",
                "documentation": "Whether the top list of the ExactBrowser should be shown. When the property is set to false the\napplication must ensure to select top level attributes appropriately."
            }, {
                "name": "enableReset",
                "documentation": "Whether the reset functionality should be available in the header area."
            }, {
                "name": "enableSave",
                "documentation": "Whether the save button should be available in the header area."
            }, {
                "name": "topListWidth",
                "documentation": "Specifies the width of the top list in pixels. The value must be between 70 and 500."
            }, {
                "name": "followUpControl",
                "documentation": "The successor control of the Exact Browser. The id of this control is used in the ARIA description of the control."
            }, {
                "name": "attributeSelected",
                "documentation": "Event is fired when an attribute is selected or unselected."
            }, {
                "name": "save",
                "documentation": "Event is fired when an attribute is selected or unselected."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Attribute browse area used within the Exact pattern. The main benefit of this control is the high flexibility when large data amounts shall be displayed\nin the form of structured data sets with a high or low interdependency level. From lists - which can be nested according to the defined attributes - the user can choose\nentries and thereby trigger the display of further information, depending on the chosen entry/entries (multiple selection supported)."
        },
        "ExactList": {
            "attributes": [{
                "name": "showClose",
                "documentation": "Defines whether the close icon shall be displayed in the header."
            }, {
                "name": "topTitle",
                "documentation": "The title of this list is the top of the list hierarchy."
            }, {
                "name": "topHeight",
                "documentation": "The height in px if this list is the top of the list hierarchy."
            }, {
                "name": "data",
                "documentation": "The associated ExactAttribute"
            }, {
                "name": "attributeSelected",
                "documentation": "Event which is fired when an attribute is selected/unselected"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Internal sub-control of the ExactBrowser. The control is not intended to be used stand alone. For this purpose, the ExactBrowser control can be used."
        },
        "FacetFilter": {
            "attributes": [{
                "name": "visibleItemCountMode",
                "documentation": "If the value is \"Auto\" - the Facet Filter takes the whole available height. If \"Fixed\" , then the default number of Facet Filter Items (5) is visible."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "FacetFilter Control."
        },
        "FacetFilterList": {
            "attributes": [{
                "name": "title",
                "documentation": "The title of this list."
            }, {
                "name": "multiSelect",
                "documentation": "Specifies whether multiple or single selection is used."
            }, {
                "name": "displaySecondaryValues",
                "documentation": "Specifies whether the text values from the additionalText property (see sap.ui.core.ListItems) shall be displayed."
            }, {
                "name": "selectedKeys",
                "documentation": "Array of type string containing the selected keys."
            }, {
                "name": "showCounter",
                "documentation": "Specifies whether the counter for all entries is shown."
            }, {
                "name": "select",
                "documentation": "On Select event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "List to be used with the FacetFilter control. The control is not intended to be used stand alone."
        },
        "Feed": {
            "attributes": [{
                "name": "feederThumbnailSrc",
                "documentation": "The path to the thumbnail image used for the feeder"
            }, {
                "name": "feederSender",
                "documentation": "The sender of the feeder"
            }, {
                "name": "live",
                "documentation": "Specifies whether the feed shall be in live mode"
            }, {
                "name": "title",
                "documentation": "Title text of the Feed. If no text is entered \"FEED\" is displayed."
            }, {
                "name": "filterChange",
                "documentation": "Event is fired when the filter is changed"
            }, {
                "name": "search",
                "documentation": "Event is fired when the search function on SearchField is triggered"
            }, {
                "name": "chunkAdded",
                "documentation": "Event is fired when a new chunk is added"
            }, {
                "name": "toolsItemSelected",
                "documentation": "Event is fired when an item from the tools MenuButton was selected"
            }, {
                "name": "toggleLive",
                "documentation": "Event is fired when the live mode has changed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A container control representing a full feed page, including feeder and updates."
        },
        "FeedChunk": {
            "attributes": [{
                "name": "thumbnailSrc",
                "documentation": "URL to the thumbnail image."
            }, {
                "name": "text",
                "documentation": "The FeedChunk text. @References are supported."
            }, {
                "name": "sender",
                "documentation": "Sender of the chunk"
            }, {
                "name": "timestamp",
                "documentation": "Format is ISO 8601 YYYY-MM-DDThh:mm:ss.sZ, Z meaning the time is in UTC time zone"
            }, {
                "name": "deletionAllowed",
                "documentation": "Flag if the deletion of the chunk shall be allowed"
            }, {
                "name": "commentChunk",
                "documentation": "This flag changes a FeedChunk into a CommentChunk. In this case, it can not have own comments,\nfurthermore it must be assigned to a FeedChunk."
            }, {
                "name": "feederThumbnailSrc",
                "documentation": "URL to the thumbnail image for the comment feeder.\nThis property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control."
            }, {
                "name": "feederSender",
                "documentation": "Sender for the comment feeder\nThis property is optional if the chunk is a sub-control of a feed control. In this case the value of the feed control is used if it's not set. So it must be only set once on the feed control."
            }, {
                "name": "flagged",
                "documentation": "Defines whether the entry is flagged. This property is not supported for comment chunks."
            }, {
                "name": "favorite",
                "documentation": "Defines whether the entry shall be displayed as favorite. This property is not supported for comment chunks."
            }, {
                "name": "shared",
                "documentation": "Defines whether the entry shall be shared. This property is not supported for comment chunks."
            }, {
                "name": "enableFlag",
                "documentation": "If true the flag action is enabled."
            }, {
                "name": "enableShare",
                "documentation": "If true the share action is enabled."
            }, {
                "name": "enableComment",
                "documentation": "If true the comment action is enabled."
            }, {
                "name": "enableInspect",
                "documentation": "If true the inspect action is enabled."
            }, {
                "name": "enableFavorite",
                "documentation": "If true the favorite action is enabled."
            }, {
                "name": "deleted",
                "documentation": "Event is fired when the deletion button is pressed."
            }, {
                "name": "commentAdded",
                "documentation": "Event is raised when a comment is added to the entry. This event is not supported for comment chunks."
            }, {
                "name": "toggleFlagged",
                "documentation": "Event is raised when the user clicks to flag the entry. This event is not supported for comment chunks."
            }, {
                "name": "senderClicked",
                "documentation": "Event is fired when the thumbnail or the name of the sender is clicked."
            }, {
                "name": "referenceClicked",
                "documentation": "Click on a @-reference"
            }, {
                "name": "toggleFavorite",
                "documentation": "Event is raised when the user clicks to set the entry as favorite. This event is not supported for comment chunks."
            }, {
                "name": "inspect",
                "documentation": "Event is fired when the inspect button was pressed"
            }, {
                "name": "toggleShared",
                "documentation": "Event is raised when the user clicks to share the entry. This event is not supported for comment chunks."
            }, {
                "name": "actionItemSelected",
                "documentation": "Event is fired when an item from the action menu button was selected."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The unit that is embedded - single-wise or in a multiple way - into a Feed control.\nThe control provides a set of properties for text, sender information, time stamp,\ncomments, and functions such as flagging the entry to be favorite, shared, or flagged."
        },
        "Feeder": {
            "attributes": [{
                "name": "thumbnailSrc",
                "documentation": "URL to the thumb nail image\nThis property is optional if the feeder is a sub-control of a feed or a feedChunk control. In this case the value of the feed or feddChunk control is used if it's not set. So it must be only set once on the feed or feedChunk control."
            }, {
                "name": "text",
                "documentation": "The text for the Feeder. @References are supported."
            }, {
                "name": "type",
                "documentation": "Type and size of the Feeder"
            }, {
                "name": "placeholderText",
                "documentation": "This property could be used for costum placeholder. If it is not set, the default text is used."
            }, {
                "name": "submit",
                "documentation": "Event is fired when the entered text is submitted"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "This feed control flavor represents a lean common feed, or a comment feed, with a text commit function.\nThe control can be used stand alone or in a multiple way, and generally would be integrated directly into a UIArea."
        },
        "NavigationBar": {
            "attributes": [{
                "name": "toplevelVariant",
                "documentation": "Defines whether the navigation bar shall have top-level appearance"
            }, {
                "name": "overflowItemsToUpperCase",
                "documentation": "Sets the appearance of the menu items in the overflow menu to uppercase"
            }, {
                "name": "selectedItem",
                "documentation": "The selected NavigationItem."
            }, {
                "name": "associatedItems",
                "documentation": "This association is ignored as long as the items aggregation is used; and supposed to be used alternatively when the items should be aggregated by other\nentities."
            }, {
                "name": "select",
                "documentation": "Event is fired when an item is selected by the user"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Provides enhanced navigation capabilities and is the parent control of NavigationItem. It is displayed in the form of a horizontal line\nwith switching markers depending on the currently selected item. The size of an item which is currently chosen by the user is enlarged. In the case\nthat a large number of items are defined for the bar, this is made transparent to the user by showing symbols for scrolling options (forwards and backwards)\nto see the next or previous items."
        },
        "NavigationItem": {
            "attributes": [{
                "name": "visible",
                "documentation": "Whether the NavigationItem is currently visible. When making NavigationItems invisible at runtime it is the application's responsibility to make sure it is not the currently selected one - or to select another one in this case."
            }, {
                "name": "href",
                "documentation": "Defines the link target URL. This property is optional and should only be set when required!\nThe use of the href property is to not only allow users to navigate in-place by left-clicking NavigationItems, but also to allow right-click and then \"open in new tab\" or \"open in new window\". As long as href is not set, an empty window will open and stay blank. But when href is set, the new window/tab will load this URL and it is the application's responsibility to display what the user expects (e.g. the Shell, with the respective NavigationItem being selected)."
            }, {
                "name": "text",
                "documentation": "The text to be displayed for the item."
            }, {
                "name": "enabled",
                "documentation": "Enabled items can be selected."
            }, {
                "name": "textDirection",
                "documentation": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control."
            }, {
                "name": "key",
                "documentation": "Can be used as input for subsequent actions."
            }],
            "extendsElement": "sap.ui.core.Item",
            "documentation": "Is the item to be used within the NavigationBar"
        },
        "NotificationBar": {
            "attributes": [{
                "name": "visibleStatus",
                "documentation": "This property displays the bar corresponding to given status"
            }, {
                "name": "resizeEnabled",
                "documentation": "This property enables the bar to be resized by the user."
            }, {
                "name": "alwaysShowToggler",
                "documentation": "This property defines if the toggler should be displayed the whole time when the NotificationBar is shown."
            }, {
                "name": "display",
                "documentation": "Event is fired when the bar wants to be displayed depending on given flag. This allows the application to decide what to do."
            }, {
                "name": "resize",
                "documentation": "This event is thrown when the bar was resized (to the different valid states: Min, Max, Default, None). The event itself can be used from SAPUI5-version 1.12.2 since there was a bug in the previous versions firing this event."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A NotificationBar is a \"toolbar\" that can be added to a page to show messages and notifications from the application.\nIts position, height and width is inherited from the element that the notification bar is added to.\nThe NotificationBar uses position: fixed; to always stay at the bottom of the screen. This CSS may sometimes cause\nissues when nested deeply inside other controls. To have a proper behavior of the NotificationBar use it as high\nin the control hierarchy as possible."
        },
        "Notifier": {
            "attributes": [{
                "name": "icon",
                "documentation": "Icon of the control that should be displayed within the corresponding bar"
            }, {
                "name": "title",
                "documentation": "Defines the title that should be displayed within the opening popup"
            }, {
                "name": "messageSelected",
                "documentation": "Event is fired when a message of the notifiers was selected."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "This element can be docked to a notification bar to show notification items"
        },
        "Overlay": {
            "attributes": [{
                "name": "openButtonVisible",
                "documentation": "Defines whether the 'Open' button shall be visible."
            }, {
                "name": "closeButtonVisible",
                "documentation": "Defines whether the 'Close' button shall be visible."
            }, {
                "name": "close",
                "documentation": "Event is fired when the Overlay starts closing."
            }, {
                "name": "closed",
                "documentation": "Event is fired when the Overlay is closed."
            }, {
                "name": "openNew",
                "documentation": "Event is fired when the 'Open' button of the Overlay is clicked."
            }, {
                "name": "open",
                "documentation": "Event is fired when the Overlay is opened."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Overlay Control"
        },
        "OverlayContainer": {
            "attributes": [{
                "name": "openButtonVisible",
                "documentation": "Defines whether the 'Open' button shall be visible."
            }, {
                "name": "closeButtonVisible",
                "documentation": "Defines whether the 'Close' button shall be visible."
            }, {
                "name": "close",
                "documentation": "Event is fired when the Overlay starts closing."
            }, {
                "name": "closed",
                "documentation": "Event is fired when the Overlay is closed."
            }, {
                "name": "openNew",
                "documentation": "Event is fired when the 'Open' button of the Overlay is clicked."
            }, {
                "name": "open",
                "documentation": "Event is fired when the Overlay is opened."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.ux3.Overlay",
            "documentation": "Is to be embedded into the Overlay control as content container"
        },
        "OverlayDialog": {
            "attributes": [{
                "name": "width",
                "documentation": "Determines the width of the Overlay Dialog. If the width is set to \"auto\" it is always 50% of the overlay width."
            }, {
                "name": "height",
                "documentation": "Determines the height of the Overlay Dialog. If the height is set to \"auto\" it is always 50% of the overlay height."
            }, {
                "name": "openButtonVisible",
                "documentation": "Defines whether the 'Open' button shall be visible."
            }, {
                "name": "closeButtonVisible",
                "documentation": "Defines whether the 'Close' button shall be visible."
            }, {
                "name": "close",
                "documentation": "Event is fired when the Overlay starts closing."
            }, {
                "name": "closed",
                "documentation": "Event is fired when the Overlay is closed."
            }, {
                "name": "openNew",
                "documentation": "Event is fired when the 'Open' button of the Overlay is clicked."
            }, {
                "name": "open",
                "documentation": "Event is fired when the Overlay is opened."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.ux3.Overlay",
            "documentation": "Dialog implementation based on the Overlay. If used in a Shell it leaves the Tool-Palette, Pane-Bar and Header-Items accessible."
        },
        "QuickView": {
            "attributes": [{
                "name": "type",
                "documentation": "Thing type (mandatory) like Account, Material, Employee etc. is displayed in a header at the top part of the QuickView."
            }, {
                "name": "firstTitle",
                "documentation": "Thing name shown in the header of the QuickView"
            }, {
                "name": "firstTitleHref",
                "documentation": "URI to Thing Inspector"
            }, {
                "name": "secondTitle",
                "documentation": "Optional short text shown under the firstTitle"
            }, {
                "name": "icon",
                "documentation": "URI of the Thing icon image (mandatory). The image is scaled down to the maximal size of 32 pixel (vertical or horizontal)."
            }, {
                "name": "width",
                "documentation": "Control width as common CSS-size (px or % as unit, for example)."
            }, {
                "name": "showActionBar",
                "documentation": "Show Action Bar"
            }, {
                "name": "followState",
                "documentation": "Follow State of a Thing"
            }, {
                "name": "flagState",
                "documentation": "State of Flag Action"
            }, {
                "name": "favoriteState",
                "documentation": "State Of favorite Action"
            }, {
                "name": "favoriteActionEnabled",
                "documentation": "Favorite action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "updateActionEnabled",
                "documentation": "Update action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "followActionEnabled",
                "documentation": "Follow action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "flagActionEnabled",
                "documentation": "Flag action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "openActionEnabled",
                "documentation": "Open Thing action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "actionSelected",
                "documentation": "Action is selected in Action Bar"
            }, {
                "name": "feedSubmit",
                "documentation": "Fired when a new feed entry is submitted."
            }, {
                "name": "navigate",
                "documentation": "Event is fired when a user clicks on the firstTitle link. Call the preventDefault method of the event object to cancel browser navigation."
            }, {
                "name": "open",
                "documentation": "The event is fired when the popup is opened."
            }, {
                "name": "close",
                "documentation": "Event is fired when the Callout window is closed."
            }, {
                "name": "beforeOpen",
                "documentation": "Event is fired before a Callout is displayed. Call the preventDefault method of the event object to postpone opening. Application may use this event to start asynchronous Ajax call to load the Callout content"
            }, {
                "name": "opened",
                "documentation": "Is fired when the Callout has been opened"
            }, {
                "name": "text",
                "documentation": "The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip."
            }, {
                "name": "openDuration",
                "documentation": "Optional. Open Duration in milliseconds."
            }, {
                "name": "closeDuration",
                "documentation": "Optional. Close Duration in milliseconds."
            }, {
                "name": "myPosition",
                "documentation": "Optional. My position defines which position on the extended tooltip being positioned to align with the target control."
            }, {
                "name": "atPosition",
                "documentation": "Optional. At position defines which position on the target control to align the positioned tooltip."
            }, {
                "name": "offset",
                "documentation": "Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\"."
            }, {
                "name": "collision",
                "documentation": "Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position."
            }, {
                "name": "openDelay",
                "documentation": "Opening delay of the tooltip in milliseconds"
            }, {
                "name": "closeDelay",
                "documentation": "Closing delay of the tooltip in milliseconds"
            }, {
                "name": "closed",
                "documentation": "This event is fired when the Tooltip has been closed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "text",
                "documentation": "The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip."
            }, {
                "name": "openDuration",
                "documentation": "Optional. Open Duration in milliseconds."
            }, {
                "name": "closeDuration",
                "documentation": "Optional. Close Duration in milliseconds."
            }, {
                "name": "myPosition",
                "documentation": "Optional. My position defines which position on the extended tooltip being positioned to align with the target control."
            }, {
                "name": "atPosition",
                "documentation": "Optional. At position defines which position on the target control to align the positioned tooltip."
            }, {
                "name": "offset",
                "documentation": "Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\"."
            }, {
                "name": "collision",
                "documentation": "Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position."
            }, {
                "name": "openDelay",
                "documentation": "Opening delay of the tooltip in milliseconds"
            }, {
                "name": "closeDelay",
                "documentation": "Closing delay of the tooltip in milliseconds"
            }, {
                "name": "closed",
                "documentation": "This event is fired when the Tooltip has been closed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.commons.CalloutBase",
            "documentation": "QuickView is a small popup with a short overview of a Thing.\nQuickView is shown when a user holds the mouse pointer over a related screen element."
        },
        "Shell": {
            "attributes": [{
                "name": "appTitle",
                "documentation": "The application title to appear in the left part of the header, usually a company and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first."
            }, {
                "name": "appIcon",
                "documentation": "The URL of the image to appear in the left part of the header, usually a branding image containing a logo and/or product name. appIcon and appTitle are both optional and can both be set; in this case the icon appears first.\nIf the appIcon is set, for accessibility reasons the appIconTooltip must also be set."
            }, {
                "name": "appIconTooltip",
                "documentation": "The tooltip of the application icon in the header"
            }, {
                "name": "showLogoutButton",
                "documentation": "Whether the Logoff button in the header should be displayed or not."
            }, {
                "name": "logoutButtonTooltip",
                "documentation": "The tooltip to be displayed for the Logout Button of the Shell. If not set, a text meaning \"Logout\" in the current language will be displayed."
            }, {
                "name": "showSearchTool",
                "documentation": "Whether the \"Global Search\" tool should be displayed or not."
            }, {
                "name": "showInspectorTool",
                "documentation": "Whether the \"Inspector\" tool should be displayed or not."
            }, {
                "name": "showFeederTool",
                "documentation": "Whether the \"Feeder\" tool should be displayed or not."
            }, {
                "name": "showTools",
                "documentation": "Whether the tool area should be displayed at all or not."
            }, {
                "name": "showPane",
                "documentation": "Whether the pane bar should be displayed at all or not."
            }, {
                "name": "headerType",
                "documentation": "Defines which header type to be used. Depending on the header type some other functionality might be obsolete."
            }, {
                "name": "designType",
                "documentation": "Defines which design type is to be used."
            }, {
                "name": "paneWidth",
                "documentation": "The width of the right-hand side pane in pixels. The value must be a non-negative integer. The Shell reserves the right to define a minimum width (currently 50px)."
            }, {
                "name": "applyContentPadding",
                "documentation": "Whether the Shell content area should have a theme-dependent padding or not."
            }, {
                "name": "fullHeightContent",
                "documentation": "If set to true, the content area has a defined height. This means that any content put inside can use \"100%\" height in CSS and will then consume all available space.\nHowever, if content is larger, scrollbars will appear at the content area of the Shell and not on window level."
            }, {
                "name": "allowOverlayHeaderAccess",
                "documentation": "Whether the Shell header (Title Area + Header Items) can be accessed when an Overlay, OverlayContainer or ThingInspector is open."
            }, {
                "name": "selectedWorksetItem",
                "documentation": "The ID of the Item that is currently selected.\nWhen setting, the NavigationItem itself can be given instead of its ID. There will not be a worksetItemSelected event, the application is responsible to show the proper content according to the newly selected WorksetItem. If the set WorksetItem does not exist in this Shell, the first item (and first sub-item) will be selected after the call.\nWhen getting, always the ID is returned, by which the NavigationItem instance can be retrieved."
            }, {
                "name": "worksetItemSelected",
                "documentation": "Fired when a workset item was selected by the user. The application may populate the sub-items of the given workset item in the event handler, but this must happen synchronously. If this is done, the application is responsible for displaying the correct content for the selected one of the newly created sub-items. The Shell will currently always mark the first sub-item as selected."
            }, {
                "name": "paneBarItemSelected",
                "documentation": "An item in the right-hand-side pane bar has been selected, the pane is now visible and can be filled with UI elements."
            }, {
                "name": "logout",
                "documentation": "Fired when the user clicks the \"Log-off\" button"
            }, {
                "name": "search",
                "documentation": "Fired when search has been triggered."
            }, {
                "name": "feedSubmit",
                "documentation": "Fired when a new feed entry is submitted."
            }, {
                "name": "paneClosed",
                "documentation": "Fired after a side pane of the shell is closed. It is also fired, when an open pane is closed by calling setShowPane(false), if and only if the pane was opened before."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The Ux3 GoldReflection Shell, which is an application frame with navigation capabilities.\nIt is supposed to be added to a direct child of the BODY tag of a page and there should be no other parts of the page consuming space outside the Shell."
        },
        "ThingAction": {
            "attributes": [{
                "name": "text",
                "documentation": "text of action"
            }, {
                "name": "enabled",
                "documentation": "action enabled (true/false)"
            }, {
                "name": "select",
                "documentation": "Event will be fired when the action was triggered."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Thing Action for Swatch, QuickView, Thinginspector"
        },
        "ThingGroup": {
            "attributes": [{
                "name": "title",
                "documentation": "Title of Group"
            }, {
                "name": "colspan",
                "documentation": "If Group is used in a column layout the groups spans the all columns if set to true."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Thing Group Area"
        },
        "ThingInspector": {
            "attributes": [{
                "name": "firstTitle",
                "documentation": "First Line of the Thing Inspector Title"
            }, {
                "name": "type",
                "documentation": "Thing type"
            }, {
                "name": "icon",
                "documentation": "Thing Icon Url"
            }, {
                "name": "secondTitle",
                "documentation": "Second Line of the Thing Inspector Title"
            }, {
                "name": "followState",
                "documentation": "Follow State of a Thing"
            }, {
                "name": "flagState",
                "documentation": "State of Flag Action"
            }, {
                "name": "favoriteState",
                "documentation": "State Of favorite Action"
            }, {
                "name": "favoriteActionEnabled",
                "documentation": "Favorite action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "updateActionEnabled",
                "documentation": "Update action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "followActionEnabled",
                "documentation": "Follow action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "flagActionEnabled",
                "documentation": "Flag action enabled/disabled. If disabled the action will be invisible."
            }, {
                "name": "headerType",
                "documentation": "Defines which header type should be used."
            }, {
                "name": "selectedFacet",
                "documentation": "The Facet that is currently selected."
            }, {
                "name": "actionSelected",
                "documentation": "Further thing related Action selected"
            }, {
                "name": "facetSelected",
                "documentation": "Event for facet selection. The application is responsible for displaying the correct content for the selected one. The ThingInspector will currently always mark the first facet as selected."
            }, {
                "name": "feedSubmit",
                "documentation": "Fired when a new feed entry is submitted."
            }, {
                "name": "openButtonVisible",
                "documentation": "Defines whether the 'Open' button shall be visible."
            }, {
                "name": "closeButtonVisible",
                "documentation": "Defines whether the 'Close' button shall be visible."
            }, {
                "name": "close",
                "documentation": "Event is fired when the Overlay starts closing."
            }, {
                "name": "closed",
                "documentation": "Event is fired when the Overlay is closed."
            }, {
                "name": "openNew",
                "documentation": "Event is fired when the 'Open' button of the Overlay is clicked."
            }, {
                "name": "open",
                "documentation": "Event is fired when the Overlay is opened."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.ux3.Overlay",
            "documentation": "Thing Inspector"
        },
        "ThingViewer": {
            "attributes": [{
                "name": "title",
                "documentation": "Title of the Thing Inspector"
            }, {
                "name": "type",
                "documentation": "Thing type"
            }, {
                "name": "icon",
                "documentation": "Thing Icon Url"
            }, {
                "name": "subtitle",
                "documentation": "Subtitle of the Thing Inspector"
            }, {
                "name": "width",
                "documentation": "Width of the ThingViewer"
            }, {
                "name": "height",
                "documentation": "Height of the ThingViewer"
            }, {
                "name": "headerType",
                "documentation": "Defines which header type should be used."
            }, {
                "name": "selectedFacet",
                "documentation": "The Facet that is currently selected."
            }, {
                "name": "facetSelected",
                "documentation": "Event for facet selection. The application is responsible for displaying the correct content for the selected one. The ThingInspector will currently always mark the first facet as selected."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "ThingViewer: Same as ThingInspector but decoupled from the Overlay and the ActionBar.\nThe control can be added to a Parent container that has a defined width. The ThingViewer fill the whole container. If the parent container has no width defined the control will not work properly."
        },
        "ToolPopup": {
            "attributes": [{
                "name": "title",
                "documentation": "Determines the title displayed in the pop up window"
            }, {
                "name": "icon",
                "documentation": "This property is relevant for Shell use:\nThe URL to the icon displayed in the tool area which is used to open the ToolPopup.\nThe recommended size is 32x32px, including some transparent border. Therefore,\nthe content will cover about 20x20px."
            }, {
                "name": "iconHover",
                "documentation": "This property is relevant for Shell use:\nThe URL to the icon in hover state, displayed in the tool area which is used to open the popup."
            }, {
                "name": "iconSelected",
                "documentation": "This property is relevant for Shell use:\nThe URL to the icon in selected state displayed in the tool area which is used to open the popup.\nIf no selected icon is given, the hover icon is used."
            }, {
                "name": "modal",
                "documentation": "Specifies whether the popup is modal and blocks any user-interaction with controls in the background.\nChanging this property while the ToolPopup is open will not have any effect.\nPlease don't use \"modal\" and \"autoclose\" at the same time. In this case a warning will\nbe prompted to the console and \"autoclose\" won't be used."
            }, {
                "name": "inverted",
                "documentation": "Specifies whether the ToolPopup has a dark or bright background. If set to true\nthe background and borders will be dark. If false they will be bright.\nThis property only has an effect for the GoldReflection-theme."
            }, {
                "name": "autoClose",
                "documentation": "Determines whether the ToolPopup will auto close when it loses focus.\nIf the user e.g. clicks outside of the ToolPopup it will be closed.\nPlease don't use \"modal\" and \"autoclose\" at the same time.\nIn this case a warning will be prompted to the console and \"autoclose\" won't be used."
            }, {
                "name": "maxHeight",
                "documentation": "Forces a maximum height of the ToolPopup in pixels. If the ToolPopup content\nis higher than the ToolPopup, the content will be scrollable."
            }, {
                "name": "maxWidth",
                "documentation": "Forces a maximum width of the ToolPopup in pixels."
            }, {
                "name": "openDuration",
                "documentation": "Time in milliseconds for the open animation."
            }, {
                "name": "closeDuration",
                "documentation": "Time in milliseconds for the close animation."
            }, {
                "name": "initialFocus",
                "documentation": "Defines the control that will get the focus when the ToolPopup is opened."
            }, {
                "name": "opener",
                "documentation": "This property is relevant for stand-alone use:\nThis association needs to be set if the ToolPopup should not be opened by/with\nthe Shell. This association contains the instance of the control that\nassigns the ToolPopup's position."
            }, {
                "name": "defaultButton",
                "documentation": "Defines one of the buttons that have been provided via button aggregation to be\nthe default button. This default button is initially selected, if no control\nis set via the initialFocus association explicitly. The default button is activated\nwhen Enter is pressed in the context of the dialog and when the currently selected element\ndoes not handle the Enter event itself."
            }, {
                "name": "open",
                "documentation": "Event is fired when the popup opens"
            }, {
                "name": "close",
                "documentation": "Event is fired when the popup closes because the user pressed Escape or the ToolPopup\nButton in the Shell. This is called before the closing animation."
            }, {
                "name": "enter",
                "documentation": "Event is fired whenever the user clicks the Enter or the Enter key inside the pop up"
            }, {
                "name": "iconChanged",
                "documentation": "Event is fired when one of the icon properties is modified (Note: The icon is not\nrendered by the ToolPopup).\nTo be used by other controls which want to update the icon in their UI."
            }, {
                "name": "closed",
                "documentation": "This event is fired after the ToolPopup has finished its closing animation.\nIt is called for EVERY close, regardless of whether the user has triggered the\nclose or whether the ToolPopup was closed via API call."
            }, {
                "name": "opened",
                "documentation": "Event is being fired after the ToolPopup has been opened."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A popup which the user can open from the Shell's tool pane. Generally, the starting point would be an icon.\nFor this pop up, buttons can be defined with any text; therefore, it has the same purpose\nand similar look like any common dialog box.\nA ToolPopup can have any content. Depending on the application type and design, the structure\nof the texts and input fields can be for example form-like."
        }
    },
    "sap.uxap": {
        "AnchorBar": {
            "attributes": [{
                "name": "showPopover",
                "documentation": "Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar."
            }, {
                "name": "upperCase",
                "documentation": "Determines whether the Anchor bar items are displayed in upper case."
            }, {
                "name": "selectedButton",
                "documentation": "The button that represents the Section being scrolled by the user."
            }, {
                "name": "width",
                "documentation": "Defines the width of the control.\nBy default, Toolbar is a block element. If the width is not explicitly set, the control will assume its natural size."
            }, {
                "name": "active",
                "documentation": "Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive."
            }, {
                "name": "enabled",
                "documentation": "Sets the enabled property of all controls defined in the content aggregation.\nNote: This property does not apply to the toolbar itself, but rather to its items."
            }, {
                "name": "height",
                "documentation": "Defines the height of the control. By default, the height\nproperty depends on the used theme and the design property. Note: It is not recommended to use this property if the\nsapMTBHeader-CTX class is used"
            }, {
                "name": "design",
                "documentation": "Defines the toolbar design. Note: Design settings are theme-dependent. They also determine the default height of the toolbar."
            }, {
                "name": "style",
                "documentation": "Defines the visual style of the Toolbar. Note: The visual styles are theme-dependent."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks on the toolbar, if the Active property is set to \"true\"."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Toolbar",
            "documentation": "Displays the titles of the sections and subsections in the sap.uxap.ObjectPageLayout ObjectPageLayout\nand allows the user to scroll to the respective content. Overview The AnchorBar is internally generated as a menu in the ObjectPageLayout.\nIt displays the sections and subsections and allows the user to directly scroll to the respective\ncontent by selecting them, while it remains visible at the top of the page (below the page header)."
        },
        "BlockBase": {
            "attributes": [{
                "name": "mode",
                "documentation": "Determines the mode of the block.\nWhen block is used inside ObjectPage this mode is inherited my the SubSection.\nThe mode of the block is changed when SubSection mode changes."
            }, {
                "name": "columnLayout",
                "documentation": "Determines on how many columns the layout will be rendered.\nAllowed values are integers from 1 to 4 and \"auto\"."
            }, {
                "name": "formAdjustment",
                "documentation": "Determines if the block should automatically adjust its inner forms.\nAllowed values are \"BlockColumns\" and \"OneColumn\" and \"None\".\nIf the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block.\nIf the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block.\nIf the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count."
            }, {
                "name": "showSubSectionMore",
                "documentation": "Determines whether the show more button should be shown. Note: The property will take effect if the BlockBase is inside \nand would be ignored in case the BlockBase is nested inside another BlockBase."
            }, {
                "name": "selectedView",
                "documentation": "The view that is rendered now.\nCan be used as getter for the rendered view."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The main element that holds the content that is displayed in an sap.uxap.ObjectPageLayout ObjectPageLayout, but not necessarily only there. Overview The blocks give the flexibility to combine different content types. A block is a control that:\n\nHas modes and a view associated to each mode. At rendering time, the view associated to the mode is rendered.\nCan use all view types for storing its internal control tree (XML, JS, JSON, HTML)\n As any UI5 view, the XML view can have a controller which automatically comes with a\nthis.oParentBlock attribute (so that the controller can interact with the block).\nIf the controller implements the onParentBlockModeChange method, this method will\nbe called with the sMode parameter when the view is used or reused by the block."
        },
        "BreadCrumbs": {
            "attributes": [{
                "name": "showCurrentLocation",
                "documentation": "Sets the visibility of the current/last element in the BreadCrumbs path."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Represents the navigation steps up to the current location in the app. Overview The BreadCrumbs control allows the users to quickly navigate to a previous\nlocation on the path that got them to the current location by choosing the displayed\nnavigation steps. It has two main modes of operation:\n\nA trail of links followed by separators, when there's enough space for the control to fit on one line.\nA dropdown list with the links, when the trail of links wouldn't fit on one line.\n"
        },
        "HierarchicalSelect": {
            "attributes": [{
                "name": "upperCase",
                "documentation": "Determines whether the HierarchicalSelect items are displayed in upper case."
            }, {
                "name": "name",
                "documentation": "The name to be used in the HTML code (for example, for HTML forms that send data to the server via submit)."
            }, {
                "name": "enabled",
                "documentation": "Indicates whether the user can change the selection."
            }, {
                "name": "width",
                "documentation": "Sets the width of the field. By default, the field width is automatically adjusted to the size\nof its content and the default width of the field is calculated based on the widest list item\nin the dropdown list.\nIf the width defined is smaller than its content, only the field width is changed whereas\nthe dropdown list keeps the width of its content.\nIf the dropdown list is wider than the visual viewport, it is truncated and an ellipsis is displayed\nfor each item.\nFor phones, the width of the dropdown list is always the same as the viewport. Note: This property is ignored if the autoAdjustWidth property is set to true."
            }, {
                "name": "maxWidth",
                "documentation": "Sets the maximum width of the control. Note: This property is ignored if the autoAdjustWidth property is set to true."
            }, {
                "name": "selectedKey",
                "documentation": "Key of the selected item. Note: If duplicate keys exist, the first item matching the key is used."
            }, {
                "name": "selectedItemId",
                "documentation": "ID of the selected item."
            }, {
                "name": "icon",
                "documentation": "The URI to the icon that will be displayed only when using the IconOnly type."
            }, {
                "name": "type",
                "documentation": "Type of a select. Possible values Default, IconOnly."
            }, {
                "name": "autoAdjustWidth",
                "documentation": "Indicates whether the width of the input field is determined by the selected item's content."
            }, {
                "name": "textAlign",
                "documentation": "Sets the horizontal alignment of the text within the input field."
            }, {
                "name": "textDirection",
                "documentation": "Specifies the direction of the text within the input field with enumerated options.\nBy default, the control inherits text direction from the DOM."
            }, {
                "name": "valueState",
                "documentation": "Visualizes the validation state of the control, e.g. Error, Warning,\nSuccess."
            }, {
                "name": "valueStateText",
                "documentation": "Defines the text of the value state message popup.\nIf this is not specified, a default text is shown from the resource bundle."
            }, {
                "name": "showSecondaryValues",
                "documentation": "Indicates whether the text values of the additionalText property of a sap.ui.core.ListItem are shown."
            }, {
                "name": "forceSelection",
                "documentation": "Indicates whether the selection is restricted to one of the items in the list.\nNote: We strongly recommend that you always set this property to false and bind\nthe selectedKey property to the desired value for better interoperability with data binding."
            }, {
                "name": "selectedItem",
                "documentation": "Sets or retrieves the selected item from the aggregation named items."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "change",
                "documentation": "This event is fired when the value in the selection field is changed in combination with one of\nthe following actions:\n The focus leaves the selection field The Enter key is pressed The item is pressed\n"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Select",
            "documentation": "A select that displays items on a hierarchy of 2 levels. If a provided item has a custom data named secondLevel, then it will be displayed as a second level,\notherwise it would be displayed as a first level."
        },
        "ModelMapping": {
            "attributes": [{
                "name": "externalModelName",
                "documentation": "Determines the external model name."
            }, {
                "name": "internalModelName",
                "documentation": "Determines the internal model name."
            }, {
                "name": "externalPath",
                "documentation": "Determines the external path."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "Defines the entity that will be passed to the sap.uxap.ObjectPageLayout."
        },
        "ObjectPageDynamicHeaderContent": {
            "attributes": [],
            "extendsElement": "",
            "documentation": "Header content for the dynamic header of the sap.uxap.ObjectPageLayout. Overview The ObjectPageDynamicHeaderContent represents the movable part of\nthe ObjectPageLayout's dynamic header. It can contain any control and\nscrolls along with the content of the page until it disappears (collapsed header).\nWhen scrolled back to the top it becomes visible again (expanded header).\nIt contains all the additional information of the object. Documentation links:\n\n topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers\n topic:6e340c119ddd4c778b315f65a0432420 Object Page Dynamic Header\n"
        },
        "ObjectPageDynamicHeaderTitle": {
            "attributes": [],
            "extendsElement": "",
            "documentation": "Represents the static part (header title) of the dynamic header of the sap.uxap.ObjectPageLayout. Overview The ObjectPageDynamicHeaderTitle is used to represent the most important details of\nthe displayed business object, such as the object title and actions that the user can perform. Note: The ObjectPageDynamicHeaderTitle is meant to be used inside the ObjectPageLayout\ncontrol. Any other usage is not supported and can lead to unexpected behavior."
        },
        "ObjectPageHeader": {
            "attributes": [{
                "name": "objectImageURI",
                "documentation": "The URL of the image, representing the business object"
            }, {
                "name": "objectImageAlt",
                "documentation": "The text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property"
            }, {
                "name": "objectImageDensityAware",
                "documentation": "The value of densityAware for the image, supplied via the objectImageURI property.\nSee sap.m.Image for more details on densityAware."
            }, {
                "name": "objectTitle",
                "documentation": "The title of the object"
            }, {
                "name": "objectSubtitle",
                "documentation": "The description of the object"
            }, {
                "name": "objectImageShape",
                "documentation": "Determines whether the picture should be displayed in a square or with a circle-shaped mask."
            }, {
                "name": "isObjectIconAlwaysVisible",
                "documentation": "Determines whether the icon should always be visible or visible only when the header is snapped."
            }, {
                "name": "isObjectTitleAlwaysVisible",
                "documentation": "Determines whether the title should always be visible or visible only when the header is snapped."
            }, {
                "name": "isObjectSubtitleAlwaysVisible",
                "documentation": "Determines whether the subtitle should always be visible or visible only when the header is snapped."
            }, {
                "name": "isActionAreaAlwaysVisible",
                "documentation": "Determines whether the action buttons should always be visible or visible only when the header is snapped."
            }, {
                "name": "headerDesign",
                "documentation": "Determines the design of the header - Light or Dark.\nNote: This property is deprecated. It will continue to work in the Blue Crystal theme,\nbut it will not be taken into account for the Belize themes."
            }, {
                "name": "showTitleSelector",
                "documentation": "When set to true, the selector arrow icon/image is shown and can be pressed."
            }, {
                "name": "markFavorite",
                "documentation": "Set the favorite state to true or false. The showMarkers property must be true for this property to take effect."
            }, {
                "name": "markFlagged",
                "documentation": "Set the flagged state to true or false. The showMarkers property must be true for this property to take effect."
            }, {
                "name": "showMarkers",
                "documentation": "Indicates if object page header title supports showing markers such as flagged and favorite."
            }, {
                "name": "markLocked",
                "documentation": "Set the locked state of the objectPageHeader."
            }, {
                "name": "showPlaceholder",
                "documentation": "Enables support of a placeholder image in case no image is specified or the URL of the provided image is invalid."
            }, {
                "name": "markChanges",
                "documentation": "Marks that there are unsaved changes in the objectPageHeader.\nThe markChanges state cannot be used together with the markLocked state.\nIf both are set to true, only the locked state will be displayed."
            }, {
                "name": "titleSelectorPress",
                "documentation": "The event is fired when the objectPage header title selector (down-arrow) is pressed"
            }, {
                "name": "markLockedPress",
                "documentation": "The event is fired when the Locked button is pressed"
            }, {
                "name": "markChangesPress",
                "documentation": "The event is fired when the unsaved changes button is pressed"
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Represents the static part (header title) of the classic header of the sap.uxap.ObjectPageLayout. Overview The ObjectPageHeader is used to display the basic information about a business object,\nsuch as title/description/picture, as well as a list of common actions. Note: The ObjectPageHeader is meant to be used inside the ObjectPageLayout\ncontrol. Any other usage is not supported and can lead to unexpected behavior."
        },
        "ObjectPageHeaderActionButton": {
            "attributes": [{
                "name": "hideText",
                "documentation": "Hide the button text when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions."
            }, {
                "name": "hideIcon",
                "documentation": "Hide the button icon when rendered into the headerTitle part of the ObjectPageLayout.\nThis is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions."
            }, {
                "name": "importance",
                "documentation": "Determines the order in which the button overflows."
            }, {
                "name": "text",
                "documentation": "Determines the text of the Button."
            }, {
                "name": "type",
                "documentation": "Defines the Button type."
            }, {
                "name": "width",
                "documentation": "Defines the Button width."
            }, {
                "name": "enabled",
                "documentation": "Determines whether the Button is enabled (default is set to true).\nA disabled Button has different colors depending on the sap.m.ButtonType ButtonType."
            }, {
                "name": "icon",
                "documentation": "Defines the icon to be displayed as graphical element within the Button.\nIt can be an image or an icon from the icon font."
            }, {
                "name": "iconFirst",
                "documentation": "Determines whether the icon is displayed before the text."
            }, {
                "name": "activeIcon",
                "documentation": "The source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the icon property is not set or has a different type, the active icon is not displayed."
            }, {
                "name": "iconDensityAware",
                "documentation": "By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server. If only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image."
            }, {
                "name": "textDirection",
                "documentation": "This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM."
            }, {
                "name": "ariaDescribedBy",
                "documentation": "Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby)."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "tap",
                "documentation": "Fired when the user taps the control."
            }, {
                "name": "press",
                "documentation": "Fired when the user clicks or taps on the control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.m.Button",
            "documentation": "A Button that is used in the actions aggregation of the sap.uxap.ObjectPageHeader."
        },
        "ObjectPageHeaderContent": {
            "attributes": [{
                "name": "contentDesign",
                "documentation": "Determines the design of the header - Light or Dark.\nNote: This property is deprecated. It will continue to work in the Blue Crystal theme,\nbut it will not be taken into account for the Belize themes."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Header content for the classic header of the sap.uxap.ObjectPageLayout. Overview The ObjectPageHeaderContent represents the movable part of the\nObjectPageLayout's classic header. It can contain any control and scrolls along with\nthe content of the page until it disappears (collapsed header). When scrolled back to the\ntop it becomes visible again (expanded header). It contains all the additional information of the object. Documentation links:\n\n topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers\n topic:0fecbce45e39406aa939bd25e89823f4 Object Page Classic Header\n"
        },
        "ObjectPageHeaderLayoutData": {
            "attributes": [{
                "name": "visibleS",
                "documentation": "If this property is set the control will be visible (or not) in a small sized layout."
            }, {
                "name": "visibleM",
                "documentation": "If this property is set the control will be visible (or not) in a medium sized layout."
            }, {
                "name": "visibleL",
                "documentation": "If this property is set the control will be visible (or not) in a large sized layout."
            }, {
                "name": "showSeparatorBefore",
                "documentation": "If this property is set the control will display a separator before it."
            }, {
                "name": "showSeparatorAfter",
                "documentation": "If this property is set the control will display a separator after it."
            }, {
                "name": "width",
                "documentation": "If this property is set the control will take the provided size."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "A sap.ui.core.LayoutData element that can be added to controls used in the\nheaderContent aggregation of the ObjectPageLayout. Note: This element is only taken into account when the sap.uxap.ObjectPageLayout control is used together with\nsap.uxap.ObjectPageHeader as value of headerTitle."
        },
        "ObjectPageLayout": {
            "attributes": [{
                "name": "showAnchorBar",
                "documentation": "Determines whether the Navigation bar (Anchor bar) is displayed."
            }, {
                "name": "showAnchorBarPopover",
                "documentation": "Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar."
            }, {
                "name": "upperCaseAnchorBar",
                "documentation": "Determines whether the Anchor bar items are displayed in upper case."
            }, {
                "name": "height",
                "documentation": "Determines the height of the ObjectPage."
            }, {
                "name": "enableLazyLoading",
                "documentation": "Enable lazy loading for the Object page Subsections."
            }, {
                "name": "subSectionLayout",
                "documentation": "Determines whether Subsection titles are displayed on top or to the left of the Subsection content."
            }, {
                "name": "sectionTitleLevel",
                "documentation": "Determines the ARIA level of the ObjectPageSection and ObjectPageSubSection titles.\nThe ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation. Note:\n\nDefining a sectionTitleLevel will add aria-level attribute from 1 to 6\ninstead of changing the titles` HTML tag from H1 to H6.\nFor example: if sectionTitleLevel is TitleLevel.H1,\nit will result as aria-level of 1 added to the ObjectPageSection title.\n  The ObjectPageSubSection title\nwould have aria-level one level lower than the defined.\nFor example: if sectionTitleLevel is TitleLevel.H1,\nit will result as aria-level of 2 added to the ObjectPageSubSection title.  It is possible to define a titleLevel on ObjectPageSection or ObjectPageSubSection level.\nIn this case the value of this property will be ignored.\n\n"
            }, {
                "name": "useIconTabBar",
                "documentation": "Use tab navigation mode instead of the default Anchor bar mode.\nNote: Keep in mind that the sap.m.IconTabBar control is no longer used for the tab navigation mode."
            }, {
                "name": "showHeaderContent",
                "documentation": "Determines the visibility of the Header content (headerContent aggregation)."
            }, {
                "name": "useTwoColumnsForLargeScreen",
                "documentation": "Determines whether the to use two column layout for the L screen size."
            }, {
                "name": "showTitleInHeaderContent",
                "documentation": "Determines whether the title, image, markers and selectTitleArrow are shown in the Header content area. Note: This property is only taken into account if an instance of\nsap.uxap.ObjectPageHeader is used for the headerTitle aggregation."
            }, {
                "name": "showOnlyHighImportance",
                "documentation": "Determines whether sections and subsections with importance Low and Medium are hidden even on large screens."
            }, {
                "name": "isChildPage",
                "documentation": "Determines whether the page is a child page and renders it with a different design.\nChild pages have an additional (darker/lighter) stripe on the left side of their header content area. Note: This property is only taken into account if an instance of\nsap.uxap.ObjectPageHeader is used for the headerTitle aggregation."
            }, {
                "name": "alwaysShowContentHeader",
                "documentation": "Determines whether Header Content will always be expanded on desktop. Note: This property is only taken into account if an instance of\nsap.uxap.ObjectPageHeader is used for the headerTitle aggregation."
            }, {
                "name": "headerContentPinnable",
                "documentation": "Determines whether the Header Content area can be pinned. When set to true, a pin button is displayed within the Header Content area.\nThe pin button allows the user to make the Header Content always visible\nat the top of the page above any scrollable content. Note: This property is only taken into account if an instance of\nsap.uxap.ObjectPageDynamicHeaderTitle is used for the headerTitle aggregation."
            }, {
                "name": "toggleHeaderOnTitleClick",
                "documentation": "Determines whether the user can switch between the expanded/collapsed states of the\nsap.uxap.ObjectPageDynamicHeaderContent by clicking on the sap.uxap.ObjectPageDynamicHeaderTitle.\nIf set to false, the sap.uxap.ObjectPageDynamicHeaderTitle is not clickable and the application\nmust provide other means for expanding/collapsing the sap.uxap.ObjectPageDynamicHeaderContent, if necessary. Note: This property is only taken into account if an instance of\nsap.uxap.ObjectPageDynamicHeaderTitle is used for the headerTitle aggregation."
            }, {
                "name": "preserveHeaderStateOnScroll",
                "documentation": "Preserves the current header state when scrolling.\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded. Notes:\nThis property is only taken into account if an instance of sap.uxap.ObjectPageDynamicHeaderTitle is used for the headerTitle aggregation.\nBased on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the control`s title and header\nare with height larger than the given threshold."
            }, {
                "name": "showEditHeaderButton",
                "documentation": "Determines whether an Edit button will be displayed in Header Content. Note: This property is only taken into account if an instance of\nsap.uxap.ObjectPageHeader is used for the headerTitle aggregation."
            }, {
                "name": "flexEnabled",
                "documentation": "Specifies whether the object page enables flexibility features, such as hiding and adding sections.\nFor more information about SAPUI5 flexibility, refer to the Developer Guide."
            }, {
                "name": "showFooter",
                "documentation": "Determines whether the footer is visible."
            }, {
                "name": "selectedSection",
                "documentation": "The section that is selected by default on load."
            }, {
                "name": "toggleAnchorBar",
                "documentation": "The event is fired when the Anchor bar is switched from moving to fixed or the other way round."
            }, {
                "name": "editHeaderButtonPress",
                "documentation": "The event is fired when the Edit Header button is pressed"
            }, {
                "name": "navigate",
                "documentation": "The event is fired when the selected section is changed using the navigation."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A layout that allows apps to easily display information related to a business object. Overview The ObjectPageLayout layout is composed of a header (title and content),\nan optional anchor bar and block content wrapped in sections and subsections that\nstructure the information. Structure An ObjectPageLayout control is used to put together all parts of an Object page\n- Header, optional Anchor Bar and Sections/Subsections. Header\nThe ObjectPageLayout implements the snapping header concept. This means that\nthe upper part of the header (Header Title) always stays visible, while the lower part\n(Header Content) can scroll out of view. Header Title is displayed at the top of the header and always remains visible above the\nscrollable content of the page. It contains the title and most prominent details of the object. The Header Content scrolls along with the content of the page until it disappears (collapsed header).\nWhen scrolled back to the top it becomes visible again (expanded header). It contains all the\nadditional information of the object. Anchor Bar\nThe Anchor Bar is an automatically generated internal menu that shows the titles of the sections\nand subsections and allows the user to scroll to the respective section and subsection content. Sections, Subsections, Blocks\nThe content of the page that appears bellow the header is composed of blocks structured into\nsections and subsections. Usage\nUse the ObjectPageLayout if:\n\nThe users need to see, edit, or create an item with all its details.\nUsers need to get an overview of an object and interact with different parts of the object.\n Responsive behavior The ObjectPageLayout is responsive and adapts to all screen sizes."
        },
        "ObjectPageLazyLoader": {
            "attributes": [],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "A helper element that enables a \"stashed-based\" lazy loading approach for the content of\nthe sap.uxap.ObjectPageSubSection control. ObjectPageLazyLoader is intended to be used in a declarative way only\n(for example, in a view) with the stashed property set to true,\nand is recommended to be used only once per subsection as its sole content. ObjectPageLazyLoader utilizes UI5's stashing mechanism and is a lightweight\nalternative to the native block-based Lazy Loading of the ObjectPageLayout.\nWrapping the content of a subsection in an ObjectPageLazyLoader with\nstashed=true will make the content unstash automatically as the user scrolls. Note: Subsections are required to have an ID when used with ObjectPageLazyLoader."
        },
        "ObjectPageSection": {
            "attributes": [{
                "name": "showTitle",
                "documentation": "Determines whether to display the Section title or not."
            }, {
                "name": "titleUppercase",
                "documentation": "Determines whether the Section title is displayed in upper case."
            }, {
                "name": "selectedSubSection",
                "documentation": "The most recently selected Subsection by the user."
            }, {
                "name": "title",
                "documentation": "Section Title"
            }, {
                "name": "titleLevel",
                "documentation": "Determines the ARIA level of the ObjectPageSectionBase title.\nThe ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation. Note: Defining a titleLevel will add aria-level attribute from 1 to 6,\ninstead of changing the ObjectPageSectionBase title HTML tag from H1 to H6.\nFor example: if titleLevel is TitleLevel.H1,\nit will result as aria-level of 1 added to the ObjectPageSectionBase title."
            }, {
                "name": "importance",
                "documentation": "Determines whether the section will be hidden on low resolutions."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.uxap.ObjectPageSectionBase",
            "documentation": "Top-level information container of an sap.uxap.ObjectPageLayout. The ObjectPageSection's purpose is to aggregate subsections. Note: This control is intended to be used only as part of the ObjectPageLayout."
        },
        "ObjectPageSectionBase": {
            "attributes": [{
                "name": "title",
                "documentation": "Section Title"
            }, {
                "name": "titleLevel",
                "documentation": "Determines the ARIA level of the ObjectPageSectionBase title.\nThe ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation. Note: Defining a titleLevel will add aria-level attribute from 1 to 6,\ninstead of changing the ObjectPageSectionBase title HTML tag from H1 to H6.\nFor example: if titleLevel is TitleLevel.H1,\nit will result as aria-level of 1 added to the ObjectPageSectionBase title."
            }, {
                "name": "importance",
                "documentation": "Determines whether the section will be hidden on low resolutions."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "An abstract container for sections and subsections in the sap.uxap.ObjectPageLayout."
        },
        "ObjectPageSubSection": {
            "attributes": [{
                "name": "mode",
                "documentation": "A mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks."
            }, {
                "name": "titleUppercase",
                "documentation": "Determines whether the Subsection title is displayed in upper case."
            }, {
                "name": "title",
                "documentation": "Section Title"
            }, {
                "name": "titleLevel",
                "documentation": "Determines the ARIA level of the ObjectPageSectionBase title.\nThe ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation. Note: Defining a titleLevel will add aria-level attribute from 1 to 6,\ninstead of changing the ObjectPageSectionBase title HTML tag from H1 to H6.\nFor example: if titleLevel is TitleLevel.H1,\nit will result as aria-level of 1 added to the ObjectPageSectionBase title."
            }, {
                "name": "importance",
                "documentation": "Determines whether the section will be hidden on low resolutions."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.uxap.ObjectPageSectionBase",
            "documentation": "Second-level information container of an sap.uxap.ObjectPageLayout. An ObjectPageSubSection may only be used within sections in the\nObjectPageLayout. Subsections are used to display primary information in\nthe blocks aggregation (always visible) and not-so-important information in\nthe moreBlocks aggregation. The content in the moreBlocks\naggregation is initially hidden, but may be accessed with a \"See more\" (...) button. Note: This control is intended to be used only as part of the ObjectPageLayout."
        }
    },
    "sap.ui.layout.form": {
        "Form": {
            "attributes": [{
                "name": "width",
                "documentation": "Width of the Form."
            }, {
                "name": "editable",
                "documentation": "Applies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content.\nIf set, all (not only the editable) rows of the form will get the line height of editable fields. Note: The setting of the property has no influence on the editable functionality of the form's content."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "A Form control arranges labels and fields (like input fields) into groups and rows.\nThere are different ways to visualize forms for different screen sizes. A Form is structured into FormContainers. Each FormContainer consists of FormElements.\nThe FormElements consists of a label and the form fields.\nA Form doesn't render its content by itself. The rendering is done by the assigned FormLayout.\nThis is so that the rendering can be adopted to new UI requirements without changing the Form itself. For the content of a Form, VariantLayoutData are supported to allow simple switching of the FormLayout.\nLayoutData on the content can be used to overwrite the default layout of the Form. The Form (and its sub-controls) automatically add label and field assignment to enable screen reader support.\nIt also adds keyboard support to navigate between the fields and groups inside the form. Warning: Do not put any layout or other container controls into the FormElement.\nViews are also not supported. This could damage the visual layout, keyboard support and screen-reader support. If editable controls are used as content, the editable property must be set to true,\notherwise to false. If the editable property is set incorrectly, there will be visual issues\nlike wrong label alignment or wrong spacing between the controls."
        },
        "FormContainer": {
            "attributes": [{
                "name": "expanded",
                "documentation": "Container is expanded. Note: This property only works if expandable is set to true."
            }, {
                "name": "expandable",
                "documentation": "Defines if the FormContainer is expandable. Note: The expander icon will only be shown if a title is set for the FormContainer."
            }, {
                "name": "visible",
                "documentation": "If set to false, the FormContainer is not rendered."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby). Note: This attribute is only rendered if the FormContainer has it's own\nDOM representation in the used FormLayout."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "A FormContainer represents a group inside a Form. It consists of FormElements.\nThe rendering of the FormContainer is done by the FormLayout assigned to the Form."
        },
        "FormElement": {
            "attributes": [{
                "name": "visible",
                "documentation": "If set to false, the FormElement is not rendered."
            }],
            "extendsElement": "sap.ui.core.Element",
            "documentation": "A FormElement represents a row in a FormContainer.\nA FormElement is a combination of one label and different controls associated to this label."
        },
        "FormLayout": {
            "attributes": [{
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the Form content. Note: The visualization of the different options depends on the theme used."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "Base layout to render a Form.\nOther layouts to render a Form must inherit from this one. Note: This control must not be used to render a Form in productive applications as it does not fulfill any\ndesign guidelines and usability standards."
        },
        "GridContainerData": {
            "attributes": [{
                "name": "halfGrid",
                "documentation": "If set, the container takes half the width of the Form (8 cells), if not it takes the full width (16 cells).\nIf the GridLayout is set to singleColumn, the full width of the grid is only 8 cells. So containers are rendered only once per row."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "The GridLayout-specific layout data for FormContainers."
        },
        "GridElementData": {
            "attributes": [{
                "name": "hCells",
                "documentation": "Number of cells in horizontal direction. If set to auto, the size is determined by the number of fields and the available cells. For labels the auto size is 3 cells. If set to full, only one field is allowed within the FormElement. It gets the full width of the row and the label is displayed above. Note: For labels, the full size setting has no effect."
            }, {
                "name": "vCells",
                "documentation": "Number of cells in vertical direction. Note: This property has no effect on labels."
            }],
            "extendsElement": "sap.ui.core.LayoutData",
            "documentation": "The GridLayout-specific layout data for FormElement fields."
        },
        "GridLayout": {
            "attributes": [{
                "name": "singleColumn",
                "documentation": "If set, the grid renders only one FormContainer per column. That means one FormContainer is below the other. The whole grid has 8 cells per row. If not set, FormContainer can use the full width of the grid or two FormContainers can be placed beside each other. In this case the whole grid has 16 cells per row."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the Form content. Note: The visualization of the different options depends on the theme used."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.FormLayout",
            "documentation": "This FormLayout renders a Form using an HTML-table based grid.\nThis can be a 16 column grid or an 8 column grid. The grid is stable, so the alignment of the fields is the same for all screen sizes or widths of the Form.\nOnly the width of the single grid columns depends on the available width. To adjust the appearance inside the GridLayout, you can use GridContainerData for FormContainers\nand GridElementData for content fields. Note: If content fields have a width property this will be ignored, as the width of the controls is set by the grid cells. This control cannot be used stand-alone, it just renders a Form, so it must be assigned to a Form using the layout aggregation."
        },
        "ResponsiveGridLayout": {
            "attributes": [{
                "name": "labelSpanXL",
                "documentation": "Default span for labels in extra large size. Note: If the default value -1 is not overwritten with the meaningful one then the labelSpanL value is used."
            }, {
                "name": "labelSpanL",
                "documentation": "Default span for labels in large size. Note: If adjustLabelSpanThis is set, this property is only used if more than 1 FormContainer is in one line. If only 1 FormContainer is in the line, then the labelSpanM value is used."
            }, {
                "name": "labelSpanM",
                "documentation": "Default span for labels in medium size. Note: If adjustLabelSpanThis is set this property is used for full-size FormContainers. If more than one FormContainer is in one line, labelSpanL is used."
            }, {
                "name": "labelSpanS",
                "documentation": "Default span for labels in small size."
            }, {
                "name": "adjustLabelSpan",
                "documentation": "If set, the usage of labelSpanL and labelSpanM are dependent on the number of FormContainers in one row.\nIf only one FormContainer is displayed in one row, labelSpanM is used to define the size of the label.\nThis is the same for medium and large Forms.\nThis is done to align the labels on forms where full-size FormContainers and multiple-column rows are used in the same Form\n(because every FormContainer has its own Grid inside). If not set, the usage of labelSpanL and labelSpanM are dependent on the Form size.\nThe number of FormContainers doesn't matter in this case."
            }, {
                "name": "emptySpanXL",
                "documentation": "Number of grid cells that are empty at the end of each line on extra large size. Note: If the default value -1 is not overwritten with the meaningful one then the emptySpanL value is used."
            }, {
                "name": "emptySpanL",
                "documentation": "Number of grid cells that are empty at the end of each line on large size."
            }, {
                "name": "emptySpanM",
                "documentation": "Number of grid cells that are empty at the end of each line on medium size."
            }, {
                "name": "emptySpanS",
                "documentation": "Number of grid cells that are empty at the end of each line on small size."
            }, {
                "name": "columnsXL",
                "documentation": "Number of columns for extra large size. The number of columns for extra large size must not be smaller than the number of columns for large size.\nNote: If the default value -1 is not overwritten with the meaningful one then the columnsL value is used (from the backward compatibility reasons)."
            }, {
                "name": "columnsL",
                "documentation": "Number of columns for large size. The number of columns for large size must not be smaller than the number of columns for medium size."
            }, {
                "name": "columnsM",
                "documentation": "Number of columns for medium size."
            }, {
                "name": "singleContainerFullSize",
                "documentation": "If the Form contains only one single FormContainer and this property is set,\nthe FormContainer is displayed using the full size of the Form.\nIn this case the properties columnsXL, columnsL and columnsM are ignored. In all other cases the FormContainer is displayed in the size of one column."
            }, {
                "name": "breakpointXL",
                "documentation": "Breakpoint (in pixel) between large size and extra large (XL) size."
            }, {
                "name": "breakpointL",
                "documentation": "Breakpoint (in pixel) between Medium size and Large size."
            }, {
                "name": "breakpointM",
                "documentation": "Breakpoint (in pixel) between Small size and Medium size."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the Form content. Note: The visualization of the different options depends on the theme used."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.FormLayout",
            "documentation": "The ResponsiveGridLayout control renders a Form using a responsive grid. Internally the Grid control is used for rendering.\nUsing this layout, the Form is rendered in a responsive way.\nDepending on the available space, the FormContainers are rendered in one or different columns and the labels are rendered in the same row as the fields or above the fields.\nThis behavior can be influenced by the properties of this layout control. On the FormContainers, labels and content fields, GridData can be used to change the default rendering.\nGridData is not supported for FormElements. Note: If GridData is used, this may result in a much more complex layout than the default one.\nThis means that in some cases, the calculation for the other content may not bring the expected result.\nIn such cases, GridData should be used for all content controls to disable the default behavior. This control cannot be used stand-alone, it just renders a Form, so it must be assigned to a Form using the layout aggregation."
        },
        "ResponsiveLayout": {
            "attributes": [{
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the Form content. Note: The visualization of the different options depends on the theme used."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.layout.FormLayout",
            "documentation": "The ResponsiveLayout renders a Form with a responsive layout. Internally the ResponsiveFlowLayout is used.\nThe responsiveness of this layout tries to best use the available space. This means that the order of the FormContainers, labels and fields depends on the available space. On the FormContainers, FormElements, labels and content fields, ResponsiveFlowLayoutData can be used to change the default rendering. We suggest using the ResponsiveGridLayout instead of this layout because this is easier to consume and brings more stable responsive output. Note: If ResponsiveFlowLayoutData are used this may result in a much more complex layout than the default one. This means that in some cases, the calculation for the other content may not bring the expected result.\nIn such cases, ResponsiveFlowLayoutData should be used for all content controls to disable the default behavior. This control cannot be used stand-alone, it just renders a Form, so it must be assigned to a Form using the layout aggregation."
        },
        "SimpleForm": {
            "attributes": [{
                "name": "maxContainerCols",
                "documentation": "The maximum amount of groups (FormContainers) per row that is used before a new row is started. Note: If a ResponsiveGridLayout is used as a layout, this property is not used.\nPlease use the properties ColumnsL and ColumnsM in this case."
            }, {
                "name": "minWidth",
                "documentation": "The overall minimum width in pixels that is used for the SimpleForm. If the available width is below the given minWidth the SimpleForm will create a new row for the next group (FormContainer).\nThe default value is -1, meaning that inner groups (FormContainers) will be stacked until maxContainerCols is reached,\nirrespective of whether a width is reached or the available parents width is reached. Note: This property is only used if a ResponsiveLayout is used as a layout."
            }, {
                "name": "width",
                "documentation": "Width of the form."
            }, {
                "name": "editable",
                "documentation": "Applies a device-specific and theme-specific line height and label alignment to the form rows if the form has editable content.\nIf set, all (not only the editable) rows of the form will get the line height of editable fields. Note: The setting of the property has no influence on the editable functionality of the form's content."
            }, {
                "name": "labelMinWidth",
                "documentation": "Specifies the min-width in pixels of the label in all form rows. Note: This property is only used if a ResponsiveLayout is used as a layout."
            }, {
                "name": "layout",
                "documentation": "The FormLayout that is used to render the SimpleForm. We recommend using the ResponsiveGridLayout for rendering a SimpleForm,\nas its responsiveness uses the space available in the best way possible. Note If possible, set the layout before adding content to prevent calculations for the default layout."
            }, {
                "name": "labelSpanXL",
                "documentation": "Default span for labels in extra large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout.\nIf the default value -1 is not overwritten with the meaningful one then the labelSpanL value is used (from the backward compatibility reasons)."
            }, {
                "name": "labelSpanL",
                "documentation": "Default span for labels in large size. Note: If adjustLabelSpanThis is set, this property is only used if more than 1 FormContainer is in one line.\nIf only 1 FormContainer is in the line, then the labelSpanM value is used. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "labelSpanM",
                "documentation": "Default span for labels in medium size. Note: If adjustLabelSpanThis is set, this property is used for full-size FormContainers.\nIf more than one FormContainer is in one line, labelSpanL is used. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "labelSpanS",
                "documentation": "Default span for labels in small size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "adjustLabelSpan",
                "documentation": "If set, the usage of labelSpanL and labelSpanM are dependent on the number of FormContainers in one row.\nIf only one FormContainer is displayed in one row, labelSpanM is used to define the size of the label.\nThis is the same for medium and large Forms.\nThis is done to align the labels on forms where full-size FormContainers and multiple-column rows are used in the same Form\n(because every FormContainer has its own grid inside). If not set, the usage of labelSpanL and labelSpanM are dependent on the Form size.\nThe number of FormContainers doesn't matter in this case. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "emptySpanXL",
                "documentation": "Number of grid cells that are empty at the end of each line on extra large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout.\nIf the default value -1 is not overwritten with the meaningful one then the emptySpanL value is used (from the backward compatibility reasons)."
            }, {
                "name": "emptySpanL",
                "documentation": "Number of grid cells that are empty at the end of each line on large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "emptySpanM",
                "documentation": "Number of grid cells that are empty at the end of each line on medium size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "emptySpanS",
                "documentation": "Number of grid cells that are empty at the end of each line on small size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "columnsXL",
                "documentation": "Form columns for extra large size.\nThe number of columns for extra large size must not be smaller than the number of columns for large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout.\nIf the default value -1 is not overwritten with the meaningful one then the columnsL value is used (from the backward compatibility reasons)."
            }, {
                "name": "columnsL",
                "documentation": "Form columns for large size.\nThe number of columns for large size must not be smaller than the number of columns for medium size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "columnsM",
                "documentation": "Form columns for medium size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "singleContainerFullSize",
                "documentation": "If the Form contains only one single FormContainer and this property is set,\nthe FormContainer is displayed using the full size of the Form.\nIn this case the properties columnsL and columnsM are ignored. In all other cases the FormContainer is displayed in the size of one column. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "breakpointXL",
                "documentation": "Breakpoint between Medium size and Large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "breakpointL",
                "documentation": "Breakpoint between Medium size and Large size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "breakpointM",
                "documentation": "Breakpoint between Small size and Medium size. Note: This property is only used if a ResponsiveGridLayout is used as a layout."
            }, {
                "name": "backgroundDesign",
                "documentation": "Specifies the background color of the SimpleForm content. The visualization of the different options depends on the used theme."
            }, {
                "name": "ariaLabelledBy",
                "documentation": "Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby)."
            }, {
                "name": "busy",
                "documentation": "Whether the control is currently in busy state."
            }, {
                "name": "busyIndicatorDelay",
                "documentation": "The delay in milliseconds, after which the busy indicator will show up for this control."
            }, {
                "name": "busyIndicatorSize",
                "documentation": "The size of the BusyIndicator. For controls with a width smaller 3rem a\nsap.ui.core.BusyIndicatorSize.Small should be used.\nIf the size could vary in width and the width could get smaller than 3rem, the\nsap.ui.core.BusyIndicatorSize.Auto option could be used.\nThe default is set to sap.ui.core.BusyIndicatorSize.Medium\nFor a full screen BusyIndicator use sap.ui.core.BusyIndicatorSize.Large."
            }, {
                "name": "visible",
                "documentation": "Whether the control should be visible on the screen. If set to false, a placeholder will be rendered to mark the location of the invisible\ncontrol in the DOM of the current page. The placeholder will be hidden and have\nzero dimensions (display: none). See sap.ui.core.RenderManager RenderManager for details."
            }, {
                "name": "fieldGroupIds",
                "documentation": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same fieldGroupId.\nOnce a logical field group is left, the validateFieldGroup event is raised. See sap.ui.core.Control."
            }, {
                "name": "validateFieldGroup",
                "documentation": "Event is fired if a logical field group defined by fieldGroupIds of a control was left\nor the user explicitly pressed a key combination that triggers validation. Listen to this event to validate data of the controls belonging to a field group.\nSee sap.ui.core.Control."
            }],
            "extendsElement": "sap.ui.core.Control",
            "documentation": "The SimpleForm provides an easy-to-use API to create simple forms.\nInside a SimpleForm, a Form control is created along with its\nFormContainers and FormElements, but the complexity in the API is removed.\n\nA new Title or Toolbar starts a new group (FormContainer) in the form.\nA new Label starts a new row (FormElement) in the form.\nAll other controls will be assigned to the row (FormElement) that started with the last label.\n\nUse LayoutData to influence the layout for special cases in the Input/Display controls. Note: If a more complex form is needed, use Form instead."
        }
    }
}
